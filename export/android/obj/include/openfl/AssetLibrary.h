// Generated by Haxe 3.4.0
#ifndef INCLUDED_openfl_AssetLibrary
#define INCLUDED_openfl_AssetLibrary

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_lime_AssetLibrary
#include <lime/AssetLibrary.h>
#endif
HX_DECLARE_CLASS1(lime,AssetLibrary)
HX_DECLARE_CLASS2(lime,app,Future)
HX_DECLARE_CLASS1(openfl,AssetLibrary)

namespace openfl{


class HXCPP_CLASS_ATTRIBUTES AssetLibrary_obj : public  ::lime::AssetLibrary_obj
{
	public:
		typedef  ::lime::AssetLibrary_obj super;
		typedef AssetLibrary_obj OBJ_;
		AssetLibrary_obj();

	public:
		enum { _hx_ClassId = 0x699b215b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="openfl.AssetLibrary")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"openfl.AssetLibrary"); }
		static hx::ObjectPtr< AssetLibrary_obj > __new();
		static hx::ObjectPtr< AssetLibrary_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~AssetLibrary_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("AssetLibrary","\x0b","\x4f","\xd4","\x27"); }

		 ::openfl::display::MovieClip getMovieClip(::String id);
		::Dynamic getMovieClip_dyn();

		 ::lime::app::Future loadMovieClip(::String id);
		::Dynamic loadMovieClip_dyn();

};

} // end namespace openfl

#endif /* INCLUDED_openfl_AssetLibrary */ 
