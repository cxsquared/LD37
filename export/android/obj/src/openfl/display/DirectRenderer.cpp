// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display_DirectRenderer
#include <openfl/display/DirectRenderer.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_755bbd090963f554_18_new,"openfl.display.DirectRenderer","new",0xe4324b68,"openfl.display.DirectRenderer.new","openfl/display/DirectRenderer.hx",18,0x16986dc6)
HX_DEFINE_STACK_FRAME(_hx_pos_755bbd090963f554_32_get_render,"openfl.display.DirectRenderer","get_render",0x6ffb5117,"openfl.display.DirectRenderer.get_render","openfl/display/DirectRenderer.hx",32,0x16986dc6)
HX_DEFINE_STACK_FRAME(_hx_pos_755bbd090963f554_39_set_render,"openfl.display.DirectRenderer","set_render",0x7378ef8b,"openfl.display.DirectRenderer.set_render","openfl/display/DirectRenderer.hx",39,0x16986dc6)
namespace openfl{
namespace display{

void DirectRenderer_obj::__construct(::String __o_type){
::String type = __o_type.Default(HX_HCSTRING("DirectRenderer","\xac","\x31","\xba","\xef"));
            	HX_STACKFRAME(&_hx_pos_755bbd090963f554_18_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(type,"type")
HXLINE(  18)		super::__construct(null());
            	}

Dynamic DirectRenderer_obj::__CreateEmpty() { return new DirectRenderer_obj; }

void *DirectRenderer_obj::_hx_vtable = 0;

Dynamic DirectRenderer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DirectRenderer_obj > _hx_result = new DirectRenderer_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool DirectRenderer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7fd42766;
}

 ::Dynamic DirectRenderer_obj::get_render(){
            	HX_STACKFRAME(&_hx_pos_755bbd090963f554_32_get_render)
            	HX_STACK_THIS(this)
HXLINE(  32)		return this->_hx___render;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DirectRenderer_obj,get_render,return )

 ::Dynamic DirectRenderer_obj::set_render( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_755bbd090963f554_39_set_render)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE(  39)		return (this->_hx___render = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DirectRenderer_obj,set_render,return )


DirectRenderer_obj::DirectRenderer_obj()
{
}

void DirectRenderer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DirectRenderer);
	HX_MARK_MEMBER_NAME(_hx___render,"__render");
	 ::openfl::display::DisplayObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DirectRenderer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_hx___render,"__render");
	 ::openfl::display::DisplayObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val DirectRenderer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"render") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_render()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__render") ) { return hx::Val( _hx___render); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_render") ) { return hx::Val( get_render_dyn()); }
		if (HX_FIELD_EQ(inName,"set_render") ) { return hx::Val( set_render_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val DirectRenderer_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"render") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_render(inValue) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__render") ) { _hx___render=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DirectRenderer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("render","\x56","\x6b","\x29","\x05"));
	outFields->push(HX_HCSTRING("__render","\x76","\xd6","\x58","\xad"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo DirectRenderer_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(DirectRenderer_obj,_hx___render),HX_HCSTRING("__render","\x76","\xd6","\x58","\xad")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *DirectRenderer_obj_sStaticStorageInfo = 0;
#endif

static ::String DirectRenderer_obj_sMemberFields[] = {
	HX_HCSTRING("__render","\x76","\xd6","\x58","\xad"),
	HX_HCSTRING("get_render","\x1f","\xdb","\xb0","\xf5"),
	HX_HCSTRING("set_render","\x93","\x79","\x2e","\xf9"),
	::String(null()) };

static void DirectRenderer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DirectRenderer_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DirectRenderer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DirectRenderer_obj::__mClass,"__mClass");
};

#endif

hx::Class DirectRenderer_obj::__mClass;

void DirectRenderer_obj::__register()
{
	hx::Object *dummy = new DirectRenderer_obj;
	DirectRenderer_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl.display.DirectRenderer","\x76","\xb7","\x06","\x85");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DirectRenderer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DirectRenderer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DirectRenderer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DirectRenderer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DirectRenderer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DirectRenderer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace display
