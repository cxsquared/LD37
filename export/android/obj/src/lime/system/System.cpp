// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_Event_Int_Void
#include <lime/app/Event_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_math_Rectangle
#include <lime/math/Rectangle.h>
#endif
#ifndef INCLUDED_lime_system_CFFI
#include <lime/system/CFFI.h>
#endif
#ifndef INCLUDED_lime_system_Display
#include <lime/system/Display.h>
#endif
#ifndef INCLUDED_lime_system_DisplayMode
#include <lime/system/DisplayMode.h>
#endif
#ifndef INCLUDED_lime_system_Endian
#include <lime/system/Endian.h>
#endif
#ifndef INCLUDED_lime_system_JNI
#include <lime/system/JNI.h>
#endif
#ifndef INCLUDED_lime_system_JNIStaticField
#include <lime/system/JNIStaticField.h>
#endif
#ifndef INCLUDED_lime_system_System
#include <lime/system/System.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_111_exit,"lime.system.System","exit",0x19210697,"lime.system.System.exit","lime/system/System.hx",111,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_149_getDisplay,"lime.system.System","getDisplay",0x2e892085,"lime.system.System.getDisplay","lime/system/System.hx",149,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_212_getTimer,"lime.system.System","getTimer",0xb1bf8f48,"lime.system.System.getTimer","lime/system/System.hx",212,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_227_load,"lime.system.System","load",0x1dbaa99f,"lime.system.System.load","lime/system/System.hx",227,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_245_get_allowScreenTimeout,"lime.system.System","get_allowScreenTimeout",0x287e314e,"lime.system.System.get_allowScreenTimeout","lime/system/System.hx",245,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_256_set_allowScreenTimeout,"lime.system.System","set_allowScreenTimeout",0x5c29adc2,"lime.system.System.set_allowScreenTimeout","lime/system/System.hx",256,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_267_get_applicationDirectory,"lime.system.System","get_applicationDirectory",0xf6955c7f,"lime.system.System.get_applicationDirectory","lime/system/System.hx",267,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_285_get_applicationStorageDirectory,"lime.system.System","get_applicationStorageDirectory",0x34818fe0,"lime.system.System.get_applicationStorageDirectory","lime/system/System.hx",285,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_328_get_desktopDirectory,"lime.system.System","get_desktopDirectory",0x483b2773,"lime.system.System.get_desktopDirectory","lime/system/System.hx",328,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_349_get_documentsDirectory,"lime.system.System","get_documentsDirectory",0x4a6a8557,"lime.system.System.get_documentsDirectory","lime/system/System.hx",349,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_370_get_fontsDirectory,"lime.system.System","get_fontsDirectory",0x8242b40b,"lime.system.System.get_fontsDirectory","lime/system/System.hx",370,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_381_get_numDisplays,"lime.system.System","get_numDisplays",0x5056f915,"lime.system.System.get_numDisplays","lime/system/System.hx",381,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_392_get_userDirectory,"lime.system.System","get_userDirectory",0x2b5522e0,"lime.system.System.get_userDirectory","lime/system/System.hx",392,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_417_get_endianness,"lime.system.System","get_endianness",0x4df50bb4,"lime.system.System.get_endianness","lime/system/System.hx",417,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_431_lime_system_get_allow_screen_timeout,"lime.system.System","lime_system_get_allow_screen_timeout",0x4db31cec,"lime.system.System.lime_system_get_allow_screen_timeout","lime/system/System.hx",431,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_432_lime_system_set_allow_screen_timeout,"lime.system.System","lime_system_set_allow_screen_timeout",0x608d9e60,"lime.system.System.lime_system_set_allow_screen_timeout","lime/system/System.hx",432,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_433_lime_system_get_directory,"lime.system.System","lime_system_get_directory",0xa47e5645,"lime.system.System.lime_system_get_directory","lime/system/System.hx",433,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_434_lime_system_get_display,"lime.system.System","lime_system_get_display",0xf596681a,"lime.system.System.lime_system_get_display","lime/system/System.hx",434,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_435_lime_system_get_num_displays,"lime.system.System","lime_system_get_num_displays",0x871a8372,"lime.system.System.lime_system_get_num_displays","lime/system/System.hx",435,0x6434b429)
HX_DEFINE_STACK_FRAME(_hx_pos_f2b41f959dca9627_436_lime_system_get_timer,"lime.system.System","lime_system_get_timer",0x2a4a579d,"lime.system.System.lime_system_get_timer","lime/system/System.hx",436,0x6434b429)
namespace lime{
namespace _hx_system{

void System_obj::__construct() { }

Dynamic System_obj::__CreateEmpty() { return new System_obj; }

void *System_obj::_hx_vtable = 0;

Dynamic System_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< System_obj > _hx_result = new System_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool System_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x36083f93;
}

::String System_obj::applicationDirectory;

::String System_obj::applicationStorageDirectory;

::String System_obj::desktopDirectory;

bool System_obj::disableCFFI;

::String System_obj::documentsDirectory;

 ::lime::_hx_system::Endian System_obj::endianness;

::String System_obj::fontsDirectory;

int System_obj::numDisplays;

::String System_obj::userDirectory;

void System_obj::exit(int code){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_111_exit)
            	HX_STACK_ARG(code,"code")
HXLINE( 115)		if ((code == (int)0)) {
HXLINE( 117)			HX_VARI(  ::lime::_hx_system::JNIStaticField,mainActivity) = ::lime::_hx_system::JNI_obj::createStaticField(HX_("org/haxe/extension/Extension",b1,f4,56,51),HX_("mainActivity",28,83,72,14),HX_("Landroid/app/Activity;",52,cb,53,45));
HXLINE( 118)			HX_VARI(  ::Dynamic,moveTaskToBack) = ::lime::_hx_system::JNI_obj::createMemberMethod(HX_("android/app/Activity",7d,f6,a1,af),HX_("moveTaskToBack",d8,80,a8,0c),HX_("(Z)Z",c3,f7,b4,1a),null(),null());
HXLINE( 120)			moveTaskToBack(mainActivity->get(),true);
            		}
HXLINE( 128)		if (hx::IsNotNull( ::lime::app::Application_obj::current )) {
HXLINE( 132)			::lime::app::Application_obj::current->onExit->dispatch(code);
HXLINE( 134)			if (::lime::app::Application_obj::current->onExit->canceled) {
HXLINE( 136)				return;
            			}
            		}
HXLINE( 142)		::Sys_obj::exit(code);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(System_obj,exit,(void))

 ::lime::_hx_system::Display System_obj::getDisplay(int id){
            	HX_GC_STACKFRAME(&_hx_pos_f2b41f959dca9627_149_getDisplay)
            	HX_STACK_ARG(id,"id")
HXLINE( 152)		HX_VARI(  ::Dynamic,displayInfo) = null();
HXLINE( 154)		if (hx::IsNotNull( displayInfo )) {
HXLINE( 156)			HX_VARI(  ::lime::_hx_system::Display,display) =  ::lime::_hx_system::Display_obj::__alloc( HX_CTX );
HXLINE( 157)			display->id = id;
HXLINE( 158)			display->name = ( (::String)(displayInfo->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) );
HXLINE( 159)			display->bounds =  ::lime::math::Rectangle_obj::__alloc( HX_CTX , ::Dynamic( ::Dynamic(displayInfo->__Field(HX_("bounds",75,86,1d,66),hx::paccDynamic))->__Field(HX_("x",78,00,00,00),hx::paccDynamic)), ::Dynamic( ::Dynamic(displayInfo->__Field(HX_("bounds",75,86,1d,66),hx::paccDynamic))->__Field(HX_("y",79,00,00,00),hx::paccDynamic)), ::Dynamic( ::Dynamic(displayInfo->__Field(HX_("bounds",75,86,1d,66),hx::paccDynamic))->__Field(HX_("width",06,b6,62,ca),hx::paccDynamic)), ::Dynamic( ::Dynamic(displayInfo->__Field(HX_("bounds",75,86,1d,66),hx::paccDynamic))->__Field(HX_("height",e7,07,4c,02),hx::paccDynamic)));
HXLINE( 160)			display->dpi = ( (Float)(displayInfo->__Field(HX_("dpi",5d,43,4c,00),hx::paccDynamic)) );
HXLINE( 162)			display->supportedModes = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 164)			HX_VAR(  ::lime::_hx_system::DisplayMode,displayMode);
HXLINE( 166)			{
HXLINE( 166)				HX_VARI( int,_g) = (int)0;
HXDLIN( 166)				HX_VARI( ::cpp::VirtualArray,_g1) = hx::TCast< ::cpp::VirtualArray >::cast( ::Dynamic(displayInfo->__Field(HX_("supportedModes",a2,a6,b8,b7),hx::paccDynamic)));
HXDLIN( 166)				while((_g < _g1->get_length())){
HXLINE( 166)					HX_VARI(  ::Dynamic,mode) = _g1->__get(_g);
HXDLIN( 166)					_g = (_g + (int)1);
HXLINE( 168)					displayMode =  ::lime::_hx_system::DisplayMode_obj::__alloc( HX_CTX , ::Dynamic(mode->__Field(HX_("width",06,b6,62,ca),hx::paccDynamic)), ::Dynamic(mode->__Field(HX_("height",e7,07,4c,02),hx::paccDynamic)), ::Dynamic(mode->__Field(HX_("refreshRate",5b,e2,3f,40),hx::paccDynamic)), ::Dynamic(mode->__Field(HX_("pixelFormat",5d,72,1b,6f),hx::paccDynamic)));
HXLINE( 169)					display->supportedModes->push(displayMode);
            				}
            			}
HXLINE( 173)			display->currentMode = display->supportedModes->__get(( (int)(displayInfo->__Field(HX_("currentMode",3c,ac,f2,80),hx::paccDynamic)) )).StaticCast<  ::lime::_hx_system::DisplayMode >();
HXLINE( 175)			return display;
            		}
HXLINE( 200)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(System_obj,getDisplay,return )

int System_obj::getTimer(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_212_getTimer)
HXLINE( 212)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,getTimer,return )

 ::Dynamic System_obj::load(::String library,::String method,hx::Null< int >  __o_args,hx::Null< bool >  __o_lazy){
int args = __o_args.Default(0);
bool lazy = __o_lazy.Default(false);
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_227_load)
            	HX_STACK_ARG(library,"library")
            	HX_STACK_ARG(method,"method")
            	HX_STACK_ARG(args,"args")
            	HX_STACK_ARG(lazy,"lazy")
HXLINE( 227)		return ::lime::_hx_system::CFFI_obj::load(library,method,args,lazy);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(System_obj,load,return )

bool System_obj::get_allowScreenTimeout(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_245_get_allowScreenTimeout)
HXLINE( 245)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,get_allowScreenTimeout,return )

bool System_obj::set_allowScreenTimeout(bool value){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_256_set_allowScreenTimeout)
            	HX_STACK_ARG(value,"value")
HXLINE( 256)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(System_obj,set_allowScreenTimeout,return )

::String System_obj::get_applicationDirectory(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_267_get_applicationDirectory)
HXLINE( 267)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,get_applicationDirectory,return )

::String System_obj::get_applicationStorageDirectory(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_285_get_applicationStorageDirectory)
HXLINE( 290)		bool _hx_tmp;
HXDLIN( 290)		if (hx::IsNotNull( ::lime::app::Application_obj::current )) {
HXLINE( 290)			_hx_tmp = hx::IsNotNull( ::lime::app::Application_obj::current->config );
            		}
            		else {
HXLINE( 290)			_hx_tmp = false;
            		}
HXLINE( 307)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,get_applicationStorageDirectory,return )

::String System_obj::get_desktopDirectory(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_328_get_desktopDirectory)
HXLINE( 328)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,get_desktopDirectory,return )

::String System_obj::get_documentsDirectory(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_349_get_documentsDirectory)
HXLINE( 349)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,get_documentsDirectory,return )

::String System_obj::get_fontsDirectory(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_370_get_fontsDirectory)
HXLINE( 370)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,get_fontsDirectory,return )

int System_obj::get_numDisplays(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_381_get_numDisplays)
HXLINE( 381)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,get_numDisplays,return )

::String System_obj::get_userDirectory(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_392_get_userDirectory)
HXLINE( 392)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,get_userDirectory,return )

 ::lime::_hx_system::Endian System_obj::get_endianness(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_417_get_endianness)
HXLINE( 417)		return ::lime::_hx_system::Endian_obj::_hx_LITTLE_ENDIAN_dyn();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,get_endianness,return )

bool System_obj::lime_system_get_allow_screen_timeout(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_431_lime_system_get_allow_screen_timeout)
HXLINE( 431)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,lime_system_get_allow_screen_timeout,return )

bool System_obj::lime_system_set_allow_screen_timeout(bool value){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_432_lime_system_set_allow_screen_timeout)
            	HX_STACK_ARG(value,"value")
HXLINE( 432)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(System_obj,lime_system_set_allow_screen_timeout,return )

 ::Dynamic System_obj::lime_system_get_directory(int type,::String company,::String title){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_433_lime_system_get_directory)
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(company,"company")
            	HX_STACK_ARG(title,"title")
HXLINE( 433)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(System_obj,lime_system_get_directory,return )

 ::Dynamic System_obj::lime_system_get_display(int index){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_434_lime_system_get_display)
            	HX_STACK_ARG(index,"index")
HXLINE( 434)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(System_obj,lime_system_get_display,return )

int System_obj::lime_system_get_num_displays(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_435_lime_system_get_num_displays)
HXLINE( 435)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,lime_system_get_num_displays,return )

Float System_obj::lime_system_get_timer(){
            	HX_STACKFRAME(&_hx_pos_f2b41f959dca9627_436_lime_system_get_timer)
HXLINE( 436)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(System_obj,lime_system_get_timer,return )


System_obj::System_obj()
{
}

bool System_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"exit") ) { outValue = exit_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"load") ) { outValue = load_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getTimer") ) { outValue = getTimer_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"endianness") ) { outValue = inCallProp == hx::paccAlways ? get_endianness() : endianness; return true; }
		if (HX_FIELD_EQ(inName,"getDisplay") ) { outValue = getDisplay_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"disableCFFI") ) { outValue = disableCFFI; return true; }
		if (HX_FIELD_EQ(inName,"numDisplays") ) { outValue = inCallProp == hx::paccAlways ? get_numDisplays() : numDisplays; return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"userDirectory") ) { outValue = inCallProp == hx::paccAlways ? get_userDirectory() : userDirectory; return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"fontsDirectory") ) { outValue = inCallProp == hx::paccAlways ? get_fontsDirectory() : fontsDirectory; return true; }
		if (HX_FIELD_EQ(inName,"get_endianness") ) { outValue = get_endianness_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_numDisplays") ) { outValue = get_numDisplays_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"desktopDirectory") ) { outValue = inCallProp == hx::paccAlways ? get_desktopDirectory() : desktopDirectory; return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_userDirectory") ) { outValue = get_userDirectory_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"allowScreenTimeout") ) { if (inCallProp == hx::paccAlways) { outValue = get_allowScreenTimeout(); return true; } }
		if (HX_FIELD_EQ(inName,"documentsDirectory") ) { outValue = inCallProp == hx::paccAlways ? get_documentsDirectory() : documentsDirectory; return true; }
		if (HX_FIELD_EQ(inName,"get_fontsDirectory") ) { outValue = get_fontsDirectory_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"applicationDirectory") ) { outValue = inCallProp == hx::paccAlways ? get_applicationDirectory() : applicationDirectory; return true; }
		if (HX_FIELD_EQ(inName,"get_desktopDirectory") ) { outValue = get_desktopDirectory_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_system_get_timer") ) { outValue = lime_system_get_timer_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"get_allowScreenTimeout") ) { outValue = get_allowScreenTimeout_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_allowScreenTimeout") ) { outValue = set_allowScreenTimeout_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_documentsDirectory") ) { outValue = get_documentsDirectory_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"lime_system_get_display") ) { outValue = lime_system_get_display_dyn(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"get_applicationDirectory") ) { outValue = get_applicationDirectory_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"lime_system_get_directory") ) { outValue = lime_system_get_directory_dyn(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"applicationStorageDirectory") ) { outValue = inCallProp == hx::paccAlways ? get_applicationStorageDirectory() : applicationStorageDirectory; return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"lime_system_get_num_displays") ) { outValue = lime_system_get_num_displays_dyn(); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"get_applicationStorageDirectory") ) { outValue = get_applicationStorageDirectory_dyn(); return true; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"lime_system_get_allow_screen_timeout") ) { outValue = lime_system_get_allow_screen_timeout_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_system_set_allow_screen_timeout") ) { outValue = lime_system_set_allow_screen_timeout_dyn(); return true; }
	}
	return false;
}

bool System_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"endianness") ) { endianness=ioValue.Cast<  ::lime::_hx_system::Endian >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"disableCFFI") ) { disableCFFI=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"numDisplays") ) { numDisplays=ioValue.Cast< int >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"userDirectory") ) { userDirectory=ioValue.Cast< ::String >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"fontsDirectory") ) { fontsDirectory=ioValue.Cast< ::String >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"desktopDirectory") ) { desktopDirectory=ioValue.Cast< ::String >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"allowScreenTimeout") ) { if (inCallProp == hx::paccAlways)  ioValue = set_allowScreenTimeout(ioValue); }
		if (HX_FIELD_EQ(inName,"documentsDirectory") ) { documentsDirectory=ioValue.Cast< ::String >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"applicationDirectory") ) { applicationDirectory=ioValue.Cast< ::String >(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"applicationStorageDirectory") ) { applicationStorageDirectory=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *System_obj_sMemberStorageInfo = 0;
static hx::StaticInfo System_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &System_obj::applicationDirectory,HX_HCSTRING("applicationDirectory","\xfd","\x3c","\x71","\x25")},
	{hx::fsString,(void *) &System_obj::applicationStorageDirectory,HX_HCSTRING("applicationStorageDirectory","\x22","\xdb","\xb5","\xb1")},
	{hx::fsString,(void *) &System_obj::desktopDirectory,HX_HCSTRING("desktopDirectory","\xf1","\x70","\x41","\xaf")},
	{hx::fsBool,(void *) &System_obj::disableCFFI,HX_HCSTRING("disableCFFI","\x8e","\x24","\xb6","\x11")},
	{hx::fsString,(void *) &System_obj::documentsDirectory,HX_HCSTRING("documentsDirectory","\x55","\xaa","\xb4","\x36")},
	{hx::fsObject /*::lime::_hx_system::Endian*/ ,(void *) &System_obj::endianness,HX_HCSTRING("endianness","\xb2","\x02","\xd3","\x4e")},
	{hx::fsString,(void *) &System_obj::fontsDirectory,HX_HCSTRING("fontsDirectory","\x09","\x02","\x1b","\x88")},
	{hx::fsInt,(void *) &System_obj::numDisplays,HX_HCSTRING("numDisplays","\x57","\x20","\xb1","\x11")},
	{hx::fsString,(void *) &System_obj::userDirectory,HX_HCSTRING("userDirectory","\xa2","\x1e","\xf9","\x94")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void System_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(System_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(System_obj::applicationDirectory,"applicationDirectory");
	HX_MARK_MEMBER_NAME(System_obj::applicationStorageDirectory,"applicationStorageDirectory");
	HX_MARK_MEMBER_NAME(System_obj::desktopDirectory,"desktopDirectory");
	HX_MARK_MEMBER_NAME(System_obj::disableCFFI,"disableCFFI");
	HX_MARK_MEMBER_NAME(System_obj::documentsDirectory,"documentsDirectory");
	HX_MARK_MEMBER_NAME(System_obj::endianness,"endianness");
	HX_MARK_MEMBER_NAME(System_obj::fontsDirectory,"fontsDirectory");
	HX_MARK_MEMBER_NAME(System_obj::numDisplays,"numDisplays");
	HX_MARK_MEMBER_NAME(System_obj::userDirectory,"userDirectory");
};

#ifdef HXCPP_VISIT_ALLOCS
static void System_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(System_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(System_obj::applicationDirectory,"applicationDirectory");
	HX_VISIT_MEMBER_NAME(System_obj::applicationStorageDirectory,"applicationStorageDirectory");
	HX_VISIT_MEMBER_NAME(System_obj::desktopDirectory,"desktopDirectory");
	HX_VISIT_MEMBER_NAME(System_obj::disableCFFI,"disableCFFI");
	HX_VISIT_MEMBER_NAME(System_obj::documentsDirectory,"documentsDirectory");
	HX_VISIT_MEMBER_NAME(System_obj::endianness,"endianness");
	HX_VISIT_MEMBER_NAME(System_obj::fontsDirectory,"fontsDirectory");
	HX_VISIT_MEMBER_NAME(System_obj::numDisplays,"numDisplays");
	HX_VISIT_MEMBER_NAME(System_obj::userDirectory,"userDirectory");
};

#endif

hx::Class System_obj::__mClass;

static ::String System_obj_sStaticFields[] = {
	HX_HCSTRING("applicationDirectory","\xfd","\x3c","\x71","\x25"),
	HX_HCSTRING("applicationStorageDirectory","\x22","\xdb","\xb5","\xb1"),
	HX_HCSTRING("desktopDirectory","\xf1","\x70","\x41","\xaf"),
	HX_HCSTRING("disableCFFI","\x8e","\x24","\xb6","\x11"),
	HX_HCSTRING("documentsDirectory","\x55","\xaa","\xb4","\x36"),
	HX_HCSTRING("endianness","\xb2","\x02","\xd3","\x4e"),
	HX_HCSTRING("fontsDirectory","\x09","\x02","\x1b","\x88"),
	HX_HCSTRING("numDisplays","\x57","\x20","\xb1","\x11"),
	HX_HCSTRING("userDirectory","\xa2","\x1e","\xf9","\x94"),
	HX_HCSTRING("exit","\x1e","\xf7","\x1d","\x43"),
	HX_HCSTRING("getDisplay","\x4c","\xb0","\xab","\x0a"),
	HX_HCSTRING("getTimer","\x4f","\xcf","\x0c","\x70"),
	HX_HCSTRING("load","\x26","\x9a","\xb7","\x47"),
	HX_HCSTRING("get_allowScreenTimeout","\x95","\xcf","\x5c","\x6e"),
	HX_HCSTRING("set_allowScreenTimeout","\x09","\x4c","\x08","\xa2"),
	HX_HCSTRING("get_applicationDirectory","\x86","\x5a","\x0d","\x68"),
	HX_HCSTRING("get_applicationStorageDirectory","\xb9","\x70","\x86","\x8d"),
	HX_HCSTRING("get_desktopDirectory","\xfa","\xd5","\xab","\xcd"),
	HX_HCSTRING("get_documentsDirectory","\x9e","\x23","\x49","\x90"),
	HX_HCSTRING("get_fontsDirectory","\xd2","\xe2","\xb4","\x23"),
	HX_HCSTRING("get_numDisplays","\xee","\xd7","\x92","\xd2"),
	HX_HCSTRING("get_userDirectory","\xf9","\x29","\x69","\x9b"),
	HX_HCSTRING("get_endianness","\xfb","\x8a","\xc8","\xc4"),
	HX_HCSTRING("lime_system_get_allow_screen_timeout","\x73","\x89","\x73","\x7a"),
	HX_HCSTRING("lime_system_set_allow_screen_timeout","\xe7","\x0a","\x4e","\x8d"),
	HX_HCSTRING("lime_system_get_directory","\x5e","\x9e","\x04","\x7c"),
	HX_HCSTRING("lime_system_get_display","\xf3","\x47","\x82","\xd2"),
	HX_HCSTRING("lime_system_get_num_displays","\xf9","\x90","\x37","\x4f"),
	HX_HCSTRING("lime_system_get_timer","\x36","\x5f","\x72","\x67"),
	::String(null())
};

void System_obj::__register()
{
	hx::Object *dummy = new System_obj;
	System_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.system.System","\x95","\x83","\xbd","\xac");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &System_obj::__GetStatic;
	__mClass->mSetStaticField = &System_obj::__SetStatic;
	__mClass->mMarkFunc = System_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(System_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< System_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = System_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = System_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = System_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace system
