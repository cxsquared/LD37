// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_lime_system__CFFIPointer_CFFIPointer_Impl_
#include <lime/system/_CFFIPointer/CFFIPointer_Impl_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_11__new,"lime.system._CFFIPointer.CFFIPointer_Impl_","_new",0xca839748,"lime.system._CFFIPointer.CFFIPointer_Impl_._new","lime/system/CFFIPointer.hx",11,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_18_get,"lime.system._CFFIPointer.CFFIPointer_Impl_","get",0xe8d2f88f,"lime.system._CFFIPointer.CFFIPointer_Impl_.get","lime/system/CFFIPointer.hx",18,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_33_equals,"lime.system._CFFIPointer.CFFIPointer_Impl_","equals",0x4ee8f7e6,"lime.system._CFFIPointer.CFFIPointer_Impl_.equals","lime/system/CFFIPointer.hx",33,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_34_equalsPointer,"lime.system._CFFIPointer.CFFIPointer_Impl_","equalsPointer",0x0bf95977,"lime.system._CFFIPointer.CFFIPointer_Impl_.equalsPointer","lime/system/CFFIPointer.hx",34,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_35_greaterThan,"lime.system._CFFIPointer.CFFIPointer_Impl_","greaterThan",0xe66d5a74,"lime.system._CFFIPointer.CFFIPointer_Impl_.greaterThan","lime/system/CFFIPointer.hx",35,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_36_greaterThanPointer,"lime.system._CFFIPointer.CFFIPointer_Impl_","greaterThanPointer",0x36a084a9,"lime.system._CFFIPointer.CFFIPointer_Impl_.greaterThanPointer","lime/system/CFFIPointer.hx",36,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_37_greaterThanOrEqual,"lime.system._CFFIPointer.CFFIPointer_Impl_","greaterThanOrEqual",0x87aca37d,"lime.system._CFFIPointer.CFFIPointer_Impl_.greaterThanOrEqual","lime/system/CFFIPointer.hx",37,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_38_greaterThanOrEqualPointer,"lime.system._CFFIPointer.CFFIPointer_Impl_","greaterThanOrEqualPointer",0x30925ec0,"lime.system._CFFIPointer.CFFIPointer_Impl_.greaterThanOrEqualPointer","lime/system/CFFIPointer.hx",38,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_39_lessThan,"lime.system._CFFIPointer.CFFIPointer_Impl_","lessThan",0xb2fd60c1,"lime.system._CFFIPointer.CFFIPointer_Impl_.lessThan","lime/system/CFFIPointer.hx",39,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_40_lessThanPointer,"lime.system._CFFIPointer.CFFIPointer_Impl_","lessThanPointer",0x7ee991fc,"lime.system._CFFIPointer.CFFIPointer_Impl_.lessThanPointer","lime/system/CFFIPointer.hx",40,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_41_lessThanOrEqual,"lime.system._CFFIPointer.CFFIPointer_Impl_","lessThanOrEqual",0xcff5b0d0,"lime.system._CFFIPointer.CFFIPointer_Impl_.lessThanOrEqual","lime/system/CFFIPointer.hx",41,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_42_lessThanOrEqualPointer,"lime.system._CFFIPointer.CFFIPointer_Impl_","lessThanOrEqualPointer",0x8e8ff1cd,"lime.system._CFFIPointer.CFFIPointer_Impl_.lessThanOrEqualPointer","lime/system/CFFIPointer.hx",42,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_43_notEquals,"lime.system._CFFIPointer.CFFIPointer_Impl_","notEquals",0x4cf4046b,"lime.system._CFFIPointer.CFFIPointer_Impl_.notEquals","lime/system/CFFIPointer.hx",43,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_44_notEqualsPointer,"lime.system._CFFIPointer.CFFIPointer_Impl_","notEqualsPointer",0xc9dd1792,"lime.system._CFFIPointer.CFFIPointer_Impl_.notEqualsPointer","lime/system/CFFIPointer.hx",44,0x1e20e50d)
HX_DEFINE_STACK_FRAME(_hx_pos_8fcb9e40ce43c93a_55_lime_cffi_get_native_pointer,"lime.system._CFFIPointer.CFFIPointer_Impl_","lime_cffi_get_native_pointer",0x697db154,"lime.system._CFFIPointer.CFFIPointer_Impl_.lime_cffi_get_native_pointer","lime/system/CFFIPointer.hx",55,0x1e20e50d)
namespace lime{
namespace _hx_system{
namespace _CFFIPointer{

void CFFIPointer_Impl__obj::__construct() { }

Dynamic CFFIPointer_Impl__obj::__CreateEmpty() { return new CFFIPointer_Impl__obj; }

void *CFFIPointer_Impl__obj::_hx_vtable = 0;

Dynamic CFFIPointer_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CFFIPointer_Impl__obj > _hx_result = new CFFIPointer_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CFFIPointer_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2488cd1b;
}

 ::Dynamic CFFIPointer_Impl__obj::_new( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_11__new)
            	HX_STACK_ARG(handle,"handle")
HXLINE(  11)		return handle;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CFFIPointer_Impl__obj,_new,return )

Float CFFIPointer_Impl__obj::get( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_18_get)
            	HX_STACK_ARG(this1,"this1")
HXLINE(  20)		if (hx::IsNotNull( this1 )) {
HXLINE(  23)			return (int)0;
            		}
HXLINE(  28)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CFFIPointer_Impl__obj,get,return )

bool CFFIPointer_Impl__obj::equals( ::Dynamic a,int b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_33_equals)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  33)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) == b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,equals,return )

bool CFFIPointer_Impl__obj::equalsPointer( ::Dynamic a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_34_equalsPointer)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  34)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) == ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,equalsPointer,return )

bool CFFIPointer_Impl__obj::greaterThan( ::Dynamic a,int b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_35_greaterThan)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  35)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) > b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,greaterThan,return )

bool CFFIPointer_Impl__obj::greaterThanPointer( ::Dynamic a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_36_greaterThanPointer)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  36)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) > ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,greaterThanPointer,return )

bool CFFIPointer_Impl__obj::greaterThanOrEqual( ::Dynamic a,int b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_37_greaterThanOrEqual)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  37)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) >= b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,greaterThanOrEqual,return )

bool CFFIPointer_Impl__obj::greaterThanOrEqualPointer( ::Dynamic a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_38_greaterThanOrEqualPointer)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  38)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) >= ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,greaterThanOrEqualPointer,return )

bool CFFIPointer_Impl__obj::lessThan( ::Dynamic a,int b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_39_lessThan)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  39)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) < b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,lessThan,return )

bool CFFIPointer_Impl__obj::lessThanPointer( ::Dynamic a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_40_lessThanPointer)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  40)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) < ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,lessThanPointer,return )

bool CFFIPointer_Impl__obj::lessThanOrEqual( ::Dynamic a,int b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_41_lessThanOrEqual)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  41)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) <= b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,lessThanOrEqual,return )

bool CFFIPointer_Impl__obj::lessThanOrEqualPointer( ::Dynamic a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_42_lessThanOrEqualPointer)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  42)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) <= ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,lessThanOrEqualPointer,return )

bool CFFIPointer_Impl__obj::notEquals( ::Dynamic a,int b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_43_notEquals)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  43)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) != b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,notEquals,return )

bool CFFIPointer_Impl__obj::notEqualsPointer( ::Dynamic a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_44_notEqualsPointer)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE(  44)		return (::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a) != ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CFFIPointer_Impl__obj,notEqualsPointer,return )

Float CFFIPointer_Impl__obj::lime_cffi_get_native_pointer( ::Dynamic ptr){
            	HX_STACKFRAME(&_hx_pos_8fcb9e40ce43c93a_55_lime_cffi_get_native_pointer)
            	HX_STACK_ARG(ptr,"ptr")
HXLINE(  55)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CFFIPointer_Impl__obj,lime_cffi_get_native_pointer,return )


CFFIPointer_Impl__obj::CFFIPointer_Impl__obj()
{
}

bool CFFIPointer_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"equals") ) { outValue = equals_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"lessThan") ) { outValue = lessThan_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"notEquals") ) { outValue = notEquals_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"greaterThan") ) { outValue = greaterThan_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"equalsPointer") ) { outValue = equalsPointer_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"lessThanPointer") ) { outValue = lessThanPointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lessThanOrEqual") ) { outValue = lessThanOrEqual_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"notEqualsPointer") ) { outValue = notEqualsPointer_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"greaterThanPointer") ) { outValue = greaterThanPointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"greaterThanOrEqual") ) { outValue = greaterThanOrEqual_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"lessThanOrEqualPointer") ) { outValue = lessThanOrEqualPointer_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"greaterThanOrEqualPointer") ) { outValue = greaterThanOrEqualPointer_dyn(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"lime_cffi_get_native_pointer") ) { outValue = lime_cffi_get_native_pointer_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *CFFIPointer_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *CFFIPointer_Impl__obj_sStaticStorageInfo = 0;
#endif

static void CFFIPointer_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CFFIPointer_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CFFIPointer_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CFFIPointer_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class CFFIPointer_Impl__obj::__mClass;

static ::String CFFIPointer_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("equals","\x3f","\xee","\xf2","\xbf"),
	HX_HCSTRING("equalsPointer","\x3e","\xd0","\x43","\x1a"),
	HX_HCSTRING("greaterThan","\x7b","\xc1","\x4a","\x75"),
	HX_HCSTRING("greaterThanPointer","\x82","\x1c","\xaf","\xc9"),
	HX_HCSTRING("greaterThanOrEqual","\x56","\x3b","\xbb","\x1a"),
	HX_HCSTRING("greaterThanOrEqualPointer","\x07","\x64","\x57","\x78"),
	HX_HCSTRING("lessThan","\x5a","\x5f","\x34","\xf3"),
	HX_HCSTRING("lessThanPointer","\x83","\x88","\xd4","\x8d"),
	HX_HCSTRING("lessThanOrEqual","\x57","\xa7","\xe0","\xde"),
	HX_HCSTRING("lessThanOrEqualPointer","\x26","\xea","\x29","\x34"),
	HX_HCSTRING("notEquals","\xb2","\xcb","\xdb","\x3c"),
	HX_HCSTRING("notEqualsPointer","\x2b","\xd7","\x89","\xc8"),
	HX_HCSTRING("lime_cffi_get_native_pointer","\x6d","\xf2","\xd7","\x07"),
	::String(null())
};

void CFFIPointer_Impl__obj::__register()
{
	hx::Object *dummy = new CFFIPointer_Impl__obj;
	CFFIPointer_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.system._CFFIPointer.CFFIPointer_Impl_","\xe7","\x27","\x6d","\x6d");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CFFIPointer_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = CFFIPointer_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(CFFIPointer_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< CFFIPointer_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CFFIPointer_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CFFIPointer_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CFFIPointer_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace system
} // end namespace _CFFIPointer
