// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeWindow
#include <lime/_backend/native/NativeWindow.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_Event_Float_Float_Int_Void
#include <lime/app/Event_Float_Float_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app_Event_Float_Float_Void
#include <lime/app/Event_Float_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app_Event_Int_Int_Void
#include <lime/app/Event_Int_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app_Event_String_Int_Int_Void
#include <lime/app/Event_String_Int_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app_Event_String_Void
#include <lime/app/Event_String_Void.h>
#endif
#ifndef INCLUDED_lime_app_Event_Void_Void
#include <lime/app/Event_Void_Void.h>
#endif
#ifndef INCLUDED_lime_app_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void
#include <lime/app/Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_graphics_Renderer
#include <lime/graphics/Renderer.h>
#endif
#ifndef INCLUDED_lime_system_Display
#include <lime/system/Display.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_20_new,"lime.ui.Window","new",0xbff4f5c3,"lime.ui.Window.new","lime/ui/Window.hx",20,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_112_alert,"lime.ui.Window","alert",0xe7cddb7f,"lime.ui.Window.alert","lime/ui/Window.hx",112,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_119_close,"lime.ui.Window","close",0x0ea29bdb,"lime.ui.Window.close","lime/ui/Window.hx",119,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_124_create,"lime.ui.Window","create",0x2d638179,"lime.ui.Window.create","lime/ui/Window.hx",124,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_268_focus,"lime.ui.Window","focus",0xcac8e3fb,"lime.ui.Window.focus","lime/ui/Window.hx",268,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_273_move,"lime.ui.Window","move",0x35c0744e,"lime.ui.Window.move","lime/ui/Window.hx",273,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_283_resize,"lime.ui.Window","resize",0xb9cf7471,"lime.ui.Window.resize","lime/ui/Window.hx",283,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_295_setIcon,"lime.ui.Window","setIcon",0x837a3b1e,"lime.ui.Window.setIcon","lime/ui/Window.hx",295,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_308_toString,"lime.ui.Window","toString",0xfadc4469,"lime.ui.Window.toString","lime/ui/Window.hx",308,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_322_get_display,"lime.ui.Window","get_display",0x816e4abc,"lime.ui.Window.get_display","lime/ui/Window.hx",322,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_329_get_borderless,"lime.ui.Window","get_borderless",0x37452e0b,"lime.ui.Window.get_borderless","lime/ui/Window.hx",329,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_336_set_borderless,"lime.ui.Window","set_borderless",0x5765167f,"lime.ui.Window.set_borderless","lime/ui/Window.hx",336,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_343_get_enableTextEvents,"lime.ui.Window","get_enableTextEvents",0xb1dee44f,"lime.ui.Window.get_enableTextEvents","lime/ui/Window.hx",343,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_350_set_enableTextEvents,"lime.ui.Window","set_enableTextEvents",0x7e969bc3,"lime.ui.Window.set_enableTextEvents","lime/ui/Window.hx",350,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_357_get_fullscreen,"lime.ui.Window","get_fullscreen",0x19882201,"lime.ui.Window.get_fullscreen","lime/ui/Window.hx",357,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_364_set_fullscreen,"lime.ui.Window","set_fullscreen",0x39a80a75,"lime.ui.Window.set_fullscreen","lime/ui/Window.hx",364,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_371_get_height,"lime.ui.Window","get_height",0x425314ad,"lime.ui.Window.get_height","lime/ui/Window.hx",371,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_376_set_height,"lime.ui.Window","set_height",0x45d0b321,"lime.ui.Window.set_height","lime/ui/Window.hx",376,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_386_get_maximized,"lime.ui.Window","get_maximized",0xaea9c112,"lime.ui.Window.get_maximized","lime/ui/Window.hx",386,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_391_set_maximized,"lime.ui.Window","set_maximized",0xf3afa31e,"lime.ui.Window.set_maximized","lime/ui/Window.hx",391,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_401_get_minimized,"lime.ui.Window","get_minimized",0xd866ae80,"lime.ui.Window.get_minimized","lime/ui/Window.hx",401,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_406_set_minimized,"lime.ui.Window","set_minimized",0x1d6c908c,"lime.ui.Window.set_minimized","lime/ui/Window.hx",406,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_416_get_resizable,"lime.ui.Window","get_resizable",0x5918ea65,"lime.ui.Window.get_resizable","lime/ui/Window.hx",416,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_421_set_resizable,"lime.ui.Window","set_resizable",0x9e1ecc71,"lime.ui.Window.set_resizable","lime/ui/Window.hx",421,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_431_get_scale,"lime.ui.Window","get_scale",0x19cffc84,"lime.ui.Window.get_scale","lime/ui/Window.hx",431,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_438_get_title,"lime.ui.Window","get_title",0xb13c4392,"lime.ui.Window.get_title","lime/ui/Window.hx",438,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_445_set_title,"lime.ui.Window","set_title",0x948d2f9e,"lime.ui.Window.set_title","lime/ui/Window.hx",445,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_452_get_width,"lime.ui.Window","get_width",0x6b63e400,"lime.ui.Window.get_width","lime/ui/Window.hx",452,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_457_set_width,"lime.ui.Window","set_width",0x4eb4d00c,"lime.ui.Window.set_width","lime/ui/Window.hx",457,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_467_get_x,"lime.ui.Window","get_x",0x57a02972,"lime.ui.Window.get_x","lime/ui/Window.hx",467,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_472_set_x,"lime.ui.Window","set_x",0x406f1f7e,"lime.ui.Window.set_x","lime/ui/Window.hx",472,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_482_get_y,"lime.ui.Window","get_y",0x57a02973,"lime.ui.Window.get_y","lime/ui/Window.hx",482,0x6ac7286d)
HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_487_set_y,"lime.ui.Window","set_y",0x406f1f7f,"lime.ui.Window.set_y","lime/ui/Window.hx",487,0x6ac7286d)
namespace lime{
namespace ui{

void Window_obj::__construct( ::Dynamic config){
            	HX_GC_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_20_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(config,"config")
HXLINE(  55)		this->onTextInput =  ::lime::app::Event_String_Void_obj::__alloc( HX_CTX );
HXLINE(  54)		this->onTextEdit =  ::lime::app::Event_String_Int_Int_Void_obj::__alloc( HX_CTX );
HXLINE(  53)		this->onRestore =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  52)		this->onResize =  ::lime::app::Event_Int_Int_Void_obj::__alloc( HX_CTX );
HXLINE(  51)		this->onMove =  ::lime::app::Event_Float_Float_Void_obj::__alloc( HX_CTX );
HXLINE(  50)		this->onMouseWheel =  ::lime::app::Event_Float_Float_Void_obj::__alloc( HX_CTX );
HXLINE(  49)		this->onMouseUp =  ::lime::app::Event_Float_Float_Int_Void_obj::__alloc( HX_CTX );
HXLINE(  48)		this->onMouseMoveRelative =  ::lime::app::Event_Float_Float_Void_obj::__alloc( HX_CTX );
HXLINE(  47)		this->onMouseMove =  ::lime::app::Event_Float_Float_Void_obj::__alloc( HX_CTX );
HXLINE(  46)		this->onMouseDown =  ::lime::app::Event_Float_Float_Int_Void_obj::__alloc( HX_CTX );
HXLINE(  45)		this->onMinimize =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  44)		this->onLeave =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  43)		this->onKeyUp =  ::lime::app::Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void_obj::__alloc( HX_CTX );
HXLINE(  42)		this->onKeyDown =  ::lime::app::Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void_obj::__alloc( HX_CTX );
HXLINE(  41)		this->onFullscreen =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  40)		this->onFocusOut =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  39)		this->onFocusIn =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  38)		this->onEnter =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  37)		this->onDropFile =  ::lime::app::Event_String_Void_obj::__alloc( HX_CTX );
HXLINE(  36)		this->onDeactivate =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  35)		this->onCreate =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  34)		this->onClose =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  33)		this->onActivate =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  81)		this->config = config;
HXLINE(  83)		this->_hx___width = (int)0;
HXLINE(  84)		this->_hx___height = (int)0;
HXLINE(  85)		this->_hx___fullscreen = false;
HXLINE(  86)		this->_hx___scale = (int)1;
HXLINE(  87)		this->_hx___x = (int)0;
HXLINE(  88)		this->_hx___y = (int)0;
HXLINE(  89)		this->_hx___title = HX_("",00,00,00,00);
HXLINE(  90)		this->id = (int)-1;
HXLINE(  92)		if (hx::IsNotNull( config )) {
HXLINE(  94)			if (::Reflect_obj::hasField(config,HX_("width",06,b6,62,ca))) {
HXLINE(  94)				this->_hx___width = ( (int)(config->__Field(HX_("width",06,b6,62,ca),hx::paccDynamic)) );
            			}
HXLINE(  95)			if (::Reflect_obj::hasField(config,HX_("height",e7,07,4c,02))) {
HXLINE(  95)				this->_hx___height = ( (int)(config->__Field(HX_("height",e7,07,4c,02),hx::paccDynamic)) );
            			}
HXLINE(  96)			if (::Reflect_obj::hasField(config,HX_("x",78,00,00,00))) {
HXLINE(  96)				this->_hx___x = ( (int)(config->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) );
            			}
HXLINE(  97)			if (::Reflect_obj::hasField(config,HX_("y",79,00,00,00))) {
HXLINE(  97)				this->_hx___y = ( (int)(config->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) );
            			}
HXLINE(  98)			if (::Reflect_obj::hasField(config,HX_("fullscreen",3b,3a,b4,f9))) {
HXLINE(  98)				this->_hx___fullscreen = ( (bool)(config->__Field(HX_("fullscreen",3b,3a,b4,f9),hx::paccDynamic)) );
            			}
HXLINE(  99)			if (::Reflect_obj::hasField(config,HX_("borderless",45,46,71,17))) {
HXLINE(  99)				this->_hx___borderless = ( (bool)(config->__Field(HX_("borderless",45,46,71,17),hx::paccDynamic)) );
            			}
HXLINE( 100)			if (::Reflect_obj::hasField(config,HX_("resizable",6b,37,50,a9))) {
HXLINE( 100)				this->_hx___resizable = ( (bool)(config->__Field(HX_("resizable",6b,37,50,a9),hx::paccDynamic)) );
            			}
HXLINE( 101)			if (::Reflect_obj::hasField(config,HX_("title",98,15,3b,10))) {
HXLINE( 101)				this->_hx___title = ( (::String)(config->__Field(HX_("title",98,15,3b,10),hx::paccDynamic)) );
            			}
            		}
HXLINE( 105)		this->backend =  ::lime::_backend::native::NativeWindow_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this));
            	}

Dynamic Window_obj::__CreateEmpty() { return new Window_obj; }

void *Window_obj::_hx_vtable = 0;

Dynamic Window_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Window_obj > _hx_result = new Window_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Window_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1abdb2dd;
}

void Window_obj::alert(::String message,::String title){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_112_alert)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(message,"message")
            	HX_STACK_ARG(title,"title")
            	}


HX_DEFINE_DYNAMIC_FUNC2(Window_obj,alert,(void))

void Window_obj::close(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_119_close)
            	HX_STACK_THIS(this)
HXLINE( 119)		this->backend->close();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,close,(void))

void Window_obj::create( ::lime::app::Application application){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_124_create)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(application,"application")
HXLINE( 126)		this->application = application;
HXLINE( 128)		this->backend->create(application);
HXLINE( 257)		if (hx::IsNotNull( this->renderer )) {
HXLINE( 259)			this->renderer->create();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,create,(void))

void Window_obj::focus(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_268_focus)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,focus,(void))

void Window_obj::move(int x,int y){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_273_move)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 277)		this->_hx___x = x;
HXLINE( 278)		this->_hx___y = y;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Window_obj,move,(void))

void Window_obj::resize(int width,int height){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_283_resize)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE( 287)		this->_hx___width = width;
HXLINE( 288)		this->_hx___height = height;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Window_obj,resize,(void))

void Window_obj::setIcon( ::lime::graphics::Image image){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_295_setIcon)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(image,"image")
HXLINE( 295)		if (hx::IsNull( image )) {
HXLINE( 297)			return;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,setIcon,(void))

::String Window_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_308_toString)
            	HX_STACK_THIS(this)
HXLINE( 308)		return HX_("[object Window]",87,e9,90,f1);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,toString,return )

 ::lime::_hx_system::Display Window_obj::get_display(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_322_get_display)
            	HX_STACK_THIS(this)
HXLINE( 322)		return this->backend->getDisplay();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_display,return )

bool Window_obj::get_borderless(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_329_get_borderless)
            	HX_STACK_THIS(this)
HXLINE( 329)		return this->_hx___borderless;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_borderless,return )

bool Window_obj::set_borderless(bool value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_336_set_borderless)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 336)		return (this->_hx___borderless = this->backend->setBorderless(value));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_borderless,return )

bool Window_obj::get_enableTextEvents(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_343_get_enableTextEvents)
            	HX_STACK_THIS(this)
HXLINE( 343)		return this->backend->getEnableTextEvents();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_enableTextEvents,return )

bool Window_obj::set_enableTextEvents(bool value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_350_set_enableTextEvents)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 350)		return this->backend->setEnableTextEvents(value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_enableTextEvents,return )

bool Window_obj::get_fullscreen(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_357_get_fullscreen)
            	HX_STACK_THIS(this)
HXLINE( 357)		return this->_hx___fullscreen;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_fullscreen,return )

bool Window_obj::set_fullscreen(bool value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_364_set_fullscreen)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 364)		return (this->_hx___fullscreen = this->backend->setFullscreen(value));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_fullscreen,return )

int Window_obj::get_height(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_371_get_height)
            	HX_STACK_THIS(this)
HXLINE( 371)		return this->_hx___height;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_height,return )

int Window_obj::set_height(int value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_376_set_height)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 378)		this->resize(this->_hx___width,value);
HXLINE( 379)		return this->_hx___height;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_height,return )

bool Window_obj::get_maximized(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_386_get_maximized)
            	HX_STACK_THIS(this)
HXLINE( 386)		return this->_hx___maximized;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_maximized,return )

bool Window_obj::set_maximized(bool value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_391_set_maximized)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 393)		this->_hx___minimized = false;
HXLINE( 394)		return (this->_hx___maximized = this->backend->setMaximized(value));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_maximized,return )

bool Window_obj::get_minimized(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_401_get_minimized)
            	HX_STACK_THIS(this)
HXLINE( 401)		return this->_hx___minimized;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_minimized,return )

bool Window_obj::set_minimized(bool value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_406_set_minimized)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 408)		this->_hx___maximized = false;
HXLINE( 409)		return (this->_hx___minimized = this->backend->setMinimized(value));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_minimized,return )

bool Window_obj::get_resizable(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_416_get_resizable)
            	HX_STACK_THIS(this)
HXLINE( 416)		return this->_hx___resizable;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_resizable,return )

bool Window_obj::set_resizable(bool value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_421_set_resizable)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 423)		this->_hx___resizable = this->backend->setResizable(value);
HXLINE( 424)		return this->_hx___resizable;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_resizable,return )

Float Window_obj::get_scale(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_431_get_scale)
            	HX_STACK_THIS(this)
HXLINE( 431)		return this->_hx___scale;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_scale,return )

::String Window_obj::get_title(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_438_get_title)
            	HX_STACK_THIS(this)
HXLINE( 438)		return this->_hx___title;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_title,return )

::String Window_obj::set_title(::String value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_445_set_title)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 445)		return (this->_hx___title = this->backend->setTitle(this->_hx___title));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_title,return )

int Window_obj::get_width(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_452_get_width)
            	HX_STACK_THIS(this)
HXLINE( 452)		return this->_hx___width;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_width,return )

int Window_obj::set_width(int value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_457_set_width)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 459)		this->resize(value,this->_hx___height);
HXLINE( 460)		return this->_hx___width;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_width,return )

int Window_obj::get_x(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_467_get_x)
            	HX_STACK_THIS(this)
HXLINE( 467)		return this->_hx___x;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_x,return )

int Window_obj::set_x(int value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_472_set_x)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 474)		this->move(value,this->_hx___y);
HXLINE( 475)		return this->_hx___x;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_x,return )

int Window_obj::get_y(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_482_get_y)
            	HX_STACK_THIS(this)
HXLINE( 482)		return this->_hx___y;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_y,return )

int Window_obj::set_y(int value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_487_set_y)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 489)		this->move(this->_hx___x,value);
HXLINE( 490)		return this->_hx___y;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_y,return )


hx::ObjectPtr< Window_obj > Window_obj::__new( ::Dynamic config) {
	hx::ObjectPtr< Window_obj > __this = new Window_obj();
	__this->__construct(config);
	return __this;
}

hx::ObjectPtr< Window_obj > Window_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic config) {
	Window_obj *__this = (Window_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Window_obj), true, "lime.ui.Window"));
	*(void **)__this = Window_obj::_hx_vtable;
	__this->__construct(config);
	return __this;
}

Window_obj::Window_obj()
{
}

void Window_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Window);
	HX_MARK_MEMBER_NAME(application,"application");
	HX_MARK_MEMBER_NAME(config,"config");
	HX_MARK_MEMBER_NAME(display,"display");
	HX_MARK_MEMBER_NAME(id,"id");
	HX_MARK_MEMBER_NAME(onActivate,"onActivate");
	HX_MARK_MEMBER_NAME(onClose,"onClose");
	HX_MARK_MEMBER_NAME(onCreate,"onCreate");
	HX_MARK_MEMBER_NAME(onDeactivate,"onDeactivate");
	HX_MARK_MEMBER_NAME(onDropFile,"onDropFile");
	HX_MARK_MEMBER_NAME(onEnter,"onEnter");
	HX_MARK_MEMBER_NAME(onFocusIn,"onFocusIn");
	HX_MARK_MEMBER_NAME(onFocusOut,"onFocusOut");
	HX_MARK_MEMBER_NAME(onFullscreen,"onFullscreen");
	HX_MARK_MEMBER_NAME(onKeyDown,"onKeyDown");
	HX_MARK_MEMBER_NAME(onKeyUp,"onKeyUp");
	HX_MARK_MEMBER_NAME(onLeave,"onLeave");
	HX_MARK_MEMBER_NAME(onMinimize,"onMinimize");
	HX_MARK_MEMBER_NAME(onMouseDown,"onMouseDown");
	HX_MARK_MEMBER_NAME(onMouseMove,"onMouseMove");
	HX_MARK_MEMBER_NAME(onMouseMoveRelative,"onMouseMoveRelative");
	HX_MARK_MEMBER_NAME(onMouseUp,"onMouseUp");
	HX_MARK_MEMBER_NAME(onMouseWheel,"onMouseWheel");
	HX_MARK_MEMBER_NAME(onMove,"onMove");
	HX_MARK_MEMBER_NAME(onResize,"onResize");
	HX_MARK_MEMBER_NAME(onRestore,"onRestore");
	HX_MARK_MEMBER_NAME(onTextEdit,"onTextEdit");
	HX_MARK_MEMBER_NAME(onTextInput,"onTextInput");
	HX_MARK_MEMBER_NAME(renderer,"renderer");
	HX_MARK_MEMBER_NAME(scale,"scale");
	HX_MARK_MEMBER_NAME(stage,"stage");
	HX_MARK_MEMBER_NAME(backend,"backend");
	HX_MARK_MEMBER_NAME(_hx___borderless,"__borderless");
	HX_MARK_MEMBER_NAME(_hx___fullscreen,"__fullscreen");
	HX_MARK_MEMBER_NAME(_hx___height,"__height");
	HX_MARK_MEMBER_NAME(_hx___maximized,"__maximized");
	HX_MARK_MEMBER_NAME(_hx___minimized,"__minimized");
	HX_MARK_MEMBER_NAME(_hx___resizable,"__resizable");
	HX_MARK_MEMBER_NAME(_hx___scale,"__scale");
	HX_MARK_MEMBER_NAME(_hx___title,"__title");
	HX_MARK_MEMBER_NAME(_hx___width,"__width");
	HX_MARK_MEMBER_NAME(_hx___x,"__x");
	HX_MARK_MEMBER_NAME(_hx___y,"__y");
	HX_MARK_END_CLASS();
}

void Window_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(application,"application");
	HX_VISIT_MEMBER_NAME(config,"config");
	HX_VISIT_MEMBER_NAME(display,"display");
	HX_VISIT_MEMBER_NAME(id,"id");
	HX_VISIT_MEMBER_NAME(onActivate,"onActivate");
	HX_VISIT_MEMBER_NAME(onClose,"onClose");
	HX_VISIT_MEMBER_NAME(onCreate,"onCreate");
	HX_VISIT_MEMBER_NAME(onDeactivate,"onDeactivate");
	HX_VISIT_MEMBER_NAME(onDropFile,"onDropFile");
	HX_VISIT_MEMBER_NAME(onEnter,"onEnter");
	HX_VISIT_MEMBER_NAME(onFocusIn,"onFocusIn");
	HX_VISIT_MEMBER_NAME(onFocusOut,"onFocusOut");
	HX_VISIT_MEMBER_NAME(onFullscreen,"onFullscreen");
	HX_VISIT_MEMBER_NAME(onKeyDown,"onKeyDown");
	HX_VISIT_MEMBER_NAME(onKeyUp,"onKeyUp");
	HX_VISIT_MEMBER_NAME(onLeave,"onLeave");
	HX_VISIT_MEMBER_NAME(onMinimize,"onMinimize");
	HX_VISIT_MEMBER_NAME(onMouseDown,"onMouseDown");
	HX_VISIT_MEMBER_NAME(onMouseMove,"onMouseMove");
	HX_VISIT_MEMBER_NAME(onMouseMoveRelative,"onMouseMoveRelative");
	HX_VISIT_MEMBER_NAME(onMouseUp,"onMouseUp");
	HX_VISIT_MEMBER_NAME(onMouseWheel,"onMouseWheel");
	HX_VISIT_MEMBER_NAME(onMove,"onMove");
	HX_VISIT_MEMBER_NAME(onResize,"onResize");
	HX_VISIT_MEMBER_NAME(onRestore,"onRestore");
	HX_VISIT_MEMBER_NAME(onTextEdit,"onTextEdit");
	HX_VISIT_MEMBER_NAME(onTextInput,"onTextInput");
	HX_VISIT_MEMBER_NAME(renderer,"renderer");
	HX_VISIT_MEMBER_NAME(scale,"scale");
	HX_VISIT_MEMBER_NAME(stage,"stage");
	HX_VISIT_MEMBER_NAME(backend,"backend");
	HX_VISIT_MEMBER_NAME(_hx___borderless,"__borderless");
	HX_VISIT_MEMBER_NAME(_hx___fullscreen,"__fullscreen");
	HX_VISIT_MEMBER_NAME(_hx___height,"__height");
	HX_VISIT_MEMBER_NAME(_hx___maximized,"__maximized");
	HX_VISIT_MEMBER_NAME(_hx___minimized,"__minimized");
	HX_VISIT_MEMBER_NAME(_hx___resizable,"__resizable");
	HX_VISIT_MEMBER_NAME(_hx___scale,"__scale");
	HX_VISIT_MEMBER_NAME(_hx___title,"__title");
	HX_VISIT_MEMBER_NAME(_hx___width,"__width");
	HX_VISIT_MEMBER_NAME(_hx___x,"__x");
	HX_VISIT_MEMBER_NAME(_hx___y,"__y");
}

hx::Val Window_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_x()); }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_y()); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { return hx::Val( id); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"__x") ) { return hx::Val( _hx___x); }
		if (HX_FIELD_EQ(inName,"__y") ) { return hx::Val( _hx___y); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"move") ) { return hx::Val( move_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"scale") ) { return hx::Val( inCallProp == hx::paccAlways ? get_scale() : scale); }
		if (HX_FIELD_EQ(inName,"stage") ) { return hx::Val( stage); }
		if (HX_FIELD_EQ(inName,"title") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_title()); }
		if (HX_FIELD_EQ(inName,"width") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_width()); }
		if (HX_FIELD_EQ(inName,"alert") ) { return hx::Val( alert_dyn()); }
		if (HX_FIELD_EQ(inName,"close") ) { return hx::Val( close_dyn()); }
		if (HX_FIELD_EQ(inName,"focus") ) { return hx::Val( focus_dyn()); }
		if (HX_FIELD_EQ(inName,"get_x") ) { return hx::Val( get_x_dyn()); }
		if (HX_FIELD_EQ(inName,"set_x") ) { return hx::Val( set_x_dyn()); }
		if (HX_FIELD_EQ(inName,"get_y") ) { return hx::Val( get_y_dyn()); }
		if (HX_FIELD_EQ(inName,"set_y") ) { return hx::Val( set_y_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"config") ) { return hx::Val( config); }
		if (HX_FIELD_EQ(inName,"height") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_height()); }
		if (HX_FIELD_EQ(inName,"onMove") ) { return hx::Val( onMove); }
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn()); }
		if (HX_FIELD_EQ(inName,"resize") ) { return hx::Val( resize_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"display") ) { return hx::Val( inCallProp == hx::paccAlways ? get_display() : display); }
		if (HX_FIELD_EQ(inName,"onClose") ) { return hx::Val( onClose); }
		if (HX_FIELD_EQ(inName,"onEnter") ) { return hx::Val( onEnter); }
		if (HX_FIELD_EQ(inName,"onKeyUp") ) { return hx::Val( onKeyUp); }
		if (HX_FIELD_EQ(inName,"onLeave") ) { return hx::Val( onLeave); }
		if (HX_FIELD_EQ(inName,"backend") ) { return hx::Val( backend); }
		if (HX_FIELD_EQ(inName,"__scale") ) { return hx::Val( _hx___scale); }
		if (HX_FIELD_EQ(inName,"__title") ) { return hx::Val( _hx___title); }
		if (HX_FIELD_EQ(inName,"__width") ) { return hx::Val( _hx___width); }
		if (HX_FIELD_EQ(inName,"setIcon") ) { return hx::Val( setIcon_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onCreate") ) { return hx::Val( onCreate); }
		if (HX_FIELD_EQ(inName,"onResize") ) { return hx::Val( onResize); }
		if (HX_FIELD_EQ(inName,"renderer") ) { return hx::Val( renderer); }
		if (HX_FIELD_EQ(inName,"__height") ) { return hx::Val( _hx___height); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"maximized") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_maximized()); }
		if (HX_FIELD_EQ(inName,"minimized") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_minimized()); }
		if (HX_FIELD_EQ(inName,"onFocusIn") ) { return hx::Val( onFocusIn); }
		if (HX_FIELD_EQ(inName,"onKeyDown") ) { return hx::Val( onKeyDown); }
		if (HX_FIELD_EQ(inName,"onMouseUp") ) { return hx::Val( onMouseUp); }
		if (HX_FIELD_EQ(inName,"onRestore") ) { return hx::Val( onRestore); }
		if (HX_FIELD_EQ(inName,"resizable") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_resizable()); }
		if (HX_FIELD_EQ(inName,"get_scale") ) { return hx::Val( get_scale_dyn()); }
		if (HX_FIELD_EQ(inName,"get_title") ) { return hx::Val( get_title_dyn()); }
		if (HX_FIELD_EQ(inName,"set_title") ) { return hx::Val( set_title_dyn()); }
		if (HX_FIELD_EQ(inName,"get_width") ) { return hx::Val( get_width_dyn()); }
		if (HX_FIELD_EQ(inName,"set_width") ) { return hx::Val( set_width_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"borderless") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_borderless()); }
		if (HX_FIELD_EQ(inName,"fullscreen") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_fullscreen()); }
		if (HX_FIELD_EQ(inName,"onActivate") ) { return hx::Val( onActivate); }
		if (HX_FIELD_EQ(inName,"onDropFile") ) { return hx::Val( onDropFile); }
		if (HX_FIELD_EQ(inName,"onFocusOut") ) { return hx::Val( onFocusOut); }
		if (HX_FIELD_EQ(inName,"onMinimize") ) { return hx::Val( onMinimize); }
		if (HX_FIELD_EQ(inName,"onTextEdit") ) { return hx::Val( onTextEdit); }
		if (HX_FIELD_EQ(inName,"get_height") ) { return hx::Val( get_height_dyn()); }
		if (HX_FIELD_EQ(inName,"set_height") ) { return hx::Val( set_height_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"application") ) { return hx::Val( application); }
		if (HX_FIELD_EQ(inName,"onMouseDown") ) { return hx::Val( onMouseDown); }
		if (HX_FIELD_EQ(inName,"onMouseMove") ) { return hx::Val( onMouseMove); }
		if (HX_FIELD_EQ(inName,"onTextInput") ) { return hx::Val( onTextInput); }
		if (HX_FIELD_EQ(inName,"__maximized") ) { return hx::Val( _hx___maximized); }
		if (HX_FIELD_EQ(inName,"__minimized") ) { return hx::Val( _hx___minimized); }
		if (HX_FIELD_EQ(inName,"__resizable") ) { return hx::Val( _hx___resizable); }
		if (HX_FIELD_EQ(inName,"get_display") ) { return hx::Val( get_display_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onDeactivate") ) { return hx::Val( onDeactivate); }
		if (HX_FIELD_EQ(inName,"onFullscreen") ) { return hx::Val( onFullscreen); }
		if (HX_FIELD_EQ(inName,"onMouseWheel") ) { return hx::Val( onMouseWheel); }
		if (HX_FIELD_EQ(inName,"__borderless") ) { return hx::Val( _hx___borderless); }
		if (HX_FIELD_EQ(inName,"__fullscreen") ) { return hx::Val( _hx___fullscreen); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_maximized") ) { return hx::Val( get_maximized_dyn()); }
		if (HX_FIELD_EQ(inName,"set_maximized") ) { return hx::Val( set_maximized_dyn()); }
		if (HX_FIELD_EQ(inName,"get_minimized") ) { return hx::Val( get_minimized_dyn()); }
		if (HX_FIELD_EQ(inName,"set_minimized") ) { return hx::Val( set_minimized_dyn()); }
		if (HX_FIELD_EQ(inName,"get_resizable") ) { return hx::Val( get_resizable_dyn()); }
		if (HX_FIELD_EQ(inName,"set_resizable") ) { return hx::Val( set_resizable_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_borderless") ) { return hx::Val( get_borderless_dyn()); }
		if (HX_FIELD_EQ(inName,"set_borderless") ) { return hx::Val( set_borderless_dyn()); }
		if (HX_FIELD_EQ(inName,"get_fullscreen") ) { return hx::Val( get_fullscreen_dyn()); }
		if (HX_FIELD_EQ(inName,"set_fullscreen") ) { return hx::Val( set_fullscreen_dyn()); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"enableTextEvents") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_enableTextEvents()); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"onMouseMoveRelative") ) { return hx::Val( onMouseMoveRelative); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"get_enableTextEvents") ) { return hx::Val( get_enableTextEvents_dyn()); }
		if (HX_FIELD_EQ(inName,"set_enableTextEvents") ) { return hx::Val( set_enableTextEvents_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Window_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_x(inValue) ); }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_y(inValue) ); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { id=inValue.Cast< int >(); return inValue; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"__x") ) { _hx___x=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__y") ) { _hx___y=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"scale") ) { scale=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"stage") ) { stage=inValue.Cast<  ::openfl::display::Stage >(); return inValue; }
		if (HX_FIELD_EQ(inName,"title") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_title(inValue) ); }
		if (HX_FIELD_EQ(inName,"width") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_width(inValue) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"config") ) { config=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"height") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_height(inValue) ); }
		if (HX_FIELD_EQ(inName,"onMove") ) { onMove=inValue.Cast<  ::lime::app::Event_Float_Float_Void >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"display") ) { display=inValue.Cast<  ::lime::_hx_system::Display >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onClose") ) { onClose=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onEnter") ) { onEnter=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onKeyUp") ) { onKeyUp=inValue.Cast<  ::lime::app::Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onLeave") ) { onLeave=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"backend") ) { backend=inValue.Cast<  ::lime::_backend::native::NativeWindow >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__scale") ) { _hx___scale=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__title") ) { _hx___title=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__width") ) { _hx___width=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onCreate") ) { onCreate=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onResize") ) { onResize=inValue.Cast<  ::lime::app::Event_Int_Int_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"renderer") ) { renderer=inValue.Cast<  ::lime::graphics::Renderer >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__height") ) { _hx___height=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"maximized") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_maximized(inValue) ); }
		if (HX_FIELD_EQ(inName,"minimized") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_minimized(inValue) ); }
		if (HX_FIELD_EQ(inName,"onFocusIn") ) { onFocusIn=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onKeyDown") ) { onKeyDown=inValue.Cast<  ::lime::app::Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMouseUp") ) { onMouseUp=inValue.Cast<  ::lime::app::Event_Float_Float_Int_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onRestore") ) { onRestore=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"resizable") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_resizable(inValue) ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"borderless") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_borderless(inValue) ); }
		if (HX_FIELD_EQ(inName,"fullscreen") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_fullscreen(inValue) ); }
		if (HX_FIELD_EQ(inName,"onActivate") ) { onActivate=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onDropFile") ) { onDropFile=inValue.Cast<  ::lime::app::Event_String_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onFocusOut") ) { onFocusOut=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMinimize") ) { onMinimize=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onTextEdit") ) { onTextEdit=inValue.Cast<  ::lime::app::Event_String_Int_Int_Void >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"application") ) { application=inValue.Cast<  ::lime::app::Application >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMouseDown") ) { onMouseDown=inValue.Cast<  ::lime::app::Event_Float_Float_Int_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMouseMove") ) { onMouseMove=inValue.Cast<  ::lime::app::Event_Float_Float_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onTextInput") ) { onTextInput=inValue.Cast<  ::lime::app::Event_String_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__maximized") ) { _hx___maximized=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__minimized") ) { _hx___minimized=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__resizable") ) { _hx___resizable=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onDeactivate") ) { onDeactivate=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onFullscreen") ) { onFullscreen=inValue.Cast<  ::lime::app::Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMouseWheel") ) { onMouseWheel=inValue.Cast<  ::lime::app::Event_Float_Float_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__borderless") ) { _hx___borderless=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__fullscreen") ) { _hx___fullscreen=inValue.Cast< bool >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"enableTextEvents") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_enableTextEvents(inValue) ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"onMouseMoveRelative") ) { onMouseMoveRelative=inValue.Cast<  ::lime::app::Event_Float_Float_Void >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Window_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("application","\x50","\xab","\x3e","\x2a"));
	outFields->push(HX_HCSTRING("borderless","\x45","\x46","\x71","\x17"));
	outFields->push(HX_HCSTRING("config","\xc2","\x56","\xd2","\xc7"));
	outFields->push(HX_HCSTRING("display","\x42","\x2a","\x4a","\xbb"));
	outFields->push(HX_HCSTRING("enableTextEvents","\x09","\xe4","\x09","\x6a"));
	outFields->push(HX_HCSTRING("fullscreen","\x3b","\x3a","\xb4","\xf9"));
	outFields->push(HX_HCSTRING("height","\xe7","\x07","\x4c","\x02"));
	outFields->push(HX_HCSTRING("id","\xdb","\x5b","\x00","\x00"));
	outFields->push(HX_HCSTRING("maximized","\x18","\x0e","\xe1","\xfe"));
	outFields->push(HX_HCSTRING("minimized","\x86","\xfb","\x9d","\x28"));
	outFields->push(HX_HCSTRING("onActivate","\xf2","\xef","\x62","\xc3"));
	outFields->push(HX_HCSTRING("onClose","\x19","\xb6","\xa0","\xde"));
	outFields->push(HX_HCSTRING("onCreate","\x7b","\x5d","\xbc","\x5b"));
	outFields->push(HX_HCSTRING("onDeactivate","\x33","\xfe","\x44","\x14"));
	outFields->push(HX_HCSTRING("onDropFile","\x8a","\x4a","\x0d","\xc7"));
	outFields->push(HX_HCSTRING("onEnter","\x79","\x0b","\xc4","\x06"));
	outFields->push(HX_HCSTRING("onFocusIn","\x7e","\xfe","\x2d","\x19"));
	outFields->push(HX_HCSTRING("onFocusOut","\xd5","\x43","\x15","\xef"));
	outFields->push(HX_HCSTRING("onFullscreen","\x3a","\xdc","\xf7","\xd1"));
	outFields->push(HX_HCSTRING("onKeyDown","\x42","\x22","\xf2","\x73"));
	outFields->push(HX_HCSTRING("onKeyUp","\x3b","\x58","\x3c","\x75"));
	outFields->push(HX_HCSTRING("onLeave","\x58","\xd3","\x90","\x08"));
	outFields->push(HX_HCSTRING("onMinimize","\x5d","\x13","\x30","\xff"));
	outFields->push(HX_HCSTRING("onMouseDown","\x08","\x94","\x05","\x11"));
	outFields->push(HX_HCSTRING("onMouseMove","\xb7","\x7e","\xf8","\x16"));
	outFields->push(HX_HCSTRING("onMouseMoveRelative","\xa3","\x06","\xbf","\x7a"));
	outFields->push(HX_HCSTRING("onMouseUp","\x81","\xac","\x1d","\x98"));
	outFields->push(HX_HCSTRING("onMouseWheel","\x35","\xca","\xca","\xbf"));
	outFields->push(HX_HCSTRING("onMove","\xd0","\xeb","\xea","\xea"));
	outFields->push(HX_HCSTRING("onResize","\x73","\x50","\x28","\xe8"));
	outFields->push(HX_HCSTRING("onRestore","\xef","\x1f","\x5b","\x42"));
	outFields->push(HX_HCSTRING("onTextEdit","\x96","\xf1","\xc0","\x23"));
	outFields->push(HX_HCSTRING("onTextInput","\xfe","\x36","\x4e","\x79"));
	outFields->push(HX_HCSTRING("renderer","\x43","\xc5","\xdb","\xb2"));
	outFields->push(HX_HCSTRING("resizable","\x6b","\x37","\x50","\xa9"));
	outFields->push(HX_HCSTRING("scale","\x8a","\xce","\xce","\x78"));
	outFields->push(HX_HCSTRING("stage","\xbe","\x6a","\x0b","\x84"));
	outFields->push(HX_HCSTRING("title","\x98","\x15","\x3b","\x10"));
	outFields->push(HX_HCSTRING("width","\x06","\xb6","\x62","\xca"));
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("y","\x79","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("backend","\x14","\xbc","\x87","\xfb"));
	outFields->push(HX_HCSTRING("__borderless","\x65","\xc1","\x04","\x50"));
	outFields->push(HX_HCSTRING("__fullscreen","\x5b","\xb5","\x47","\x32"));
	outFields->push(HX_HCSTRING("__height","\x07","\x73","\x7b","\xaa"));
	outFields->push(HX_HCSTRING("__maximized","\xf8","\x56","\x0d","\x2d"));
	outFields->push(HX_HCSTRING("__minimized","\x66","\x44","\xca","\x56"));
	outFields->push(HX_HCSTRING("__resizable","\x4b","\x80","\x7c","\xd7"));
	outFields->push(HX_HCSTRING("__scale","\x6a","\x27","\x2d","\xe3"));
	outFields->push(HX_HCSTRING("__title","\x78","\x6e","\x99","\x7a"));
	outFields->push(HX_HCSTRING("__width","\xe6","\x0e","\xc1","\x34"));
	outFields->push(HX_HCSTRING("__x","\x58","\x69","\x48","\x00"));
	outFields->push(HX_HCSTRING("__y","\x59","\x69","\x48","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Window_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::lime::app::Application*/ ,(int)offsetof(Window_obj,application),HX_HCSTRING("application","\x50","\xab","\x3e","\x2a")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Window_obj,config),HX_HCSTRING("config","\xc2","\x56","\xd2","\xc7")},
	{hx::fsObject /*::lime::_hx_system::Display*/ ,(int)offsetof(Window_obj,display),HX_HCSTRING("display","\x42","\x2a","\x4a","\xbb")},
	{hx::fsInt,(int)offsetof(Window_obj,id),HX_HCSTRING("id","\xdb","\x5b","\x00","\x00")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onActivate),HX_HCSTRING("onActivate","\xf2","\xef","\x62","\xc3")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onClose),HX_HCSTRING("onClose","\x19","\xb6","\xa0","\xde")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onCreate),HX_HCSTRING("onCreate","\x7b","\x5d","\xbc","\x5b")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onDeactivate),HX_HCSTRING("onDeactivate","\x33","\xfe","\x44","\x14")},
	{hx::fsObject /*::lime::app::Event_String_Void*/ ,(int)offsetof(Window_obj,onDropFile),HX_HCSTRING("onDropFile","\x8a","\x4a","\x0d","\xc7")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onEnter),HX_HCSTRING("onEnter","\x79","\x0b","\xc4","\x06")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onFocusIn),HX_HCSTRING("onFocusIn","\x7e","\xfe","\x2d","\x19")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onFocusOut),HX_HCSTRING("onFocusOut","\xd5","\x43","\x15","\xef")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onFullscreen),HX_HCSTRING("onFullscreen","\x3a","\xdc","\xf7","\xd1")},
	{hx::fsObject /*::lime::app::Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void*/ ,(int)offsetof(Window_obj,onKeyDown),HX_HCSTRING("onKeyDown","\x42","\x22","\xf2","\x73")},
	{hx::fsObject /*::lime::app::Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void*/ ,(int)offsetof(Window_obj,onKeyUp),HX_HCSTRING("onKeyUp","\x3b","\x58","\x3c","\x75")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onLeave),HX_HCSTRING("onLeave","\x58","\xd3","\x90","\x08")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onMinimize),HX_HCSTRING("onMinimize","\x5d","\x13","\x30","\xff")},
	{hx::fsObject /*::lime::app::Event_Float_Float_Int_Void*/ ,(int)offsetof(Window_obj,onMouseDown),HX_HCSTRING("onMouseDown","\x08","\x94","\x05","\x11")},
	{hx::fsObject /*::lime::app::Event_Float_Float_Void*/ ,(int)offsetof(Window_obj,onMouseMove),HX_HCSTRING("onMouseMove","\xb7","\x7e","\xf8","\x16")},
	{hx::fsObject /*::lime::app::Event_Float_Float_Void*/ ,(int)offsetof(Window_obj,onMouseMoveRelative),HX_HCSTRING("onMouseMoveRelative","\xa3","\x06","\xbf","\x7a")},
	{hx::fsObject /*::lime::app::Event_Float_Float_Int_Void*/ ,(int)offsetof(Window_obj,onMouseUp),HX_HCSTRING("onMouseUp","\x81","\xac","\x1d","\x98")},
	{hx::fsObject /*::lime::app::Event_Float_Float_Void*/ ,(int)offsetof(Window_obj,onMouseWheel),HX_HCSTRING("onMouseWheel","\x35","\xca","\xca","\xbf")},
	{hx::fsObject /*::lime::app::Event_Float_Float_Void*/ ,(int)offsetof(Window_obj,onMove),HX_HCSTRING("onMove","\xd0","\xeb","\xea","\xea")},
	{hx::fsObject /*::lime::app::Event_Int_Int_Void*/ ,(int)offsetof(Window_obj,onResize),HX_HCSTRING("onResize","\x73","\x50","\x28","\xe8")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(int)offsetof(Window_obj,onRestore),HX_HCSTRING("onRestore","\xef","\x1f","\x5b","\x42")},
	{hx::fsObject /*::lime::app::Event_String_Int_Int_Void*/ ,(int)offsetof(Window_obj,onTextEdit),HX_HCSTRING("onTextEdit","\x96","\xf1","\xc0","\x23")},
	{hx::fsObject /*::lime::app::Event_String_Void*/ ,(int)offsetof(Window_obj,onTextInput),HX_HCSTRING("onTextInput","\xfe","\x36","\x4e","\x79")},
	{hx::fsObject /*::lime::graphics::Renderer*/ ,(int)offsetof(Window_obj,renderer),HX_HCSTRING("renderer","\x43","\xc5","\xdb","\xb2")},
	{hx::fsFloat,(int)offsetof(Window_obj,scale),HX_HCSTRING("scale","\x8a","\xce","\xce","\x78")},
	{hx::fsObject /*openfl::display::Stage*/ ,(int)offsetof(Window_obj,stage),HX_HCSTRING("stage","\xbe","\x6a","\x0b","\x84")},
	{hx::fsObject /*::lime::_backend::native::NativeWindow*/ ,(int)offsetof(Window_obj,backend),HX_HCSTRING("backend","\x14","\xbc","\x87","\xfb")},
	{hx::fsBool,(int)offsetof(Window_obj,_hx___borderless),HX_HCSTRING("__borderless","\x65","\xc1","\x04","\x50")},
	{hx::fsBool,(int)offsetof(Window_obj,_hx___fullscreen),HX_HCSTRING("__fullscreen","\x5b","\xb5","\x47","\x32")},
	{hx::fsInt,(int)offsetof(Window_obj,_hx___height),HX_HCSTRING("__height","\x07","\x73","\x7b","\xaa")},
	{hx::fsBool,(int)offsetof(Window_obj,_hx___maximized),HX_HCSTRING("__maximized","\xf8","\x56","\x0d","\x2d")},
	{hx::fsBool,(int)offsetof(Window_obj,_hx___minimized),HX_HCSTRING("__minimized","\x66","\x44","\xca","\x56")},
	{hx::fsBool,(int)offsetof(Window_obj,_hx___resizable),HX_HCSTRING("__resizable","\x4b","\x80","\x7c","\xd7")},
	{hx::fsFloat,(int)offsetof(Window_obj,_hx___scale),HX_HCSTRING("__scale","\x6a","\x27","\x2d","\xe3")},
	{hx::fsString,(int)offsetof(Window_obj,_hx___title),HX_HCSTRING("__title","\x78","\x6e","\x99","\x7a")},
	{hx::fsInt,(int)offsetof(Window_obj,_hx___width),HX_HCSTRING("__width","\xe6","\x0e","\xc1","\x34")},
	{hx::fsInt,(int)offsetof(Window_obj,_hx___x),HX_HCSTRING("__x","\x58","\x69","\x48","\x00")},
	{hx::fsInt,(int)offsetof(Window_obj,_hx___y),HX_HCSTRING("__y","\x59","\x69","\x48","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Window_obj_sStaticStorageInfo = 0;
#endif

static ::String Window_obj_sMemberFields[] = {
	HX_HCSTRING("application","\x50","\xab","\x3e","\x2a"),
	HX_HCSTRING("config","\xc2","\x56","\xd2","\xc7"),
	HX_HCSTRING("display","\x42","\x2a","\x4a","\xbb"),
	HX_HCSTRING("id","\xdb","\x5b","\x00","\x00"),
	HX_HCSTRING("onActivate","\xf2","\xef","\x62","\xc3"),
	HX_HCSTRING("onClose","\x19","\xb6","\xa0","\xde"),
	HX_HCSTRING("onCreate","\x7b","\x5d","\xbc","\x5b"),
	HX_HCSTRING("onDeactivate","\x33","\xfe","\x44","\x14"),
	HX_HCSTRING("onDropFile","\x8a","\x4a","\x0d","\xc7"),
	HX_HCSTRING("onEnter","\x79","\x0b","\xc4","\x06"),
	HX_HCSTRING("onFocusIn","\x7e","\xfe","\x2d","\x19"),
	HX_HCSTRING("onFocusOut","\xd5","\x43","\x15","\xef"),
	HX_HCSTRING("onFullscreen","\x3a","\xdc","\xf7","\xd1"),
	HX_HCSTRING("onKeyDown","\x42","\x22","\xf2","\x73"),
	HX_HCSTRING("onKeyUp","\x3b","\x58","\x3c","\x75"),
	HX_HCSTRING("onLeave","\x58","\xd3","\x90","\x08"),
	HX_HCSTRING("onMinimize","\x5d","\x13","\x30","\xff"),
	HX_HCSTRING("onMouseDown","\x08","\x94","\x05","\x11"),
	HX_HCSTRING("onMouseMove","\xb7","\x7e","\xf8","\x16"),
	HX_HCSTRING("onMouseMoveRelative","\xa3","\x06","\xbf","\x7a"),
	HX_HCSTRING("onMouseUp","\x81","\xac","\x1d","\x98"),
	HX_HCSTRING("onMouseWheel","\x35","\xca","\xca","\xbf"),
	HX_HCSTRING("onMove","\xd0","\xeb","\xea","\xea"),
	HX_HCSTRING("onResize","\x73","\x50","\x28","\xe8"),
	HX_HCSTRING("onRestore","\xef","\x1f","\x5b","\x42"),
	HX_HCSTRING("onTextEdit","\x96","\xf1","\xc0","\x23"),
	HX_HCSTRING("onTextInput","\xfe","\x36","\x4e","\x79"),
	HX_HCSTRING("renderer","\x43","\xc5","\xdb","\xb2"),
	HX_HCSTRING("scale","\x8a","\xce","\xce","\x78"),
	HX_HCSTRING("stage","\xbe","\x6a","\x0b","\x84"),
	HX_HCSTRING("backend","\x14","\xbc","\x87","\xfb"),
	HX_HCSTRING("__borderless","\x65","\xc1","\x04","\x50"),
	HX_HCSTRING("__fullscreen","\x5b","\xb5","\x47","\x32"),
	HX_HCSTRING("__height","\x07","\x73","\x7b","\xaa"),
	HX_HCSTRING("__maximized","\xf8","\x56","\x0d","\x2d"),
	HX_HCSTRING("__minimized","\x66","\x44","\xca","\x56"),
	HX_HCSTRING("__resizable","\x4b","\x80","\x7c","\xd7"),
	HX_HCSTRING("__scale","\x6a","\x27","\x2d","\xe3"),
	HX_HCSTRING("__title","\x78","\x6e","\x99","\x7a"),
	HX_HCSTRING("__width","\xe6","\x0e","\xc1","\x34"),
	HX_HCSTRING("__x","\x58","\x69","\x48","\x00"),
	HX_HCSTRING("__y","\x59","\x69","\x48","\x00"),
	HX_HCSTRING("alert","\x5c","\x57","\x8e","\x21"),
	HX_HCSTRING("close","\xb8","\x17","\x63","\x48"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("focus","\xd8","\x5f","\x89","\x04"),
	HX_HCSTRING("move","\x11","\xe3","\x60","\x48"),
	HX_HCSTRING("resize","\xf4","\x59","\x7b","\x08"),
	HX_HCSTRING("setIcon","\x3b","\x28","\x37","\x0b"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("get_display","\x59","\x8a","\x44","\x41"),
	HX_HCSTRING("get_borderless","\x8e","\xce","\x66","\x8d"),
	HX_HCSTRING("set_borderless","\x02","\xb7","\x86","\xad"),
	HX_HCSTRING("get_enableTextEvents","\x12","\x49","\x74","\x88"),
	HX_HCSTRING("set_enableTextEvents","\x86","\x00","\x2c","\x55"),
	HX_HCSTRING("get_fullscreen","\x84","\xc2","\xa9","\x6f"),
	HX_HCSTRING("set_fullscreen","\xf8","\xaa","\xc9","\x8f"),
	HX_HCSTRING("get_height","\xb0","\x77","\xd3","\xf2"),
	HX_HCSTRING("set_height","\x24","\x16","\x51","\xf6"),
	HX_HCSTRING("get_maximized","\xef","\xe1","\x44","\xc0"),
	HX_HCSTRING("set_maximized","\xfb","\xc3","\x4a","\x05"),
	HX_HCSTRING("get_minimized","\x5d","\xcf","\x01","\xea"),
	HX_HCSTRING("set_minimized","\x69","\xb1","\x07","\x2f"),
	HX_HCSTRING("get_resizable","\x42","\x0b","\xb4","\x6a"),
	HX_HCSTRING("set_resizable","\x4e","\xed","\xb9","\xaf"),
	HX_HCSTRING("get_scale","\xe1","\x2a","\x78","\xbc"),
	HX_HCSTRING("get_title","\xef","\x71","\xe4","\x53"),
	HX_HCSTRING("set_title","\xfb","\x5d","\x35","\x37"),
	HX_HCSTRING("get_width","\x5d","\x12","\x0c","\x0e"),
	HX_HCSTRING("set_width","\x69","\xfe","\x5c","\xf1"),
	HX_HCSTRING("get_x","\x4f","\xa5","\x60","\x91"),
	HX_HCSTRING("set_x","\x5b","\x9b","\x2f","\x7a"),
	HX_HCSTRING("get_y","\x50","\xa5","\x60","\x91"),
	HX_HCSTRING("set_y","\x5c","\x9b","\x2f","\x7a"),
	::String(null()) };

static void Window_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Window_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Window_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Window_obj::__mClass,"__mClass");
};

#endif

hx::Class Window_obj::__mClass;

void Window_obj::__register()
{
	hx::Object *dummy = new Window_obj;
	Window_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.ui.Window","\x51","\x58","\xb8","\xfe");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Window_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Window_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Window_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Window_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Window_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Window_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace ui
