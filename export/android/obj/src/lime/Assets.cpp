// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime_AssetCache
#include <lime/AssetCache.h>
#endif
#ifndef INCLUDED_lime_AssetLibrary
#include <lime/AssetLibrary.h>
#endif
#ifndef INCLUDED_lime_Assets
#include <lime/Assets.h>
#endif
#ifndef INCLUDED_lime_app_Event_Void_Void
#include <lime/app/Event_Void_Void.h>
#endif
#ifndef INCLUDED_lime_app_Future
#include <lime/app/Future.h>
#endif
#ifndef INCLUDED_lime_app_Promise
#include <lime/app/Promise.h>
#endif
#ifndef INCLUDED_lime_audio_AudioBuffer
#include <lime/audio/AudioBuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_text_Font
#include <lime/text/Font.h>
#endif
#ifndef INCLUDED_lime_utils_Bytes
#include <lime/utils/Bytes.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_47_exists,"lime.Assets","exists",0x8a084f2e,"lime.Assets.exists","lime/Assets.hx",47,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_82_getAudioBuffer,"lime.Assets","getAudioBuffer",0x1f7814d2,"lime.Assets.getAudioBuffer","lime/Assets.hx",82,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_151_getBytes,"lime.Assets","getBytes",0xe703c1c7,"lime.Assets.getBytes","lime/Assets.hx",151,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_200_getFont,"lime.Assets","getFont",0x2f4603f3,"lime.Assets.getFont","lime/Assets.hx",200,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_264_getImage,"lime.Assets","getImage",0xe6d4d8b7,"lime.Assets.getImage","lime/Assets.hx",264,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_327_getLibrary,"lime.Assets","getLibrary",0x6641ef57,"lime.Assets.getLibrary","lime/Assets.hx",327,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_346_getPath,"lime.Assets","getPath",0x35d78bc9,"lime.Assets.getPath","lime/Assets.hx",346,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_387_getText,"lime.Assets","getText",0x387f72d1,"lime.Assets.getText","lime/Assets.hx",387,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_432_initialize,"lime.Assets","initialize",0xc42b73a2,"lime.Assets.initialize","lime/Assets.hx",432,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_447_isLocal,"lime.Assets","isLocal",0x2e79638f,"lime.Assets.isLocal","lime/Assets.hx",447,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_501_isValidAudio,"lime.Assets","isValidAudio",0x0da20596,"lime.Assets.isValidAudio","lime/Assets.hx",501,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_532_isValidImage,"lime.Assets","isValidImage",0xa38aac1b,"lime.Assets.isValidImage","lime/Assets.hx",532,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_537_list,"lime.Assets","list",0x60d5f530,"lime.Assets.list","lime/Assets.hx",537,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_560_loadAudioBuffer,"lime.Assets","loadAudioBuffer",0x6d20865e,"lime.Assets.loadAudioBuffer","lime/Assets.hx",560,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_618_loadBytes,"lime.Assets","loadBytes",0x714f4253,"lime.Assets.loadBytes","lime/Assets.hx",618,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_655_loadFont,"lime.Assets","loadFont",0x7df4d8e7,"lime.Assets.loadFont","lime/Assets.hx",655,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_692_loadImage,"lime.Assets","loadImage",0x71205943,"lime.Assets.loadImage","lime/Assets.hx",692,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_750_loadLibrary,"lime.Assets","loadLibrary",0xbad7aae3,"lime.Assets.loadLibrary","lime/Assets.hx",750,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_781_loadText,"lime.Assets","loadText",0x872e47c5,"lime.Assets.loadText","lime/Assets.hx",781,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_818_registerLibrary,"lime.Assets","registerLibrary",0x7c289f46,"lime.Assets.registerLibrary","lime/Assets.hx",818,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_847_unloadLibrary,"lime.Assets","unloadLibrary",0x7620d8aa,"lime.Assets.unloadLibrary","lime/Assets.hx",847,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_875_library_onChange,"lime.Assets","library_onChange",0xae01ecc5,"lime.Assets.library_onChange","lime/Assets.hx",875,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_40_boot,"lime.Assets","boot",0x5a3e5d04,"lime.Assets.boot","lime/Assets.hx",40,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_41_boot,"lime.Assets","boot",0x5a3e5d04,"lime.Assets.boot","lime/Assets.hx",41,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_42_boot,"lime.Assets","boot",0x5a3e5d04,"lime.Assets.boot","lime/Assets.hx",42,0x48c77341)
HX_DEFINE_STACK_FRAME(_hx_pos_fa3095877da99947_44_boot,"lime.Assets","boot",0x5a3e5d04,"lime.Assets.boot","lime/Assets.hx",44,0x48c77341)
namespace lime{

void Assets_obj::__construct() { }

Dynamic Assets_obj::__CreateEmpty() { return new Assets_obj; }

void *Assets_obj::_hx_vtable = 0;

Dynamic Assets_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Assets_obj > _hx_result = new Assets_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Assets_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x11344040;
}

 ::lime::AssetCache Assets_obj::cache;

 ::haxe::ds::StringMap Assets_obj::libraries;

 ::lime::app::Event_Void_Void Assets_obj::onChange;

bool Assets_obj::initialized;

bool Assets_obj::exists(::String id,::String type){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_47_exists)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(type,"type")
HXLINE(  49)		::lime::Assets_obj::initialize();
HXLINE(  71)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Assets_obj,exists,return )

 ::lime::audio::AudioBuffer Assets_obj::getAudioBuffer(::String id,hx::Null< bool >  __o_useCache){
bool useCache = __o_useCache.Default(true);
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_82_getAudioBuffer)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(useCache,"useCache")
HXLINE(  84)		::lime::Assets_obj::initialize();
HXLINE( 140)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Assets_obj,getAudioBuffer,return )

 ::lime::utils::Bytes Assets_obj::getBytes(::String id){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_151_getBytes)
            	HX_STACK_ARG(id,"id")
HXLINE( 153)		::lime::Assets_obj::initialize();
HXLINE( 189)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,getBytes,return )

 ::lime::text::Font Assets_obj::getFont(::String id,hx::Null< bool >  __o_useCache){
bool useCache = __o_useCache.Default(true);
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_200_getFont)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(useCache,"useCache")
HXLINE( 202)		::lime::Assets_obj::initialize();
HXLINE( 252)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Assets_obj,getFont,return )

 ::lime::graphics::Image Assets_obj::getImage(::String id,hx::Null< bool >  __o_useCache){
bool useCache = __o_useCache.Default(true);
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_264_getImage)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(useCache,"useCache")
HXLINE( 266)		::lime::Assets_obj::initialize();
HXLINE( 322)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Assets_obj,getImage,return )

 ::lime::AssetLibrary Assets_obj::getLibrary(::String name){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_327_getLibrary)
            	HX_STACK_ARG(name,"name")
HXLINE( 329)		bool _hx_tmp;
HXDLIN( 329)		if (hx::IsNotNull( name )) {
HXLINE( 329)			_hx_tmp = (name == HX_("",00,00,00,00));
            		}
            		else {
HXLINE( 329)			_hx_tmp = true;
            		}
HXDLIN( 329)		if (_hx_tmp) {
HXLINE( 331)			name = HX_("default",c1,d8,c3,9b);
            		}
HXLINE( 335)		return ::lime::Assets_obj::libraries->get(name).StaticCast<  ::lime::AssetLibrary >();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,getLibrary,return )

::String Assets_obj::getPath(::String id){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_346_getPath)
            	HX_STACK_ARG(id,"id")
HXLINE( 348)		::lime::Assets_obj::initialize();
HXLINE( 376)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,getPath,return )

::String Assets_obj::getText(::String id){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_387_getText)
            	HX_STACK_ARG(id,"id")
HXLINE( 389)		::lime::Assets_obj::initialize();
HXLINE( 425)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,getText,return )

void Assets_obj::initialize(){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_432_initialize)
HXLINE( 432)		if (!(::lime::Assets_obj::initialized)) {
HXLINE( 440)			::lime::Assets_obj::initialized = true;
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Assets_obj,initialize,(void))

bool Assets_obj::isLocal(::String id,::String type,hx::Null< bool >  __o_useCache){
bool useCache = __o_useCache.Default(true);
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_447_isLocal)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(useCache,"useCache")
HXLINE( 449)		::lime::Assets_obj::initialize();
HXLINE( 487)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Assets_obj,isLocal,return )

bool Assets_obj::isValidAudio( ::lime::audio::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_501_isValidAudio)
            	HX_STACK_ARG(buffer,"buffer")
HXLINE( 501)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,isValidAudio,return )

bool Assets_obj::isValidImage( ::lime::graphics::Image buffer){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_532_isValidImage)
            	HX_STACK_ARG(buffer,"buffer")
HXLINE( 532)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,isValidImage,return )

::Array< ::String > Assets_obj::list(::String type){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_537_list)
            	HX_STACK_ARG(type,"type")
HXLINE( 539)		::lime::Assets_obj::initialize();
HXLINE( 541)		HX_VARI( ::Array< ::String >,items) = ::Array_obj< ::String >::__new(0);
HXLINE( 543)		{
HXLINE( 543)			HX_VARI(  ::Dynamic,library) = ::lime::Assets_obj::libraries->iterator();
HXDLIN( 543)			while(( (bool)(library->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 545)				HX_VARI( ::Array< ::String >,libraryItems) = ( ( ::lime::AssetLibrary)(library->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) )->list(type);
HXLINE( 547)				if (hx::IsNotNull( libraryItems )) {
HXLINE( 549)					items = items->concat(libraryItems);
            				}
            			}
            		}
HXLINE( 555)		return items;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,list,return )

 ::lime::app::Future Assets_obj::loadAudioBuffer(::String id,hx::Null< bool >  __o_useCache){
bool useCache = __o_useCache.Default(true);
            	HX_GC_STACKFRAME(&_hx_pos_fa3095877da99947_560_loadAudioBuffer)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(useCache,"useCache")
HXLINE( 562)		::lime::Assets_obj::initialize();
HXLINE( 613)		return  ::lime::app::Promise_obj::__alloc( HX_CTX )->future;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Assets_obj,loadAudioBuffer,return )

 ::lime::app::Future Assets_obj::loadBytes(::String id){
            	HX_GC_STACKFRAME(&_hx_pos_fa3095877da99947_618_loadBytes)
            	HX_STACK_ARG(id,"id")
HXLINE( 620)		::lime::Assets_obj::initialize();
HXLINE( 650)		return  ::lime::app::Promise_obj::__alloc( HX_CTX )->future;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,loadBytes,return )

 ::lime::app::Future Assets_obj::loadFont(::String id){
            	HX_GC_STACKFRAME(&_hx_pos_fa3095877da99947_655_loadFont)
            	HX_STACK_ARG(id,"id")
HXLINE( 657)		::lime::Assets_obj::initialize();
HXLINE( 687)		return  ::lime::app::Promise_obj::__alloc( HX_CTX )->future;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,loadFont,return )

 ::lime::app::Future Assets_obj::loadImage(::String id,hx::Null< bool >  __o_useCache){
bool useCache = __o_useCache.Default(true);
            	HX_GC_STACKFRAME(&_hx_pos_fa3095877da99947_692_loadImage)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(useCache,"useCache")
HXLINE( 694)		::lime::Assets_obj::initialize();
HXLINE( 745)		return  ::lime::app::Promise_obj::__alloc( HX_CTX )->future;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Assets_obj,loadImage,return )

 ::lime::app::Future Assets_obj::loadLibrary(::String name){
            	HX_GC_STACKFRAME(&_hx_pos_fa3095877da99947_750_loadLibrary)
            	HX_STACK_ARG(name,"name")
HXLINE( 752)		::lime::Assets_obj::initialize();
HXLINE( 776)		return  ::lime::app::Promise_obj::__alloc( HX_CTX )->future;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,loadLibrary,return )

 ::lime::app::Future Assets_obj::loadText(::String id){
            	HX_GC_STACKFRAME(&_hx_pos_fa3095877da99947_781_loadText)
            	HX_STACK_ARG(id,"id")
HXLINE( 783)		::lime::Assets_obj::initialize();
HXLINE( 813)		return  ::lime::app::Promise_obj::__alloc( HX_CTX )->future;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,loadText,return )

void Assets_obj::registerLibrary(::String name, ::lime::AssetLibrary library){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_818_registerLibrary)
            	HX_STACK_ARG(name,"name")
            	HX_STACK_ARG(library,"library")
HXLINE( 820)		if (::lime::Assets_obj::libraries->exists(name)) {
HXLINE( 822)			if (hx::IsEq( ::lime::Assets_obj::libraries->get(name).StaticCast<  ::lime::AssetLibrary >(),library )) {
HXLINE( 824)				return;
            			}
            			else {
HXLINE( 828)				::lime::Assets_obj::unloadLibrary(name);
            			}
            		}
HXLINE( 834)		if (hx::IsNotNull( library )) {
HXLINE( 836)			library->onChange->add(::lime::Assets_obj::library_onChange_dyn(),null(),null());
            		}
HXLINE( 840)		::lime::Assets_obj::libraries->set(name,library);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Assets_obj,registerLibrary,(void))

void Assets_obj::unloadLibrary(::String name){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_847_unloadLibrary)
            	HX_STACK_ARG(name,"name")
HXLINE( 847)		::lime::Assets_obj::initialize();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Assets_obj,unloadLibrary,(void))

void Assets_obj::library_onChange(){
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_875_library_onChange)
HXLINE( 877)		::lime::Assets_obj::cache->clear(null());
HXLINE( 878)		::lime::Assets_obj::onChange->dispatch();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Assets_obj,library_onChange,(void))


Assets_obj::Assets_obj()
{
}

bool Assets_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"list") ) { outValue = list_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"cache") ) { outValue = cache; return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"exists") ) { outValue = exists_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getFont") ) { outValue = getFont_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getPath") ) { outValue = getPath_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getText") ) { outValue = getText_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isLocal") ) { outValue = isLocal_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onChange") ) { outValue = onChange; return true; }
		if (HX_FIELD_EQ(inName,"getBytes") ) { outValue = getBytes_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getImage") ) { outValue = getImage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadFont") ) { outValue = loadFont_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadText") ) { outValue = loadText_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"libraries") ) { outValue = libraries; return true; }
		if (HX_FIELD_EQ(inName,"loadBytes") ) { outValue = loadBytes_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadImage") ) { outValue = loadImage_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getLibrary") ) { outValue = getLibrary_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"initialize") ) { outValue = initialize_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"initialized") ) { outValue = initialized; return true; }
		if (HX_FIELD_EQ(inName,"loadLibrary") ) { outValue = loadLibrary_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"isValidAudio") ) { outValue = isValidAudio_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isValidImage") ) { outValue = isValidImage_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"unloadLibrary") ) { outValue = unloadLibrary_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getAudioBuffer") ) { outValue = getAudioBuffer_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"loadAudioBuffer") ) { outValue = loadAudioBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"registerLibrary") ) { outValue = registerLibrary_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"library_onChange") ) { outValue = library_onChange_dyn(); return true; }
	}
	return false;
}

bool Assets_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"cache") ) { cache=ioValue.Cast<  ::lime::AssetCache >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onChange") ) { onChange=ioValue.Cast<  ::lime::app::Event_Void_Void >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"libraries") ) { libraries=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"initialized") ) { initialized=ioValue.Cast< bool >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Assets_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Assets_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::lime::AssetCache*/ ,(void *) &Assets_obj::cache,HX_HCSTRING("cache","\x42","\x9a","\x14","\x41")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(void *) &Assets_obj::libraries,HX_HCSTRING("libraries","\x19","\x50","\xf8","\x18")},
	{hx::fsObject /*::lime::app::Event_Void_Void*/ ,(void *) &Assets_obj::onChange,HX_HCSTRING("onChange","\xef","\x87","\x1f","\x97")},
	{hx::fsBool,(void *) &Assets_obj::initialized,HX_HCSTRING("initialized","\x14","\xf5","\x0f","\x37")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Assets_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Assets_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Assets_obj::cache,"cache");
	HX_MARK_MEMBER_NAME(Assets_obj::libraries,"libraries");
	HX_MARK_MEMBER_NAME(Assets_obj::onChange,"onChange");
	HX_MARK_MEMBER_NAME(Assets_obj::initialized,"initialized");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Assets_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Assets_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Assets_obj::cache,"cache");
	HX_VISIT_MEMBER_NAME(Assets_obj::libraries,"libraries");
	HX_VISIT_MEMBER_NAME(Assets_obj::onChange,"onChange");
	HX_VISIT_MEMBER_NAME(Assets_obj::initialized,"initialized");
};

#endif

hx::Class Assets_obj::__mClass;

static ::String Assets_obj_sStaticFields[] = {
	HX_HCSTRING("cache","\x42","\x9a","\x14","\x41"),
	HX_HCSTRING("libraries","\x19","\x50","\xf8","\x18"),
	HX_HCSTRING("onChange","\xef","\x87","\x1f","\x97"),
	HX_HCSTRING("initialized","\x14","\xf5","\x0f","\x37"),
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("getAudioBuffer","\x80","\x41","\xe3","\x26"),
	HX_HCSTRING("getBytes","\xf5","\x17","\x6f","\x1d"),
	HX_HCSTRING("getFont","\x85","\x0d","\x43","\x16"),
	HX_HCSTRING("getImage","\xe5","\x2e","\x40","\x1d"),
	HX_HCSTRING("getLibrary","\x05","\xad","\xd1","\x8e"),
	HX_HCSTRING("getPath","\x5b","\x95","\xd4","\x1c"),
	HX_HCSTRING("getText","\x63","\x7c","\x7c","\x1f"),
	HX_HCSTRING("initialize","\x50","\x31","\xbb","\xec"),
	HX_HCSTRING("isLocal","\x21","\x6d","\x76","\x15"),
	HX_HCSTRING("isValidAudio","\xc4","\x0a","\xdf","\x47"),
	HX_HCSTRING("isValidImage","\x49","\xb1","\xc7","\xdd"),
	HX_HCSTRING("list","\x5e","\x1c","\xb3","\x47"),
	HX_HCSTRING("loadAudioBuffer","\xf0","\x71","\x7c","\xe3"),
	HX_HCSTRING("loadBytes","\x65","\x54","\xcf","\xd8"),
	HX_HCSTRING("loadFont","\x15","\x2f","\x60","\xb4"),
	HX_HCSTRING("loadImage","\x55","\x6b","\xa0","\xd8"),
	HX_HCSTRING("loadLibrary","\x75","\xe5","\x0d","\x10"),
	HX_HCSTRING("loadText","\xf3","\x9d","\x99","\xbd"),
	HX_HCSTRING("registerLibrary","\xd8","\x8a","\x84","\xf2"),
	HX_HCSTRING("unloadLibrary","\xbc","\x5b","\x48","\x31"),
	HX_HCSTRING("library_onChange","\xf3","\x20","\x14","\xc8"),
	::String(null())
};

void Assets_obj::__register()
{
	hx::Object *dummy = new Assets_obj;
	Assets_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.Assets","\xdc","\x38","\x84","\x97");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Assets_obj::__GetStatic;
	__mClass->mSetStaticField = &Assets_obj::__SetStatic;
	__mClass->mMarkFunc = Assets_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Assets_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Assets_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Assets_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Assets_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Assets_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Assets_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_fa3095877da99947_40_boot)
HXLINE(  40)		cache =  ::lime::AssetCache_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_fa3095877da99947_41_boot)
HXLINE(  41)		libraries =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_fa3095877da99947_42_boot)
HXLINE(  42)		onChange =  ::lime::app::Event_Void_Void_obj::__alloc( HX_CTX );
            	}
{
            	HX_STACKFRAME(&_hx_pos_fa3095877da99947_44_boot)
HXLINE(  44)		initialized = false;
            	}
}

} // end namespace lime
