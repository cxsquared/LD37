// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_lime_graphics_cairo_Cairo
#include <lime/graphics/cairo/Cairo.h>
#endif
#ifndef INCLUDED_lime_math_Matrix3
#include <lime/math/Matrix3.h>
#endif
#ifndef INCLUDED_lime_math_Vector2
#include <lime/math/Vector2.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_45_new,"lime.graphics.cairo.Cairo","new",0x5bfa2aca,"lime.graphics.cairo.Cairo.new","lime/graphics/cairo/Cairo.hx",45,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_56_arc,"lime.graphics.cairo.Cairo","arc",0x5bf058bc,"lime.graphics.cairo.Cairo.arc","lime/graphics/cairo/Cairo.hx",56,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_65_arcNegative,"lime.graphics.cairo.Cairo","arcNegative",0xdc455751,"lime.graphics.cairo.Cairo.arcNegative","lime/graphics/cairo/Cairo.hx",65,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_74_clip,"lime.graphics.cairo.Cairo","clip",0x17ab3126,"lime.graphics.cairo.Cairo.clip","lime/graphics/cairo/Cairo.hx",74,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_83_clipExtents,"lime.graphics.cairo.Cairo","clipExtents",0x66b7e2c3,"lime.graphics.cairo.Cairo.clipExtents","lime/graphics/cairo/Cairo.hx",83,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_92_clipPreserve,"lime.graphics.cairo.Cairo","clipPreserve",0x0025ef12,"lime.graphics.cairo.Cairo.clipPreserve","lime/graphics/cairo/Cairo.hx",92,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_101_closePath,"lime.graphics.cairo.Cairo","closePath",0x73e96b67,"lime.graphics.cairo.Cairo.closePath","lime/graphics/cairo/Cairo.hx",101,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_110_copyPage,"lime.graphics.cairo.Cairo","copyPage",0xf9d7e5fa,"lime.graphics.cairo.Cairo.copyPage","lime/graphics/cairo/Cairo.hx",110,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_119_curveTo,"lime.graphics.cairo.Cairo","curveTo",0x0ddd3774,"lime.graphics.cairo.Cairo.curveTo","lime/graphics/cairo/Cairo.hx",119,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_128_fill,"lime.graphics.cairo.Cairo","fill",0x19a490d9,"lime.graphics.cairo.Cairo.fill","lime/graphics/cairo/Cairo.hx",128,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_137_fillExtents,"lime.graphics.cairo.Cairo","fillExtents",0x3c7e2f70,"lime.graphics.cairo.Cairo.fillExtents","lime/graphics/cairo/Cairo.hx",137,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_146_fillPreserve,"lime.graphics.cairo.Cairo","fillPreserve",0x37e2b9c5,"lime.graphics.cairo.Cairo.fillPreserve","lime/graphics/cairo/Cairo.hx",146,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_155_identityMatrix,"lime.graphics.cairo.Cairo","identityMatrix",0xb1e7bbf5,"lime.graphics.cairo.Cairo.identityMatrix","lime/graphics/cairo/Cairo.hx",155,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_169_inClip,"lime.graphics.cairo.Cairo","inClip",0x3186d12b,"lime.graphics.cairo.Cairo.inClip","lime/graphics/cairo/Cairo.hx",169,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_180_inFill,"lime.graphics.cairo.Cairo","inFill",0x338030de,"lime.graphics.cairo.Cairo.inFill","lime/graphics/cairo/Cairo.hx",180,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_191_inStroke,"lime.graphics.cairo.Cairo","inStroke",0xc49aa2d3,"lime.graphics.cairo.Cairo.inStroke","lime/graphics/cairo/Cairo.hx",191,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_197_lineTo,"lime.graphics.cairo.Cairo","lineTo",0x9ffeca65,"lime.graphics.cairo.Cairo.lineTo","lime/graphics/cairo/Cairo.hx",197,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_206_moveTo,"lime.graphics.cairo.Cairo","moveTo",0x800b56c2,"lime.graphics.cairo.Cairo.moveTo","lime/graphics/cairo/Cairo.hx",206,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_215_mask,"lime.graphics.cairo.Cairo","mask",0x1e3f0342,"lime.graphics.cairo.Cairo.mask","lime/graphics/cairo/Cairo.hx",215,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_224_maskSurface,"lime.graphics.cairo.Cairo","maskSurface",0x3893570b,"lime.graphics.cairo.Cairo.maskSurface","lime/graphics/cairo/Cairo.hx",224,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_233_newPath,"lime.graphics.cairo.Cairo","newPath",0x3973698f,"lime.graphics.cairo.Cairo.newPath","lime/graphics/cairo/Cairo.hx",233,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_242_paint,"lime.graphics.cairo.Cairo","paint",0x13100088,"lime.graphics.cairo.Cairo.paint","lime/graphics/cairo/Cairo.hx",242,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_251_paintWithAlpha,"lime.graphics.cairo.Cairo","paintWithAlpha",0x79d699d0,"lime.graphics.cairo.Cairo.paintWithAlpha","lime/graphics/cairo/Cairo.hx",251,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_265_popGroup,"lime.graphics.cairo.Cairo","popGroup",0x2de29d44,"lime.graphics.cairo.Cairo.popGroup","lime/graphics/cairo/Cairo.hx",265,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_271_popGroupToSource,"lime.graphics.cairo.Cairo","popGroupToSource",0x2889961a,"lime.graphics.cairo.Cairo.popGroupToSource","lime/graphics/cairo/Cairo.hx",271,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_280_pushGroup,"lime.graphics.cairo.Cairo","pushGroup",0x3dd920ef,"lime.graphics.cairo.Cairo.pushGroup","lime/graphics/cairo/Cairo.hx",280,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_289_pushGroupWithContent,"lime.graphics.cairo.Cairo","pushGroupWithContent",0x80fe7b24,"lime.graphics.cairo.Cairo.pushGroupWithContent","lime/graphics/cairo/Cairo.hx",289,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_298_recreate,"lime.graphics.cairo.Cairo","recreate",0x8765b845,"lime.graphics.cairo.Cairo.recreate","lime/graphics/cairo/Cairo.hx",298,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_306_rectangle,"lime.graphics.cairo.Cairo","rectangle",0x7945da19,"lime.graphics.cairo.Cairo.rectangle","lime/graphics/cairo/Cairo.hx",306,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_315_relCurveTo,"lime.graphics.cairo.Cairo","relCurveTo",0x07a5a287,"lime.graphics.cairo.Cairo.relCurveTo","lime/graphics/cairo/Cairo.hx",315,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_324_relLineTo,"lime.graphics.cairo.Cairo","relLineTo",0x8c73a2b2,"lime.graphics.cairo.Cairo.relLineTo","lime/graphics/cairo/Cairo.hx",324,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_333_relMoveTo,"lime.graphics.cairo.Cairo","relMoveTo",0x6c802f0f,"lime.graphics.cairo.Cairo.relMoveTo","lime/graphics/cairo/Cairo.hx",333,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_342_resetClip,"lime.graphics.cairo.Cairo","resetClip",0xe7777e29,"lime.graphics.cairo.Cairo.resetClip","lime/graphics/cairo/Cairo.hx",342,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_351_restore,"lime.graphics.cairo.Cairo","restore",0xaa053eb8,"lime.graphics.cairo.Cairo.restore","lime/graphics/cairo/Cairo.hx",351,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_360_save,"lime.graphics.cairo.Cairo","save",0x22364d93,"lime.graphics.cairo.Cairo.save","lime/graphics/cairo/Cairo.hx",360,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_369_setFontSize,"lime.graphics.cairo.Cairo","setFontSize",0xa7b85c5c,"lime.graphics.cairo.Cairo.setFontSize","lime/graphics/cairo/Cairo.hx",369,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_378_setSourceRGB,"lime.graphics.cairo.Cairo","setSourceRGB",0x59e04946,"lime.graphics.cairo.Cairo.setSourceRGB","lime/graphics/cairo/Cairo.hx",378,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_387_setSourceRGBA,"lime.graphics.cairo.Cairo","setSourceRGBA",0x4a5fd43b,"lime.graphics.cairo.Cairo.setSourceRGBA","lime/graphics/cairo/Cairo.hx",387,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_396_setSourceSurface,"lime.graphics.cairo.Cairo","setSourceSurface",0xcd3700e6,"lime.graphics.cairo.Cairo.setSourceSurface","lime/graphics/cairo/Cairo.hx",396,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_405_showPage,"lime.graphics.cairo.Cairo","showPage",0xdcc04342,"lime.graphics.cairo.Cairo.showPage","lime/graphics/cairo/Cairo.hx",405,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_414_showText,"lime.graphics.cairo.Cairo","showText",0xdf6835a0,"lime.graphics.cairo.Cairo.showText","lime/graphics/cairo/Cairo.hx",414,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_428_status,"lime.graphics.cairo.Cairo","status",0xb95a6b08,"lime.graphics.cairo.Cairo.status","lime/graphics/cairo/Cairo.hx",428,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_434_stroke,"lime.graphics.cairo.Cairo","stroke",0xc493378e,"lime.graphics.cairo.Cairo.stroke","lime/graphics/cairo/Cairo.hx",434,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_443_strokeExtents,"lime.graphics.cairo.Cairo","strokeExtents",0x11faf95b,"lime.graphics.cairo.Cairo.strokeExtents","lime/graphics/cairo/Cairo.hx",443,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_452_strokePreserve,"lime.graphics.cairo.Cairo","strokePreserve",0x2f969d7a,"lime.graphics.cairo.Cairo.strokePreserve","lime/graphics/cairo/Cairo.hx",452,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_461_transform,"lime.graphics.cairo.Cairo","transform",0xa55c3356,"lime.graphics.cairo.Cairo.transform","lime/graphics/cairo/Cairo.hx",461,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_469_rotate,"lime.graphics.cairo.Cairo","rotate",0x7e7eca31,"lime.graphics.cairo.Cairo.rotate","lime/graphics/cairo/Cairo.hx",469,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_477_scale,"lime.graphics.cairo.Cairo","scale",0xce901774,"lime.graphics.cairo.Cairo.scale","lime/graphics/cairo/Cairo.hx",477,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_486_translate,"lime.graphics.cairo.Cairo","translate",0xa948dd38,"lime.graphics.cairo.Cairo.translate","lime/graphics/cairo/Cairo.hx",486,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_510_get_antialias,"lime.graphics.cairo.Cairo","get_antialias",0x6c40ed6f,"lime.graphics.cairo.Cairo.get_antialias","lime/graphics/cairo/Cairo.hx",510,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_521_set_antialias,"lime.graphics.cairo.Cairo","set_antialias",0xb146cf7b,"lime.graphics.cairo.Cairo.set_antialias","lime/graphics/cairo/Cairo.hx",521,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_533_get_currentPoint,"lime.graphics.cairo.Cairo","get_currentPoint",0x71e87136,"lime.graphics.cairo.Cairo.get_currentPoint","lime/graphics/cairo/Cairo.hx",533,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_545_get_dash,"lime.graphics.cairo.Cairo","get_dash",0xed05b631,"lime.graphics.cairo.Cairo.get_dash","lime/graphics/cairo/Cairo.hx",545,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_556_set_dash,"lime.graphics.cairo.Cairo","set_dash",0x9b630fa5,"lime.graphics.cairo.Cairo.set_dash","lime/graphics/cairo/Cairo.hx",556,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_567_get_dashCount,"lime.graphics.cairo.Cairo","get_dashCount",0x2993ecde,"lime.graphics.cairo.Cairo.get_dashCount","lime/graphics/cairo/Cairo.hx",567,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_578_get_fillRule,"lime.graphics.cairo.Cairo","get_fillRule",0xee732d7e,"lime.graphics.cairo.Cairo.get_fillRule","lime/graphics/cairo/Cairo.hx",578,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_589_set_fillRule,"lime.graphics.cairo.Cairo","set_fillRule",0x036c50f2,"lime.graphics.cairo.Cairo.set_fillRule","lime/graphics/cairo/Cairo.hx",589,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_600_get_fontFace,"lime.graphics.cairo.Cairo","get_fontFace",0x47e18e6b,"lime.graphics.cairo.Cairo.get_fontFace","lime/graphics/cairo/Cairo.hx",600,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_611_set_fontFace,"lime.graphics.cairo.Cairo","set_fontFace",0x5cdab1df,"lime.graphics.cairo.Cairo.set_fontFace","lime/graphics/cairo/Cairo.hx",611,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_621_get_fontOptions,"lime.graphics.cairo.Cairo","get_fontOptions",0x8029ee50,"lime.graphics.cairo.Cairo.get_fontOptions","lime/graphics/cairo/Cairo.hx",621,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_633_set_fontOptions,"lime.graphics.cairo.Cairo","set_fontOptions",0x7bf56b5c,"lime.graphics.cairo.Cairo.set_fontOptions","lime/graphics/cairo/Cairo.hx",633,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_643_get_groupTarget,"lime.graphics.cairo.Cairo","get_groupTarget",0x8da19cf1,"lime.graphics.cairo.Cairo.get_groupTarget","lime/graphics/cairo/Cairo.hx",643,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_655_get_hasCurrentPoint,"lime.graphics.cairo.Cairo","get_hasCurrentPoint",0x7885e152,"lime.graphics.cairo.Cairo.get_hasCurrentPoint","lime/graphics/cairo/Cairo.hx",655,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_666_get_lineCap,"lime.graphics.cairo.Cairo","get_lineCap",0x4e10b8ff,"lime.graphics.cairo.Cairo.get_lineCap","lime/graphics/cairo/Cairo.hx",666,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_677_set_lineCap,"lime.graphics.cairo.Cairo","set_lineCap",0x587dc00b,"lime.graphics.cairo.Cairo.set_lineCap","lime/graphics/cairo/Cairo.hx",677,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_688_get_lineJoin,"lime.graphics.cairo.Cairo","get_lineJoin",0x053c3e5d,"lime.graphics.cairo.Cairo.get_lineJoin","lime/graphics/cairo/Cairo.hx",688,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_699_set_lineJoin,"lime.graphics.cairo.Cairo","set_lineJoin",0x1a3561d1,"lime.graphics.cairo.Cairo.set_lineJoin","lime/graphics/cairo/Cairo.hx",699,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_710_get_lineWidth,"lime.graphics.cairo.Cairo","get_lineWidth",0x07b4d033,"lime.graphics.cairo.Cairo.get_lineWidth","lime/graphics/cairo/Cairo.hx",710,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_721_set_lineWidth,"lime.graphics.cairo.Cairo","set_lineWidth",0x4cbab23f,"lime.graphics.cairo.Cairo.set_lineWidth","lime/graphics/cairo/Cairo.hx",721,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_733_get_matrix,"lime.graphics.cairo.Cairo","get_matrix",0x1c6bcce0,"lime.graphics.cairo.Cairo.get_matrix","lime/graphics/cairo/Cairo.hx",733,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_744_set_matrix,"lime.graphics.cairo.Cairo","set_matrix",0x1fe96b54,"lime.graphics.cairo.Cairo.set_matrix","lime/graphics/cairo/Cairo.hx",744,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_755_get_miterLimit,"lime.graphics.cairo.Cairo","get_miterLimit",0xea472f15,"lime.graphics.cairo.Cairo.get_miterLimit","lime/graphics/cairo/Cairo.hx",755,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_766_set_miterLimit,"lime.graphics.cairo.Cairo","set_miterLimit",0x0a671789,"lime.graphics.cairo.Cairo.set_miterLimit","lime/graphics/cairo/Cairo.hx",766,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_777_get_operator,"lime.graphics.cairo.Cairo","get_operator",0xc620d803,"lime.graphics.cairo.Cairo.get_operator","lime/graphics/cairo/Cairo.hx",777,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_788_set_operator,"lime.graphics.cairo.Cairo","set_operator",0xdb19fb77,"lime.graphics.cairo.Cairo.set_operator","lime/graphics/cairo/Cairo.hx",788,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_799_get_source,"lime.graphics.cairo.Cairo","get_source",0x92d5477a,"lime.graphics.cairo.Cairo.get_source","lime/graphics/cairo/Cairo.hx",799,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_810_set_source,"lime.graphics.cairo.Cairo","set_source",0x9652e5ee,"lime.graphics.cairo.Cairo.set_source","lime/graphics/cairo/Cairo.hx",810,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_820_get_target,"lime.graphics.cairo.Cairo","get_target",0xe79089f0,"lime.graphics.cairo.Cairo.get_target","lime/graphics/cairo/Cairo.hx",820,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_831_get_tolerance,"lime.graphics.cairo.Cairo","get_tolerance",0x29d353ce,"lime.graphics.cairo.Cairo.get_tolerance","lime/graphics/cairo/Cairo.hx",831,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_843_set_tolerance,"lime.graphics.cairo.Cairo","set_tolerance",0x6ed935da,"lime.graphics.cairo.Cairo.set_tolerance","lime/graphics/cairo/Cairo.hx",843,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_853_get_version,"lime.graphics.cairo.Cairo","get_version",0xab721b99,"lime.graphics.cairo.Cairo.get_version","lime/graphics/cairo/Cairo.hx",853,0x0918a4c7)
HX_DEFINE_STACK_FRAME(_hx_pos_cd8fe9e91aca1c90_864_get_versionString,"lime.graphics.cairo.Cairo","get_versionString",0xb090f14a,"lime.graphics.cairo.Cairo.get_versionString","lime/graphics/cairo/Cairo.hx",864,0x0918a4c7)
namespace lime{
namespace graphics{
namespace cairo{

void Cairo_obj::__construct( ::Dynamic surface){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_45_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(surface,"surface")
            	}

Dynamic Cairo_obj::__CreateEmpty() { return new Cairo_obj; }

void *Cairo_obj::_hx_vtable = 0;

Dynamic Cairo_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Cairo_obj > _hx_result = new Cairo_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Cairo_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x42221e24;
}

void Cairo_obj::arc(Float xc,Float yc,Float radius,Float angle1,Float angle2){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_56_arc)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(xc,"xc")
            	HX_STACK_ARG(yc,"yc")
            	HX_STACK_ARG(radius,"radius")
            	HX_STACK_ARG(angle1,"angle1")
            	HX_STACK_ARG(angle2,"angle2")
            	}


HX_DEFINE_DYNAMIC_FUNC5(Cairo_obj,arc,(void))

void Cairo_obj::arcNegative(Float xc,Float yc,Float radius,Float angle1,Float angle2){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_65_arcNegative)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(xc,"xc")
            	HX_STACK_ARG(yc,"yc")
            	HX_STACK_ARG(radius,"radius")
            	HX_STACK_ARG(angle1,"angle1")
            	HX_STACK_ARG(angle2,"angle2")
            	}


HX_DEFINE_DYNAMIC_FUNC5(Cairo_obj,arcNegative,(void))

void Cairo_obj::clip(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_74_clip)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,clip,(void))

void Cairo_obj::clipExtents(Float x1,Float y1,Float x2,Float y2){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_83_clipExtents)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(y1,"y1")
            	HX_STACK_ARG(x2,"x2")
            	HX_STACK_ARG(y2,"y2")
            	}


HX_DEFINE_DYNAMIC_FUNC4(Cairo_obj,clipExtents,(void))

void Cairo_obj::clipPreserve(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_92_clipPreserve)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,clipPreserve,(void))

void Cairo_obj::closePath(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_101_closePath)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,closePath,(void))

void Cairo_obj::copyPage(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_110_copyPage)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,copyPage,(void))

void Cairo_obj::curveTo(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_119_curveTo)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(y1,"y1")
            	HX_STACK_ARG(x2,"x2")
            	HX_STACK_ARG(y2,"y2")
            	HX_STACK_ARG(x3,"x3")
            	HX_STACK_ARG(y3,"y3")
            	}


HX_DEFINE_DYNAMIC_FUNC6(Cairo_obj,curveTo,(void))

void Cairo_obj::fill(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_128_fill)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,fill,(void))

void Cairo_obj::fillExtents(Float x1,Float y1,Float x2,Float y2){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_137_fillExtents)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(y1,"y1")
            	HX_STACK_ARG(x2,"x2")
            	HX_STACK_ARG(y2,"y2")
            	}


HX_DEFINE_DYNAMIC_FUNC4(Cairo_obj,fillExtents,(void))

void Cairo_obj::fillPreserve(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_146_fillPreserve)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,fillPreserve,(void))

void Cairo_obj::identityMatrix(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_155_identityMatrix)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,identityMatrix,(void))

bool Cairo_obj::inClip(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_169_inClip)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 169)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Cairo_obj,inClip,return )

bool Cairo_obj::inFill(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_180_inFill)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 180)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Cairo_obj,inFill,return )

bool Cairo_obj::inStroke(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_191_inStroke)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 191)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Cairo_obj,inStroke,return )

void Cairo_obj::lineTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_197_lineTo)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	}


HX_DEFINE_DYNAMIC_FUNC2(Cairo_obj,lineTo,(void))

void Cairo_obj::moveTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_206_moveTo)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	}


HX_DEFINE_DYNAMIC_FUNC2(Cairo_obj,moveTo,(void))

void Cairo_obj::mask( ::Dynamic pattern){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_215_mask)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pattern,"pattern")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,mask,(void))

void Cairo_obj::maskSurface( ::Dynamic surface,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_224_maskSurface)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(surface,"surface")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	}


HX_DEFINE_DYNAMIC_FUNC3(Cairo_obj,maskSurface,(void))

void Cairo_obj::newPath(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_233_newPath)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,newPath,(void))

void Cairo_obj::paint(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_242_paint)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,paint,(void))

void Cairo_obj::paintWithAlpha(Float alpha){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_251_paintWithAlpha)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(alpha,"alpha")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,paintWithAlpha,(void))

 ::Dynamic Cairo_obj::popGroup(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_265_popGroup)
            	HX_STACK_THIS(this)
HXLINE( 265)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,popGroup,return )

void Cairo_obj::popGroupToSource(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_271_popGroupToSource)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,popGroupToSource,(void))

void Cairo_obj::pushGroup(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_280_pushGroup)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,pushGroup,(void))

void Cairo_obj::pushGroupWithContent(int content){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_289_pushGroupWithContent)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(content,"content")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,pushGroupWithContent,(void))

void Cairo_obj::recreate( ::Dynamic surface){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_298_recreate)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(surface,"surface")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,recreate,(void))

void Cairo_obj::rectangle(Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_306_rectangle)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	}


HX_DEFINE_DYNAMIC_FUNC4(Cairo_obj,rectangle,(void))

void Cairo_obj::relCurveTo(Float dx1,Float dy1,Float dx2,Float dy2,Float dx3,Float dy3){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_315_relCurveTo)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(dx1,"dx1")
            	HX_STACK_ARG(dy1,"dy1")
            	HX_STACK_ARG(dx2,"dx2")
            	HX_STACK_ARG(dy2,"dy2")
            	HX_STACK_ARG(dx3,"dx3")
            	HX_STACK_ARG(dy3,"dy3")
            	}


HX_DEFINE_DYNAMIC_FUNC6(Cairo_obj,relCurveTo,(void))

void Cairo_obj::relLineTo(Float dx,Float dy){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_324_relLineTo)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(dx,"dx")
            	HX_STACK_ARG(dy,"dy")
            	}


HX_DEFINE_DYNAMIC_FUNC2(Cairo_obj,relLineTo,(void))

void Cairo_obj::relMoveTo(Float dx,Float dy){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_333_relMoveTo)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(dx,"dx")
            	HX_STACK_ARG(dy,"dy")
            	}


HX_DEFINE_DYNAMIC_FUNC2(Cairo_obj,relMoveTo,(void))

void Cairo_obj::resetClip(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_342_resetClip)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,resetClip,(void))

void Cairo_obj::restore(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_351_restore)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,restore,(void))

void Cairo_obj::save(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_360_save)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,save,(void))

void Cairo_obj::setFontSize(Float size){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_369_setFontSize)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(size,"size")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,setFontSize,(void))

void Cairo_obj::setSourceRGB(Float r,Float g,Float b){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_378_setSourceRGB)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(r,"r")
            	HX_STACK_ARG(g,"g")
            	HX_STACK_ARG(b,"b")
            	}


HX_DEFINE_DYNAMIC_FUNC3(Cairo_obj,setSourceRGB,(void))

void Cairo_obj::setSourceRGBA(Float r,Float g,Float b,Float a){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_387_setSourceRGBA)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(r,"r")
            	HX_STACK_ARG(g,"g")
            	HX_STACK_ARG(b,"b")
            	HX_STACK_ARG(a,"a")
            	}


HX_DEFINE_DYNAMIC_FUNC4(Cairo_obj,setSourceRGBA,(void))

void Cairo_obj::setSourceSurface( ::Dynamic surface,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_396_setSourceSurface)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(surface,"surface")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	}


HX_DEFINE_DYNAMIC_FUNC3(Cairo_obj,setSourceSurface,(void))

void Cairo_obj::showPage(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_405_showPage)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,showPage,(void))

void Cairo_obj::showText(::String utf8){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_414_showText)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(utf8,"utf8")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,showText,(void))

int Cairo_obj::status(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_428_status)
            	HX_STACK_THIS(this)
HXLINE( 428)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,status,return )

void Cairo_obj::stroke(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_434_stroke)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,stroke,(void))

void Cairo_obj::strokeExtents(Float x1,Float y1,Float x2,Float y2){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_443_strokeExtents)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x1,"x1")
            	HX_STACK_ARG(y1,"y1")
            	HX_STACK_ARG(x2,"x2")
            	HX_STACK_ARG(y2,"y2")
            	}


HX_DEFINE_DYNAMIC_FUNC4(Cairo_obj,strokeExtents,(void))

void Cairo_obj::strokePreserve(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_452_strokePreserve)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,strokePreserve,(void))

void Cairo_obj::transform( ::lime::math::Matrix3 matrix){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_461_transform)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(matrix,"matrix")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,transform,(void))

void Cairo_obj::rotate(Float amount){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_469_rotate)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(amount,"amount")
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,rotate,(void))

void Cairo_obj::scale(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_477_scale)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	}


HX_DEFINE_DYNAMIC_FUNC2(Cairo_obj,scale,(void))

void Cairo_obj::translate(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_486_translate)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	}


HX_DEFINE_DYNAMIC_FUNC2(Cairo_obj,translate,(void))

int Cairo_obj::get_antialias(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_510_get_antialias)
            	HX_STACK_THIS(this)
HXLINE( 510)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_antialias,return )

int Cairo_obj::set_antialias(int value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_521_set_antialias)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 521)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_antialias,return )

 ::lime::math::Vector2 Cairo_obj::get_currentPoint(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_533_get_currentPoint)
            	HX_STACK_THIS(this)
HXLINE( 533)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_currentPoint,return )

::Array< Float > Cairo_obj::get_dash(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_545_get_dash)
            	HX_STACK_THIS(this)
HXLINE( 545)		return ::Array_obj< Float >::__new(0);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_dash,return )

::Array< Float > Cairo_obj::set_dash(::Array< Float > value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_556_set_dash)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 556)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_dash,return )

int Cairo_obj::get_dashCount(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_567_get_dashCount)
            	HX_STACK_THIS(this)
HXLINE( 567)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_dashCount,return )

int Cairo_obj::get_fillRule(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_578_get_fillRule)
            	HX_STACK_THIS(this)
HXLINE( 578)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_fillRule,return )

int Cairo_obj::set_fillRule(int value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_589_set_fillRule)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 589)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_fillRule,return )

 ::Dynamic Cairo_obj::get_fontFace(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_600_get_fontFace)
            	HX_STACK_THIS(this)
HXLINE( 600)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_fontFace,return )

 ::Dynamic Cairo_obj::set_fontFace( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_611_set_fontFace)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 611)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_fontFace,return )

 ::Dynamic Cairo_obj::get_fontOptions(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_621_get_fontOptions)
            	HX_STACK_THIS(this)
HXLINE( 621)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_fontOptions,return )

 ::Dynamic Cairo_obj::set_fontOptions( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_633_set_fontOptions)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 633)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_fontOptions,return )

 ::Dynamic Cairo_obj::get_groupTarget(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_643_get_groupTarget)
            	HX_STACK_THIS(this)
HXLINE( 643)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_groupTarget,return )

bool Cairo_obj::get_hasCurrentPoint(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_655_get_hasCurrentPoint)
            	HX_STACK_THIS(this)
HXLINE( 655)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_hasCurrentPoint,return )

int Cairo_obj::get_lineCap(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_666_get_lineCap)
            	HX_STACK_THIS(this)
HXLINE( 666)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_lineCap,return )

int Cairo_obj::set_lineCap(int value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_677_set_lineCap)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 677)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_lineCap,return )

int Cairo_obj::get_lineJoin(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_688_get_lineJoin)
            	HX_STACK_THIS(this)
HXLINE( 688)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_lineJoin,return )

int Cairo_obj::set_lineJoin(int value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_699_set_lineJoin)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 699)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_lineJoin,return )

Float Cairo_obj::get_lineWidth(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_710_get_lineWidth)
            	HX_STACK_THIS(this)
HXLINE( 710)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_lineWidth,return )

Float Cairo_obj::set_lineWidth(Float value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_721_set_lineWidth)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 721)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_lineWidth,return )

 ::lime::math::Matrix3 Cairo_obj::get_matrix(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_733_get_matrix)
            	HX_STACK_THIS(this)
HXLINE( 733)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_matrix,return )

 ::lime::math::Matrix3 Cairo_obj::set_matrix( ::lime::math::Matrix3 value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_744_set_matrix)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 744)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_matrix,return )

Float Cairo_obj::get_miterLimit(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_755_get_miterLimit)
            	HX_STACK_THIS(this)
HXLINE( 755)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_miterLimit,return )

Float Cairo_obj::set_miterLimit(Float value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_766_set_miterLimit)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 766)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_miterLimit,return )

int Cairo_obj::get_operator(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_777_get_operator)
            	HX_STACK_THIS(this)
HXLINE( 777)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_operator,return )

int Cairo_obj::set_operator(int value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_788_set_operator)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 788)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_operator,return )

 ::Dynamic Cairo_obj::get_source(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_799_get_source)
            	HX_STACK_THIS(this)
HXLINE( 799)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_source,return )

 ::Dynamic Cairo_obj::set_source( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_810_set_source)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 810)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_source,return )

 ::Dynamic Cairo_obj::get_target(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_820_get_target)
            	HX_STACK_THIS(this)
HXLINE( 820)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_target,return )

Float Cairo_obj::get_tolerance(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_831_get_tolerance)
            	HX_STACK_THIS(this)
HXLINE( 831)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_tolerance,return )

Float Cairo_obj::set_tolerance(Float value){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_843_set_tolerance)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 843)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Cairo_obj,set_tolerance,return )

int Cairo_obj::version;

::String Cairo_obj::versionString;

int Cairo_obj::get_version(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_853_get_version)
HXLINE( 853)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_version,return )

::String Cairo_obj::get_versionString(){
            	HX_STACKFRAME(&_hx_pos_cd8fe9e91aca1c90_864_get_versionString)
HXLINE( 864)		return HX_("",00,00,00,00);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Cairo_obj,get_versionString,return )


hx::ObjectPtr< Cairo_obj > Cairo_obj::__new( ::Dynamic surface) {
	hx::ObjectPtr< Cairo_obj > __this = new Cairo_obj();
	__this->__construct(surface);
	return __this;
}

hx::ObjectPtr< Cairo_obj > Cairo_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic surface) {
	Cairo_obj *__this = (Cairo_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Cairo_obj), true, "lime.graphics.cairo.Cairo"));
	*(void **)__this = Cairo_obj::_hx_vtable;
	__this->__construct(surface);
	return __this;
}

Cairo_obj::Cairo_obj()
{
}

void Cairo_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Cairo);
	HX_MARK_MEMBER_NAME(target,"target");
	HX_MARK_MEMBER_NAME(userData,"userData");
	HX_MARK_MEMBER_NAME(handle,"handle");
	HX_MARK_END_CLASS();
}

void Cairo_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(target,"target");
	HX_VISIT_MEMBER_NAME(userData,"userData");
	HX_VISIT_MEMBER_NAME(handle,"handle");
}

hx::Val Cairo_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"arc") ) { return hx::Val( arc_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"dash") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_dash()); }
		if (HX_FIELD_EQ(inName,"clip") ) { return hx::Val( clip_dyn()); }
		if (HX_FIELD_EQ(inName,"fill") ) { return hx::Val( fill_dyn()); }
		if (HX_FIELD_EQ(inName,"mask") ) { return hx::Val( mask_dyn()); }
		if (HX_FIELD_EQ(inName,"save") ) { return hx::Val( save_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"paint") ) { return hx::Val( paint_dyn()); }
		if (HX_FIELD_EQ(inName,"scale") ) { return hx::Val( scale_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"matrix") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_matrix()); }
		if (HX_FIELD_EQ(inName,"source") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_source()); }
		if (HX_FIELD_EQ(inName,"target") ) { return hx::Val( inCallProp == hx::paccAlways ? get_target() : target); }
		if (HX_FIELD_EQ(inName,"handle") ) { return hx::Val( handle); }
		if (HX_FIELD_EQ(inName,"inClip") ) { return hx::Val( inClip_dyn()); }
		if (HX_FIELD_EQ(inName,"inFill") ) { return hx::Val( inFill_dyn()); }
		if (HX_FIELD_EQ(inName,"lineTo") ) { return hx::Val( lineTo_dyn()); }
		if (HX_FIELD_EQ(inName,"moveTo") ) { return hx::Val( moveTo_dyn()); }
		if (HX_FIELD_EQ(inName,"status") ) { return hx::Val( status_dyn()); }
		if (HX_FIELD_EQ(inName,"stroke") ) { return hx::Val( stroke_dyn()); }
		if (HX_FIELD_EQ(inName,"rotate") ) { return hx::Val( rotate_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"lineCap") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_lineCap()); }
		if (HX_FIELD_EQ(inName,"curveTo") ) { return hx::Val( curveTo_dyn()); }
		if (HX_FIELD_EQ(inName,"newPath") ) { return hx::Val( newPath_dyn()); }
		if (HX_FIELD_EQ(inName,"restore") ) { return hx::Val( restore_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fillRule") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_fillRule()); }
		if (HX_FIELD_EQ(inName,"fontFace") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_fontFace()); }
		if (HX_FIELD_EQ(inName,"lineJoin") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_lineJoin()); }
		if (HX_FIELD_EQ(inName,"operator") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_operator()); }
		if (HX_FIELD_EQ(inName,"userData") ) { return hx::Val( userData); }
		if (HX_FIELD_EQ(inName,"copyPage") ) { return hx::Val( copyPage_dyn()); }
		if (HX_FIELD_EQ(inName,"inStroke") ) { return hx::Val( inStroke_dyn()); }
		if (HX_FIELD_EQ(inName,"popGroup") ) { return hx::Val( popGroup_dyn()); }
		if (HX_FIELD_EQ(inName,"recreate") ) { return hx::Val( recreate_dyn()); }
		if (HX_FIELD_EQ(inName,"showPage") ) { return hx::Val( showPage_dyn()); }
		if (HX_FIELD_EQ(inName,"showText") ) { return hx::Val( showText_dyn()); }
		if (HX_FIELD_EQ(inName,"get_dash") ) { return hx::Val( get_dash_dyn()); }
		if (HX_FIELD_EQ(inName,"set_dash") ) { return hx::Val( set_dash_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"antialias") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_antialias()); }
		if (HX_FIELD_EQ(inName,"dashCount") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_dashCount()); }
		if (HX_FIELD_EQ(inName,"lineWidth") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_lineWidth()); }
		if (HX_FIELD_EQ(inName,"tolerance") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_tolerance()); }
		if (HX_FIELD_EQ(inName,"closePath") ) { return hx::Val( closePath_dyn()); }
		if (HX_FIELD_EQ(inName,"pushGroup") ) { return hx::Val( pushGroup_dyn()); }
		if (HX_FIELD_EQ(inName,"rectangle") ) { return hx::Val( rectangle_dyn()); }
		if (HX_FIELD_EQ(inName,"relLineTo") ) { return hx::Val( relLineTo_dyn()); }
		if (HX_FIELD_EQ(inName,"relMoveTo") ) { return hx::Val( relMoveTo_dyn()); }
		if (HX_FIELD_EQ(inName,"resetClip") ) { return hx::Val( resetClip_dyn()); }
		if (HX_FIELD_EQ(inName,"transform") ) { return hx::Val( transform_dyn()); }
		if (HX_FIELD_EQ(inName,"translate") ) { return hx::Val( translate_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"miterLimit") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_miterLimit()); }
		if (HX_FIELD_EQ(inName,"relCurveTo") ) { return hx::Val( relCurveTo_dyn()); }
		if (HX_FIELD_EQ(inName,"get_matrix") ) { return hx::Val( get_matrix_dyn()); }
		if (HX_FIELD_EQ(inName,"set_matrix") ) { return hx::Val( set_matrix_dyn()); }
		if (HX_FIELD_EQ(inName,"get_source") ) { return hx::Val( get_source_dyn()); }
		if (HX_FIELD_EQ(inName,"set_source") ) { return hx::Val( set_source_dyn()); }
		if (HX_FIELD_EQ(inName,"get_target") ) { return hx::Val( get_target_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fontOptions") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_fontOptions()); }
		if (HX_FIELD_EQ(inName,"groupTarget") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_groupTarget()); }
		if (HX_FIELD_EQ(inName,"arcNegative") ) { return hx::Val( arcNegative_dyn()); }
		if (HX_FIELD_EQ(inName,"clipExtents") ) { return hx::Val( clipExtents_dyn()); }
		if (HX_FIELD_EQ(inName,"fillExtents") ) { return hx::Val( fillExtents_dyn()); }
		if (HX_FIELD_EQ(inName,"maskSurface") ) { return hx::Val( maskSurface_dyn()); }
		if (HX_FIELD_EQ(inName,"setFontSize") ) { return hx::Val( setFontSize_dyn()); }
		if (HX_FIELD_EQ(inName,"get_lineCap") ) { return hx::Val( get_lineCap_dyn()); }
		if (HX_FIELD_EQ(inName,"set_lineCap") ) { return hx::Val( set_lineCap_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentPoint") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_currentPoint()); }
		if (HX_FIELD_EQ(inName,"clipPreserve") ) { return hx::Val( clipPreserve_dyn()); }
		if (HX_FIELD_EQ(inName,"fillPreserve") ) { return hx::Val( fillPreserve_dyn()); }
		if (HX_FIELD_EQ(inName,"setSourceRGB") ) { return hx::Val( setSourceRGB_dyn()); }
		if (HX_FIELD_EQ(inName,"get_fillRule") ) { return hx::Val( get_fillRule_dyn()); }
		if (HX_FIELD_EQ(inName,"set_fillRule") ) { return hx::Val( set_fillRule_dyn()); }
		if (HX_FIELD_EQ(inName,"get_fontFace") ) { return hx::Val( get_fontFace_dyn()); }
		if (HX_FIELD_EQ(inName,"set_fontFace") ) { return hx::Val( set_fontFace_dyn()); }
		if (HX_FIELD_EQ(inName,"get_lineJoin") ) { return hx::Val( get_lineJoin_dyn()); }
		if (HX_FIELD_EQ(inName,"set_lineJoin") ) { return hx::Val( set_lineJoin_dyn()); }
		if (HX_FIELD_EQ(inName,"get_operator") ) { return hx::Val( get_operator_dyn()); }
		if (HX_FIELD_EQ(inName,"set_operator") ) { return hx::Val( set_operator_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"setSourceRGBA") ) { return hx::Val( setSourceRGBA_dyn()); }
		if (HX_FIELD_EQ(inName,"strokeExtents") ) { return hx::Val( strokeExtents_dyn()); }
		if (HX_FIELD_EQ(inName,"get_antialias") ) { return hx::Val( get_antialias_dyn()); }
		if (HX_FIELD_EQ(inName,"set_antialias") ) { return hx::Val( set_antialias_dyn()); }
		if (HX_FIELD_EQ(inName,"get_dashCount") ) { return hx::Val( get_dashCount_dyn()); }
		if (HX_FIELD_EQ(inName,"get_lineWidth") ) { return hx::Val( get_lineWidth_dyn()); }
		if (HX_FIELD_EQ(inName,"set_lineWidth") ) { return hx::Val( set_lineWidth_dyn()); }
		if (HX_FIELD_EQ(inName,"get_tolerance") ) { return hx::Val( get_tolerance_dyn()); }
		if (HX_FIELD_EQ(inName,"set_tolerance") ) { return hx::Val( set_tolerance_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"identityMatrix") ) { return hx::Val( identityMatrix_dyn()); }
		if (HX_FIELD_EQ(inName,"paintWithAlpha") ) { return hx::Val( paintWithAlpha_dyn()); }
		if (HX_FIELD_EQ(inName,"strokePreserve") ) { return hx::Val( strokePreserve_dyn()); }
		if (HX_FIELD_EQ(inName,"get_miterLimit") ) { return hx::Val( get_miterLimit_dyn()); }
		if (HX_FIELD_EQ(inName,"set_miterLimit") ) { return hx::Val( set_miterLimit_dyn()); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"hasCurrentPoint") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_hasCurrentPoint()); }
		if (HX_FIELD_EQ(inName,"get_fontOptions") ) { return hx::Val( get_fontOptions_dyn()); }
		if (HX_FIELD_EQ(inName,"set_fontOptions") ) { return hx::Val( set_fontOptions_dyn()); }
		if (HX_FIELD_EQ(inName,"get_groupTarget") ) { return hx::Val( get_groupTarget_dyn()); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"popGroupToSource") ) { return hx::Val( popGroupToSource_dyn()); }
		if (HX_FIELD_EQ(inName,"setSourceSurface") ) { return hx::Val( setSourceSurface_dyn()); }
		if (HX_FIELD_EQ(inName,"get_currentPoint") ) { return hx::Val( get_currentPoint_dyn()); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"get_hasCurrentPoint") ) { return hx::Val( get_hasCurrentPoint_dyn()); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"pushGroupWithContent") ) { return hx::Val( pushGroupWithContent_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Cairo_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { outValue = inCallProp == hx::paccAlways ? get_version() : version; return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_version") ) { outValue = get_version_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"versionString") ) { outValue = inCallProp == hx::paccAlways ? get_versionString() : versionString; return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_versionString") ) { outValue = get_versionString_dyn(); return true; }
	}
	return false;
}

hx::Val Cairo_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"dash") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_dash(inValue) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"matrix") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_matrix(inValue) ); }
		if (HX_FIELD_EQ(inName,"source") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_source(inValue) ); }
		if (HX_FIELD_EQ(inName,"target") ) { target=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"handle") ) { handle=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"lineCap") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_lineCap(inValue) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fillRule") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_fillRule(inValue) ); }
		if (HX_FIELD_EQ(inName,"fontFace") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_fontFace(inValue) ); }
		if (HX_FIELD_EQ(inName,"lineJoin") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_lineJoin(inValue) ); }
		if (HX_FIELD_EQ(inName,"operator") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_operator(inValue) ); }
		if (HX_FIELD_EQ(inName,"userData") ) { userData=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"antialias") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_antialias(inValue) ); }
		if (HX_FIELD_EQ(inName,"lineWidth") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_lineWidth(inValue) ); }
		if (HX_FIELD_EQ(inName,"tolerance") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_tolerance(inValue) ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"miterLimit") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_miterLimit(inValue) ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fontOptions") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_fontOptions(inValue) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Cairo_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { version=ioValue.Cast< int >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"versionString") ) { versionString=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

void Cairo_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("antialias","\xae","\xd6","\xe9","\x75"));
	outFields->push(HX_HCSTRING("currentPoint","\x57","\x99","\x9b","\x0d"));
	outFields->push(HX_HCSTRING("dash","\x52","\x55","\x63","\x42"));
	outFields->push(HX_HCSTRING("dashCount","\x1d","\xd6","\x3c","\x33"));
	outFields->push(HX_HCSTRING("fillRule","\x1f","\x71","\xc5","\x6c"));
	outFields->push(HX_HCSTRING("fontFace","\x0c","\xd2","\x33","\xc6"));
	outFields->push(HX_HCSTRING("fontOptions","\x4f","\xe5","\xce","\xf4"));
	outFields->push(HX_HCSTRING("groupTarget","\xf0","\x93","\x46","\x02"));
	outFields->push(HX_HCSTRING("hasCurrentPoint","\xd1","\xc3","\x0b","\x75"));
	outFields->push(HX_HCSTRING("lineCap","\x7e","\x84","\x90","\x1f"));
	outFields->push(HX_HCSTRING("lineJoin","\xfe","\x81","\x8e","\x83"));
	outFields->push(HX_HCSTRING("lineWidth","\x72","\xb9","\x5d","\x11"));
	outFields->push(HX_HCSTRING("matrix","\x41","\x36","\xc8","\xbb"));
	outFields->push(HX_HCSTRING("miterLimit","\xf6","\x5c","\x6a","\x54"));
	outFields->push(HX_HCSTRING("operator","\xa4","\x1b","\x73","\x44"));
	outFields->push(HX_HCSTRING("source","\xdb","\xb0","\x31","\x32"));
	outFields->push(HX_HCSTRING("target","\x51","\xf3","\xec","\x86"));
	outFields->push(HX_HCSTRING("tolerance","\x0d","\x3d","\x7c","\x33"));
	outFields->push(HX_HCSTRING("userData","\x15","\x96","\x28","\x05"));
	outFields->push(HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Cairo_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Cairo_obj,target),HX_HCSTRING("target","\x51","\xf3","\xec","\x86")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Cairo_obj,userData),HX_HCSTRING("userData","\x15","\x96","\x28","\x05")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Cairo_obj,handle),HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Cairo_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Cairo_obj::version,HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c")},
	{hx::fsString,(void *) &Cairo_obj::versionString,HX_HCSTRING("versionString","\x09","\xe6","\xa0","\x51")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Cairo_obj_sMemberFields[] = {
	HX_HCSTRING("target","\x51","\xf3","\xec","\x86"),
	HX_HCSTRING("userData","\x15","\x96","\x28","\x05"),
	HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"),
	HX_HCSTRING("arc","\x52","\xfe","\x49","\x00"),
	HX_HCSTRING("arcNegative","\xe7","\x82","\xbf","\x33"),
	HX_HCSTRING("clip","\xd0","\x6e","\xc2","\x41"),
	HX_HCSTRING("clipExtents","\x59","\x0e","\x32","\xbe"),
	HX_HCSTRING("clipPreserve","\xbc","\xe6","\x91","\x33"),
	HX_HCSTRING("closePath","\x7d","\x65","\x20","\x14"),
	HX_HCSTRING("copyPage","\xa4","\x40","\xf0","\xce"),
	HX_HCSTRING("curveTo","\x0a","\x60","\x88","\xce"),
	HX_HCSTRING("fill","\x83","\xce","\xbb","\x43"),
	HX_HCSTRING("fillExtents","\x06","\x5b","\xf8","\x93"),
	HX_HCSTRING("fillPreserve","\x6f","\xb1","\x4e","\x6b"),
	HX_HCSTRING("identityMatrix","\x1f","\x72","\x00","\x92"),
	HX_HCSTRING("inClip","\x55","\x4d","\x28","\x7e"),
	HX_HCSTRING("inFill","\x08","\xad","\x21","\x80"),
	HX_HCSTRING("inStroke","\x7d","\xfd","\xb2","\x99"),
	HX_HCSTRING("lineTo","\x8f","\x46","\xa0","\xec"),
	HX_HCSTRING("moveTo","\xec","\xd2","\xac","\xcc"),
	HX_HCSTRING("mask","\xec","\x40","\x56","\x48"),
	HX_HCSTRING("maskSurface","\xa1","\x82","\x0d","\x90"),
	HX_HCSTRING("newPath","\x25","\x92","\x1e","\xfa"),
	HX_HCSTRING("paint","\x9e","\xb7","\x4e","\xbd"),
	HX_HCSTRING("paintWithAlpha","\xfa","\x4f","\xef","\x59"),
	HX_HCSTRING("popGroup","\xee","\xf7","\xfa","\x02"),
	HX_HCSTRING("popGroupToSource","\xc4","\xaa","\xdb","\xc8"),
	HX_HCSTRING("pushGroup","\x05","\x1b","\x10","\xde"),
	HX_HCSTRING("pushGroupWithContent","\xce","\x2c","\x09","\x98"),
	HX_HCSTRING("recreate","\xef","\x12","\x7e","\x5c"),
	HX_HCSTRING("rectangle","\x2f","\xd4","\x7c","\x19"),
	HX_HCSTRING("relCurveTo","\xb1","\x7b","\x89","\x97"),
	HX_HCSTRING("relLineTo","\xc8","\x9c","\xaa","\x2c"),
	HX_HCSTRING("relMoveTo","\x25","\x29","\xb7","\x0c"),
	HX_HCSTRING("resetClip","\x3f","\x78","\xae","\x87"),
	HX_HCSTRING("restore","\x4e","\x67","\xb0","\x6a"),
	HX_HCSTRING("save","\x3d","\x8b","\x4d","\x4c"),
	HX_HCSTRING("setFontSize","\xf2","\x87","\x32","\xff"),
	HX_HCSTRING("setSourceRGB","\xf0","\x40","\x4c","\x8d"),
	HX_HCSTRING("setSourceRGBA","\x51","\x91","\x6c","\x15"),
	HX_HCSTRING("setSourceSurface","\x90","\x15","\x89","\x6d"),
	HX_HCSTRING("showPage","\xec","\x9d","\xd8","\xb1"),
	HX_HCSTRING("showText","\x4a","\x90","\x80","\xb4"),
	HX_HCSTRING("status","\x32","\xe7","\xfb","\x05"),
	HX_HCSTRING("stroke","\xb8","\xb3","\x34","\x11"),
	HX_HCSTRING("strokeExtents","\x71","\xb6","\x07","\xdd"),
	HX_HCSTRING("strokePreserve","\xa4","\x53","\xaf","\x0f"),
	HX_HCSTRING("transform","\x6c","\x2d","\x93","\x45"),
	HX_HCSTRING("rotate","\x5b","\x46","\x20","\xcb"),
	HX_HCSTRING("scale","\x8a","\xce","\xce","\x78"),
	HX_HCSTRING("translate","\x4e","\xd7","\x7f","\x49"),
	HX_HCSTRING("get_antialias","\x85","\xaa","\x4d","\x37"),
	HX_HCSTRING("set_antialias","\x91","\x8c","\x53","\x7c"),
	HX_HCSTRING("get_currentPoint","\xe0","\x85","\x3a","\x12"),
	HX_HCSTRING("get_dash","\xdb","\x10","\x1e","\xc2"),
	HX_HCSTRING("set_dash","\x4f","\x6a","\x7b","\x70"),
	HX_HCSTRING("get_dashCount","\xf4","\xa9","\xa0","\xf4"),
	HX_HCSTRING("get_fillRule","\x28","\x25","\xdf","\x21"),
	HX_HCSTRING("set_fillRule","\x9c","\x48","\xd8","\x36"),
	HX_HCSTRING("get_fontFace","\x15","\x86","\x4d","\x7b"),
	HX_HCSTRING("set_fontFace","\x89","\xa9","\x46","\x90"),
	HX_HCSTRING("get_fontOptions","\xe6","\x9c","\xb0","\xb5"),
	HX_HCSTRING("set_fontOptions","\xf2","\x19","\x7c","\xb1"),
	HX_HCSTRING("get_groupTarget","\x87","\x4b","\x28","\xc3"),
	HX_HCSTRING("get_hasCurrentPoint","\xe8","\x92","\x16","\x00"),
	HX_HCSTRING("get_lineCap","\x95","\xe4","\x8a","\xa5"),
	HX_HCSTRING("set_lineCap","\xa1","\xeb","\xf7","\xaf"),
	HX_HCSTRING("get_lineJoin","\x07","\x36","\xa8","\x38"),
	HX_HCSTRING("set_lineJoin","\x7b","\x59","\xa1","\x4d"),
	HX_HCSTRING("get_lineWidth","\x49","\x8d","\xc1","\xd2"),
	HX_HCSTRING("set_lineWidth","\x55","\x6f","\xc7","\x17"),
	HX_HCSTRING("get_matrix","\x0a","\xa6","\x4f","\xac"),
	HX_HCSTRING("set_matrix","\x7e","\x44","\xcd","\xaf"),
	HX_HCSTRING("get_miterLimit","\x3f","\xe5","\x5f","\xca"),
	HX_HCSTRING("set_miterLimit","\xb3","\xcd","\x7f","\xea"),
	HX_HCSTRING("get_operator","\xad","\xcf","\x8c","\xf9"),
	HX_HCSTRING("set_operator","\x21","\xf3","\x85","\x0e"),
	HX_HCSTRING("get_source","\xa4","\x20","\xb9","\x22"),
	HX_HCSTRING("set_source","\x18","\xbf","\x36","\x26"),
	HX_HCSTRING("get_target","\x1a","\x63","\x74","\x77"),
	HX_HCSTRING("get_tolerance","\xe4","\x10","\xe0","\xf4"),
	HX_HCSTRING("set_tolerance","\xf0","\xf2","\xe5","\x39"),
	::String(null()) };

static void Cairo_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Cairo_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Cairo_obj::version,"version");
	HX_MARK_MEMBER_NAME(Cairo_obj::versionString,"versionString");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Cairo_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Cairo_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Cairo_obj::version,"version");
	HX_VISIT_MEMBER_NAME(Cairo_obj::versionString,"versionString");
};

#endif

hx::Class Cairo_obj::__mClass;

static ::String Cairo_obj_sStaticFields[] = {
	HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c"),
	HX_HCSTRING("versionString","\x09","\xe6","\xa0","\x51"),
	HX_HCSTRING("get_version","\x2f","\x47","\xec","\x02"),
	HX_HCSTRING("get_versionString","\x60","\xf1","\x10","\x58"),
	::String(null())
};

void Cairo_obj::__register()
{
	hx::Object *dummy = new Cairo_obj;
	Cairo_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.graphics.cairo.Cairo","\xd8","\xbd","\x0e","\x04");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Cairo_obj::__GetStatic;
	__mClass->mSetStaticField = &Cairo_obj::__SetStatic;
	__mClass->mMarkFunc = Cairo_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Cairo_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Cairo_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Cairo_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Cairo_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Cairo_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Cairo_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace graphics
} // end namespace cairo
