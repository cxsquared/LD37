// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_graphics_ImageBuffer
#include <lime/graphics/ImageBuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_ImageType
#include <lime/graphics/ImageType.h>
#endif
#ifndef INCLUDED_lime_graphics_format_JPEG
#include <lime/graphics/format/JPEG.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0f2950a35915406f_24_decodeBytes,"lime.graphics.format.JPEG","decodeBytes",0x9c51a384,"lime.graphics.format.JPEG.decodeBytes","lime/graphics/format/JPEG.hx",24,0x0d45bec8)
HX_DEFINE_STACK_FRAME(_hx_pos_0f2950a35915406f_45_decodeFile,"lime.graphics.format.JPEG","decodeFile",0xcb0bd983,"lime.graphics.format.JPEG.decodeFile","lime/graphics/format/JPEG.hx",45,0x0d45bec8)
HX_DEFINE_STACK_FRAME(_hx_pos_0f2950a35915406f_66_encode,"lime.graphics.format.JPEG","encode",0xce6c344f,"lime.graphics.format.JPEG.encode","lime/graphics/format/JPEG.hx",66,0x0d45bec8)
HX_DEFINE_STACK_FRAME(_hx_pos_0f2950a35915406f_124_lime_jpeg_decode_bytes,"lime.graphics.format.JPEG","lime_jpeg_decode_bytes",0x320703e0,"lime.graphics.format.JPEG.lime_jpeg_decode_bytes","lime/graphics/format/JPEG.hx",124,0x0d45bec8)
HX_DEFINE_STACK_FRAME(_hx_pos_0f2950a35915406f_125_lime_jpeg_decode_file,"lime.graphics.format.JPEG","lime_jpeg_decode_file",0x5579b8a7,"lime.graphics.format.JPEG.lime_jpeg_decode_file","lime/graphics/format/JPEG.hx",125,0x0d45bec8)
HX_DEFINE_STACK_FRAME(_hx_pos_0f2950a35915406f_126_lime_image_encode,"lime.graphics.format.JPEG","lime_image_encode",0x82bdaecb,"lime.graphics.format.JPEG.lime_image_encode","lime/graphics/format/JPEG.hx",126,0x0d45bec8)
namespace lime{
namespace graphics{
namespace format{

void JPEG_obj::__construct() { }

Dynamic JPEG_obj::__CreateEmpty() { return new JPEG_obj; }

void *JPEG_obj::_hx_vtable = 0;

Dynamic JPEG_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< JPEG_obj > _hx_result = new JPEG_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool JPEG_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x754ec97f;
}

 ::lime::graphics::Image JPEG_obj::decodeBytes( ::haxe::io::Bytes bytes,hx::Null< bool >  __o_decodeData){
bool decodeData = __o_decodeData.Default(true);
            	HX_GC_STACKFRAME(&_hx_pos_0f2950a35915406f_24_decodeBytes)
            	HX_STACK_ARG(bytes,"bytes")
            	HX_STACK_ARG(decodeData,"decodeData")
HXLINE(  28)		HX_VARI(  ::Dynamic,bufferData) = null();
HXLINE(  30)		if (hx::IsNotNull( bufferData )) {
HXLINE(  32)			HX_VARI(  ::lime::graphics::ImageBuffer,buffer) =  ::lime::graphics::ImageBuffer_obj::__alloc( HX_CTX , ::Dynamic(bufferData->__Field(HX_("data",2a,56,63,42),hx::paccDynamic)), ::Dynamic(bufferData->__Field(HX_("width",06,b6,62,ca),hx::paccDynamic)), ::Dynamic(bufferData->__Field(HX_("height",e7,07,4c,02),hx::paccDynamic)), ::Dynamic(bufferData->__Field(HX_("bpp",e2,be,4a,00),hx::paccDynamic)), ::Dynamic(bufferData->__Field(HX_("format",37,8f,8e,fd),hx::paccDynamic)));
HXLINE(  33)			buffer->transparent = ( (bool)(bufferData->__Field(HX_("transparent",52,2b,ba,22),hx::paccDynamic)) );
HXLINE(  34)			return  ::lime::graphics::Image_obj::__alloc( HX_CTX ,buffer,null(),null(),null(),null(),null(),null());
            		}
HXLINE(  40)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(JPEG_obj,decodeBytes,return )

 ::lime::graphics::Image JPEG_obj::decodeFile(::String path,hx::Null< bool >  __o_decodeData){
bool decodeData = __o_decodeData.Default(true);
            	HX_GC_STACKFRAME(&_hx_pos_0f2950a35915406f_45_decodeFile)
            	HX_STACK_ARG(path,"path")
            	HX_STACK_ARG(decodeData,"decodeData")
HXLINE(  49)		HX_VARI(  ::Dynamic,bufferData) = null();
HXLINE(  51)		if (hx::IsNotNull( bufferData )) {
HXLINE(  53)			HX_VARI(  ::lime::graphics::ImageBuffer,buffer) =  ::lime::graphics::ImageBuffer_obj::__alloc( HX_CTX , ::Dynamic(bufferData->__Field(HX_("data",2a,56,63,42),hx::paccDynamic)), ::Dynamic(bufferData->__Field(HX_("width",06,b6,62,ca),hx::paccDynamic)), ::Dynamic(bufferData->__Field(HX_("height",e7,07,4c,02),hx::paccDynamic)), ::Dynamic(bufferData->__Field(HX_("bpp",e2,be,4a,00),hx::paccDynamic)), ::Dynamic(bufferData->__Field(HX_("format",37,8f,8e,fd),hx::paccDynamic)));
HXLINE(  54)			buffer->transparent = ( (bool)(bufferData->__Field(HX_("transparent",52,2b,ba,22),hx::paccDynamic)) );
HXLINE(  55)			return  ::lime::graphics::Image_obj::__alloc( HX_CTX ,buffer,null(),null(),null(),null(),null(),null());
            		}
HXLINE(  61)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(JPEG_obj,decodeFile,return )

 ::haxe::io::Bytes JPEG_obj::encode( ::lime::graphics::Image image,int quality){
            	HX_GC_STACKFRAME(&_hx_pos_0f2950a35915406f_66_encode)
            	HX_STACK_ARG(image,"image")
            	HX_STACK_ARG(quality,"quality")
HXLINE(  68)		bool _hx_tmp;
HXDLIN(  68)		if (!(image->get_premultiplied())) {
HXLINE(  68)			_hx_tmp = (image->get_format() != (int)0);
            		}
            		else {
HXLINE(  68)			_hx_tmp = true;
            		}
HXDLIN(  68)		if (_hx_tmp) {
HXLINE(  72)			image = image->clone();
HXLINE(  73)			image->set_premultiplied(false);
HXLINE(  74)			image->set_format((int)0);
            		}
HXLINE(  82)		HX_VARI(  ::Dynamic,data) = null();
HXLINE(  83)		return  ::haxe::io::Bytes_obj::__alloc( HX_CTX , ::Dynamic(data->__Field(HX_("length",e6,94,07,9f),hx::paccDynamic)), ::Dynamic(data->__Field(HX_("b",62,00,00,00),hx::paccDynamic)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(JPEG_obj,encode,return )

 ::Dynamic JPEG_obj::lime_jpeg_decode_bytes( ::Dynamic data,bool decodeData){
            	HX_STACKFRAME(&_hx_pos_0f2950a35915406f_124_lime_jpeg_decode_bytes)
            	HX_STACK_ARG(data,"data")
            	HX_STACK_ARG(decodeData,"decodeData")
HXLINE( 124)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(JPEG_obj,lime_jpeg_decode_bytes,return )

 ::Dynamic JPEG_obj::lime_jpeg_decode_file(::String path,bool decodeData){
            	HX_STACKFRAME(&_hx_pos_0f2950a35915406f_125_lime_jpeg_decode_file)
            	HX_STACK_ARG(path,"path")
            	HX_STACK_ARG(decodeData,"decodeData")
HXLINE( 125)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(JPEG_obj,lime_jpeg_decode_file,return )

 ::Dynamic JPEG_obj::lime_image_encode( ::Dynamic data,int type,int quality){
            	HX_STACKFRAME(&_hx_pos_0f2950a35915406f_126_lime_image_encode)
            	HX_STACK_ARG(data,"data")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(quality,"quality")
HXLINE( 126)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(JPEG_obj,lime_image_encode,return )


JPEG_obj::JPEG_obj()
{
}

bool JPEG_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"encode") ) { outValue = encode_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"decodeFile") ) { outValue = decodeFile_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"decodeBytes") ) { outValue = decodeBytes_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"lime_image_encode") ) { outValue = lime_image_encode_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_jpeg_decode_file") ) { outValue = lime_jpeg_decode_file_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"lime_jpeg_decode_bytes") ) { outValue = lime_jpeg_decode_bytes_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *JPEG_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *JPEG_obj_sStaticStorageInfo = 0;
#endif

static void JPEG_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(JPEG_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void JPEG_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(JPEG_obj::__mClass,"__mClass");
};

#endif

hx::Class JPEG_obj::__mClass;

static ::String JPEG_obj_sStaticFields[] = {
	HX_HCSTRING("decodeBytes","\x5d","\x94","\xb1","\x85"),
	HX_HCSTRING("decodeFile","\xca","\x86","\x63","\xce"),
	HX_HCSTRING("encode","\x16","\xf2","\xe3","\xf9"),
	HX_HCSTRING("lime_jpeg_decode_bytes","\xa7","\xff","\x10","\xc9"),
	HX_HCSTRING("lime_jpeg_decode_file","\xc0","\x92","\xae","\x0c"),
	HX_HCSTRING("lime_image_encode","\x64","\x48","\x63","\x9c"),
	::String(null())
};

void JPEG_obj::__register()
{
	hx::Object *dummy = new JPEG_obj;
	JPEG_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.graphics.format.JPEG","\x15","\x91","\x5a","\xe7");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &JPEG_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = JPEG_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(JPEG_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< JPEG_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = JPEG_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = JPEG_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = JPEG_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace graphics
} // end namespace format
