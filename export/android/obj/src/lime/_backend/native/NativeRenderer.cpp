// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeRenderer
#include <lime/_backend/native/NativeRenderer.h>
#endif
#ifndef INCLUDED_lime_graphics_GLRenderContext
#include <lime/graphics/GLRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_graphics_ImageBuffer
#include <lime/graphics/ImageBuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_ImageType
#include <lime/graphics/ImageType.h>
#endif
#ifndef INCLUDED_lime_graphics_RenderContext
#include <lime/graphics/RenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_Renderer
#include <lime/graphics/Renderer.h>
#endif
#ifndef INCLUDED_lime_graphics_RendererType
#include <lime/graphics/RendererType.h>
#endif
#ifndef INCLUDED_lime_math_Rectangle
#include <lime/math/Rectangle.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_lime_utils_TAError
#include <lime/utils/TAError.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_43_new,"lime._backend.native.NativeRenderer","new",0x43f11223,"lime._backend.native.NativeRenderer.new","lime/_backend/native/NativeRenderer.hx",43,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_48_create,"lime._backend.native.NativeRenderer","create",0x10556119,"lime._backend.native.NativeRenderer.create","lime/_backend/native/NativeRenderer.hx",48,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_91_dispatch,"lime._backend.native.NativeRenderer","dispatch",0xcbb24a17,"lime._backend.native.NativeRenderer.dispatch","lime/_backend/native/NativeRenderer.hx",91,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_98_flip,"lime._backend.native.NativeRenderer","flip",0x29ba5b8a,"lime._backend.native.NativeRenderer.flip","lime/_backend/native/NativeRenderer.hx",98,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_120_readPixels,"lime._backend.native.NativeRenderer","readPixels",0x008f9fc0,"lime._backend.native.NativeRenderer.readPixels","lime/_backend/native/NativeRenderer.hx",120,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_143_render,"lime._backend.native.NativeRenderer","render",0x996f6573,"lime._backend.native.NativeRenderer.render","lime/_backend/native/NativeRenderer.hx",143,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_183_lime_renderer_create,"lime._backend.native.NativeRenderer","lime_renderer_create",0xcf0a582b,"lime._backend.native.NativeRenderer.lime_renderer_create","lime/_backend/native/NativeRenderer.hx",183,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_184_lime_renderer_flip,"lime._backend.native.NativeRenderer","lime_renderer_flip",0xb8790a1c,"lime._backend.native.NativeRenderer.lime_renderer_flip","lime/_backend/native/NativeRenderer.hx",184,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_185_lime_renderer_get_context,"lime._backend.native.NativeRenderer","lime_renderer_get_context",0x0ef35a77,"lime._backend.native.NativeRenderer.lime_renderer_get_context","lime/_backend/native/NativeRenderer.hx",185,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_186_lime_renderer_get_scale,"lime._backend.native.NativeRenderer","lime_renderer_get_scale",0x6d3ae112,"lime._backend.native.NativeRenderer.lime_renderer_get_scale","lime/_backend/native/NativeRenderer.hx",186,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_187_lime_renderer_get_type,"lime._backend.native.NativeRenderer","lime_renderer_get_type",0x09408932,"lime._backend.native.NativeRenderer.lime_renderer_get_type","lime/_backend/native/NativeRenderer.hx",187,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_188_lime_renderer_lock,"lime._backend.native.NativeRenderer","lime_renderer_lock",0xbc72935a,"lime._backend.native.NativeRenderer.lime_renderer_lock","lime/_backend/native/NativeRenderer.hx",188,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_189_lime_renderer_make_current,"lime._backend.native.NativeRenderer","lime_renderer_make_current",0x92794c17,"lime._backend.native.NativeRenderer.lime_renderer_make_current","lime/_backend/native/NativeRenderer.hx",189,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_190_lime_renderer_read_pixels,"lime._backend.native.NativeRenderer","lime_renderer_read_pixels",0xf03cd0a7,"lime._backend.native.NativeRenderer.lime_renderer_read_pixels","lime/_backend/native/NativeRenderer.hx",190,0x398cc96c)
HX_DEFINE_STACK_FRAME(_hx_pos_9902e55c2a6c6eb8_191_lime_renderer_unlock,"lime._backend.native.NativeRenderer","lime_renderer_unlock",0xb88793f3,"lime._backend.native.NativeRenderer.lime_renderer_unlock","lime/_backend/native/NativeRenderer.hx",191,0x398cc96c)
namespace lime{
namespace _backend{
namespace native{

void NativeRenderer_obj::__construct( ::lime::graphics::Renderer parent){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_43_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(parent,"parent")
HXLINE(  43)		this->parent = parent;
            	}

Dynamic NativeRenderer_obj::__CreateEmpty() { return new NativeRenderer_obj; }

void *NativeRenderer_obj::_hx_vtable = 0;

Dynamic NativeRenderer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NativeRenderer_obj > _hx_result = new NativeRenderer_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool NativeRenderer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x063914db;
}

void NativeRenderer_obj::create(){
            	HX_GC_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_48_create)
            	HX_STACK_THIS(this)
HXLINE(  51)		 ::Dynamic _hx_tmp = null();
HXDLIN(  51)		this->handle = _hx_tmp;
HXLINE(  53)		this->parent->window->_hx___scale = (int)0;
HXLINE(  63)		HX_VARI( ::String,type) = null();
HXLINE(  65)		if ((type == HX_("opengl",6f,64,94,21))) {
HXLINE(  69)			this->useHardware = true;
HXLINE(  70)			this->parent->context = ::lime::graphics::RenderContext_obj::OPENGL( ::lime::graphics::GLRenderContext_obj::__alloc( HX_CTX ));
HXLINE(  71)			this->parent->type = ::lime::graphics::RendererType_obj::OPENGL_dyn();
            		}
            		else {
HXLINE(  75)			this->useHardware = false;
HXLINE(  81)			this->parent->type = ::lime::graphics::RendererType_obj::CAIRO_dyn();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeRenderer_obj,create,(void))

void NativeRenderer_obj::dispatch(){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_91_dispatch)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeRenderer_obj,dispatch,(void))

void NativeRenderer_obj::flip(){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_98_flip)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeRenderer_obj,flip,(void))

 ::lime::graphics::Image NativeRenderer_obj::readPixels( ::lime::math::Rectangle rect){
            	HX_GC_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_120_readPixels)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(rect,"rect")
HXLINE( 122)		HX_VARI(  ::Dynamic,data) = null();
HXLINE( 124)		if (hx::IsNotNull( data )) {
HXLINE( 126)			HX_VARI(  ::haxe::io::Bytes,buffer) =  ::haxe::io::Bytes_obj::__alloc( HX_CTX , ::Dynamic( ::Dynamic(data->__Field(HX_("data",2a,56,63,42),hx::paccDynamic))->__Field(HX_("length",e6,94,07,9f),hx::paccDynamic)), ::Dynamic( ::Dynamic(data->__Field(HX_("data",2a,56,63,42),hx::paccDynamic))->__Field(HX_("b",62,00,00,00),hx::paccDynamic)));
HXDLIN( 126)			HX_VAR_NAME(  ::lime::utils::ArrayBufferView,this1,"this");
HXDLIN( 126)			if (hx::IsNotNull( buffer )) {
HXLINE( 126)				HX_VARI(  ::lime::utils::ArrayBufferView,_this) =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,(int)0,(int)4);
HXDLIN( 126)				if ((hx::Mod((int)0,_this->bytesPerElement) != (int)0)) {
HXLINE( 126)					HX_STACK_DO_THROW(::lime::utils::TAError_obj::RangeError_dyn());
            				}
HXDLIN( 126)				HX_VARI( int,bufferByteLength) = buffer->length;
HXDLIN( 126)				{
HXLINE( 126)					if ((hx::Mod(bufferByteLength,_this->bytesPerElement) != (int)0)) {
HXLINE( 126)						HX_STACK_DO_THROW(::lime::utils::TAError_obj::RangeError_dyn());
            					}
HXDLIN( 126)					if ((bufferByteLength < (int)0)) {
HXLINE( 126)						HX_STACK_DO_THROW(::lime::utils::TAError_obj::RangeError_dyn());
            					}
            				}
HXDLIN( 126)				_this->buffer = buffer;
HXDLIN( 126)				_this->byteOffset = (int)0;
HXDLIN( 126)				_this->byteLength = bufferByteLength;
HXDLIN( 126)				_this->length = ::Std_obj::_hx_int(((Float)bufferByteLength / (Float)_this->bytesPerElement));
HXDLIN( 126)				this1 = _this;
            			}
            			else {
HXLINE( 126)				HX_STACK_DO_THROW(HX_("Invalid constructor arguments for Uint8Array",8b,64,02,e4));
            			}
HXDLIN( 126)			HX_VARI_NAME(  ::lime::graphics::ImageBuffer,buffer1,"buffer") =  ::lime::graphics::ImageBuffer_obj::__alloc( HX_CTX ,this1, ::Dynamic(data->__Field(HX_("width",06,b6,62,ca),hx::paccDynamic)), ::Dynamic(data->__Field(HX_("height",e7,07,4c,02),hx::paccDynamic)), ::Dynamic(data->__Field(HX_("bitsPerPixel",8f,4d,ee,1c),hx::paccDynamic)),null());
HXLINE( 127)			buffer1->format = (int)0;
HXLINE( 129)			return  ::lime::graphics::Image_obj::__alloc( HX_CTX ,buffer1,null(),null(),null(),null(),null(),null());
            		}
HXLINE( 133)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeRenderer_obj,readPixels,return )

void NativeRenderer_obj::render(){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_143_render)
            	HX_STACK_THIS(this)
HXLINE( 143)		if (!(this->useHardware)) {
HXLINE( 166)			this->parent->context = ::lime::graphics::RenderContext_obj::NONE_dyn();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeRenderer_obj,render,(void))

 ::Dynamic NativeRenderer_obj::lime_renderer_create( ::Dynamic window){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_183_lime_renderer_create)
            	HX_STACK_ARG(window,"window")
HXLINE( 183)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeRenderer_obj,lime_renderer_create,return )

void NativeRenderer_obj::lime_renderer_flip( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_184_lime_renderer_flip)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 184)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeRenderer_obj,lime_renderer_flip,(void))

Float NativeRenderer_obj::lime_renderer_get_context( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_185_lime_renderer_get_context)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 185)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeRenderer_obj,lime_renderer_get_context,return )

Float NativeRenderer_obj::lime_renderer_get_scale( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_186_lime_renderer_get_scale)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 186)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeRenderer_obj,lime_renderer_get_scale,return )

 ::Dynamic NativeRenderer_obj::lime_renderer_get_type( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_187_lime_renderer_get_type)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 187)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeRenderer_obj,lime_renderer_get_type,return )

 ::Dynamic NativeRenderer_obj::lime_renderer_lock( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_188_lime_renderer_lock)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 188)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeRenderer_obj,lime_renderer_lock,return )

void NativeRenderer_obj::lime_renderer_make_current( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_189_lime_renderer_make_current)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 189)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeRenderer_obj,lime_renderer_make_current,(void))

 ::Dynamic NativeRenderer_obj::lime_renderer_read_pixels( ::Dynamic handle, ::Dynamic rect){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_190_lime_renderer_read_pixels)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(rect,"rect")
HXLINE( 190)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeRenderer_obj,lime_renderer_read_pixels,return )

void NativeRenderer_obj::lime_renderer_unlock( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_9902e55c2a6c6eb8_191_lime_renderer_unlock)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 191)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeRenderer_obj,lime_renderer_unlock,(void))


hx::ObjectPtr< NativeRenderer_obj > NativeRenderer_obj::__new( ::lime::graphics::Renderer parent) {
	hx::ObjectPtr< NativeRenderer_obj > __this = new NativeRenderer_obj();
	__this->__construct(parent);
	return __this;
}

hx::ObjectPtr< NativeRenderer_obj > NativeRenderer_obj::__alloc(hx::Ctx *_hx_ctx, ::lime::graphics::Renderer parent) {
	NativeRenderer_obj *__this = (NativeRenderer_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(NativeRenderer_obj), true, "lime._backend.native.NativeRenderer"));
	*(void **)__this = NativeRenderer_obj::_hx_vtable;
	__this->__construct(parent);
	return __this;
}

NativeRenderer_obj::NativeRenderer_obj()
{
}

void NativeRenderer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(NativeRenderer);
	HX_MARK_MEMBER_NAME(handle,"handle");
	HX_MARK_MEMBER_NAME(parent,"parent");
	HX_MARK_MEMBER_NAME(useHardware,"useHardware");
	HX_MARK_END_CLASS();
}

void NativeRenderer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(handle,"handle");
	HX_VISIT_MEMBER_NAME(parent,"parent");
	HX_VISIT_MEMBER_NAME(useHardware,"useHardware");
}

hx::Val NativeRenderer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"flip") ) { return hx::Val( flip_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { return hx::Val( handle); }
		if (HX_FIELD_EQ(inName,"parent") ) { return hx::Val( parent); }
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn()); }
		if (HX_FIELD_EQ(inName,"render") ) { return hx::Val( render_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"dispatch") ) { return hx::Val( dispatch_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"readPixels") ) { return hx::Val( readPixels_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"useHardware") ) { return hx::Val( useHardware); }
	}
	return super::__Field(inName,inCallProp);
}

bool NativeRenderer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 18:
		if (HX_FIELD_EQ(inName,"lime_renderer_flip") ) { outValue = lime_renderer_flip_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_renderer_lock") ) { outValue = lime_renderer_lock_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"lime_renderer_create") ) { outValue = lime_renderer_create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_renderer_unlock") ) { outValue = lime_renderer_unlock_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"lime_renderer_get_type") ) { outValue = lime_renderer_get_type_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"lime_renderer_get_scale") ) { outValue = lime_renderer_get_scale_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"lime_renderer_get_context") ) { outValue = lime_renderer_get_context_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_renderer_read_pixels") ) { outValue = lime_renderer_read_pixels_dyn(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"lime_renderer_make_current") ) { outValue = lime_renderer_make_current_dyn(); return true; }
	}
	return false;
}

hx::Val NativeRenderer_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { handle=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"parent") ) { parent=inValue.Cast<  ::lime::graphics::Renderer >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"useHardware") ) { useHardware=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void NativeRenderer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"));
	outFields->push(HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed"));
	outFields->push(HX_HCSTRING("useHardware","\x0f","\xea","\xde","\xcf"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo NativeRenderer_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(NativeRenderer_obj,handle),HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7")},
	{hx::fsObject /*::lime::graphics::Renderer*/ ,(int)offsetof(NativeRenderer_obj,parent),HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed")},
	{hx::fsBool,(int)offsetof(NativeRenderer_obj,useHardware),HX_HCSTRING("useHardware","\x0f","\xea","\xde","\xcf")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *NativeRenderer_obj_sStaticStorageInfo = 0;
#endif

static ::String NativeRenderer_obj_sMemberFields[] = {
	HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"),
	HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed"),
	HX_HCSTRING("useHardware","\x0f","\xea","\xde","\xcf"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("dispatch","\xba","\xce","\x63","\x1e"),
	HX_HCSTRING("flip","\xad","\x12","\xbe","\x43"),
	HX_HCSTRING("readPixels","\x23","\xd3","\x25","\x86"),
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	::String(null()) };

static void NativeRenderer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NativeRenderer_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NativeRenderer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NativeRenderer_obj::__mClass,"__mClass");
};

#endif

hx::Class NativeRenderer_obj::__mClass;

static ::String NativeRenderer_obj_sStaticFields[] = {
	HX_HCSTRING("lime_renderer_create","\x4e","\xc5","\x81","\x91"),
	HX_HCSTRING("lime_renderer_flip","\x7f","\xd8","\x55","\x6f"),
	HX_HCSTRING("lime_renderer_get_context","\x74","\x6e","\xee","\xe1"),
	HX_HCSTRING("lime_renderer_get_scale","\xcf","\x0b","\x88","\x72"),
	HX_HCSTRING("lime_renderer_get_type","\x15","\xc5","\x47","\xea"),
	HX_HCSTRING("lime_renderer_lock","\xbd","\x61","\x4f","\x73"),
	HX_HCSTRING("lime_renderer_make_current","\x7a","\xb5","\x2f","\x5b"),
	HX_HCSTRING("lime_renderer_read_pixels","\xa4","\xe4","\x37","\xc3"),
	HX_HCSTRING("lime_renderer_unlock","\x16","\x01","\xff","\x7a"),
	::String(null())
};

void NativeRenderer_obj::__register()
{
	hx::Object *dummy = new NativeRenderer_obj;
	NativeRenderer_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime._backend.native.NativeRenderer","\xb1","\xc4","\x96","\xae");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &NativeRenderer_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = NativeRenderer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(NativeRenderer_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(NativeRenderer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< NativeRenderer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NativeRenderer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NativeRenderer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NativeRenderer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace _backend
} // end namespace native
