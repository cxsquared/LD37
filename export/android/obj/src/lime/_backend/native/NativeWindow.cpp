// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeWindow
#include <lime/_backend/native/NativeWindow.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_system_Display
#include <lime/system/Display.h>
#endif
#ifndef INCLUDED_lime_system_System
#include <lime/system/System.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_30_new,"lime._backend.native.NativeWindow","new",0x5ec523d0,"lime._backend.native.NativeWindow.new","lime/_backend/native/NativeWindow.hx",30,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_37_alert,"lime._backend.native.NativeWindow","alert",0xfd8f66cc,"lime._backend.native.NativeWindow.alert","lime/_backend/native/NativeWindow.hx",37,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_50_close,"lime._backend.native.NativeWindow","close",0x24642728,"lime._backend.native.NativeWindow.close","lime/_backend/native/NativeWindow.hx",50,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_62_create,"lime._backend.native.NativeWindow","create",0x20fbd98c,"lime._backend.native.NativeWindow.create","lime/_backend/native/NativeWindow.hx",62,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_119_focus,"lime._backend.native.NativeWindow","focus",0xe08a6f48,"lime._backend.native.NativeWindow.focus","lime/_backend/native/NativeWindow.hx",119,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_130_getDisplay,"lime._backend.native.NativeWindow","getDisplay",0x2d6caadc,"lime._backend.native.NativeWindow.getDisplay","lime/_backend/native/NativeWindow.hx",130,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_149_getEnableTextEvents,"lime._backend.native.NativeWindow","getEnableTextEvents",0x8c63802f,"lime._backend.native.NativeWindow.getEnableTextEvents","lime/_backend/native/NativeWindow.hx",149,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_166_move,"lime._backend.native.NativeWindow","move",0x8d1891a1,"lime._backend.native.NativeWindow.move","lime/_backend/native/NativeWindow.hx",166,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_179_resize,"lime._backend.native.NativeWindow","resize",0xad67cc84,"lime._backend.native.NativeWindow.resize","lime/_backend/native/NativeWindow.hx",179,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_200_setBorderless,"lime._backend.native.NativeWindow","setBorderless",0x6caf83f7,"lime._backend.native.NativeWindow.setBorderless","lime/_backend/native/NativeWindow.hx",200,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_214_setEnableTextEvents,"lime._backend.native.NativeWindow","setEnableTextEvents",0xc900733b,"lime._backend.native.NativeWindow.setEnableTextEvents","lime/_backend/native/NativeWindow.hx",214,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_219_setFullscreen,"lime._backend.native.NativeWindow","setFullscreen",0x4ef277ed,"lime._backend.native.NativeWindow.setFullscreen","lime/_backend/native/NativeWindow.hx",219,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_247_setIcon,"lime._backend.native.NativeWindow","setIcon",0xb52ef3ab,"lime._backend.native.NativeWindow.setIcon","lime/_backend/native/NativeWindow.hx",247,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_258_setMaximized,"lime._backend.native.NativeWindow","setMaximized",0x34118ca6,"lime._backend.native.NativeWindow.setMaximized","lime/_backend/native/NativeWindow.hx",258,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_273_setMinimized,"lime._backend.native.NativeWindow","setMinimized",0x5dce7a14,"lime._backend.native.NativeWindow.setMinimized","lime/_backend/native/NativeWindow.hx",273,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_303_setResizable,"lime._backend.native.NativeWindow","setResizable",0xde80b5f9,"lime._backend.native.NativeWindow.setResizable","lime/_backend/native/NativeWindow.hx",303,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_307_setTitle,"lime._backend.native.NativeWindow","setTitle",0x2d49b526,"lime._backend.native.NativeWindow.setTitle","lime/_backend/native/NativeWindow.hx",307,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_323_lime_window_alert,"lime._backend.native.NativeWindow","lime_window_alert",0xe6f530a7,"lime._backend.native.NativeWindow.lime_window_alert","lime/_backend/native/NativeWindow.hx",323,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_324_lime_window_close,"lime._backend.native.NativeWindow","lime_window_close",0x0dc9f103,"lime._backend.native.NativeWindow.lime_window_close","lime/_backend/native/NativeWindow.hx",324,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_325_lime_window_create,"lime._backend.native.NativeWindow","lime_window_create",0x70a6af51,"lime._backend.native.NativeWindow.lime_window_create","lime/_backend/native/NativeWindow.hx",325,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_326_lime_window_focus,"lime._backend.native.NativeWindow","lime_window_focus",0xc9f03923,"lime._backend.native.NativeWindow.lime_window_focus","lime/_backend/native/NativeWindow.hx",326,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_327_lime_window_get_display,"lime._backend.native.NativeWindow","lime_window_get_display",0xf79dede4,"lime._backend.native.NativeWindow.lime_window_get_display","lime/_backend/native/NativeWindow.hx",327,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_328_lime_window_get_enable_text_events,"lime._backend.native.NativeWindow","lime_window_get_enable_text_events",0x611f444d,"lime._backend.native.NativeWindow.lime_window_get_enable_text_events","lime/_backend/native/NativeWindow.hx",328,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_329_lime_window_get_height,"lime._backend.native.NativeWindow","lime_window_get_height",0x49be0e85,"lime._backend.native.NativeWindow.lime_window_get_height","lime/_backend/native/NativeWindow.hx",329,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_330_lime_window_get_id,"lime._backend.native.NativeWindow","lime_window_get_id",0x97c73b79,"lime._backend.native.NativeWindow.lime_window_get_id","lime/_backend/native/NativeWindow.hx",330,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_331_lime_window_get_width,"lime._backend.native.NativeWindow","lime_window_get_width",0xa160ed28,"lime._backend.native.NativeWindow.lime_window_get_width","lime/_backend/native/NativeWindow.hx",331,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_332_lime_window_get_x,"lime._backend.native.NativeWindow","lime_window_get_x",0x56c77e9a,"lime._backend.native.NativeWindow.lime_window_get_x","lime/_backend/native/NativeWindow.hx",332,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_333_lime_window_get_y,"lime._backend.native.NativeWindow","lime_window_get_y",0x56c77e9b,"lime._backend.native.NativeWindow.lime_window_get_y","lime/_backend/native/NativeWindow.hx",333,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_334_lime_window_move,"lime._backend.native.NativeWindow","lime_window_move",0x582ffc26,"lime._backend.native.NativeWindow.lime_window_move","lime/_backend/native/NativeWindow.hx",334,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_335_lime_window_resize,"lime._backend.native.NativeWindow","lime_window_resize",0xfd12a249,"lime._backend.native.NativeWindow.lime_window_resize","lime/_backend/native/NativeWindow.hx",335,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_336_lime_window_set_borderless,"lime._backend.native.NativeWindow","lime_window_set_borderless",0x80cddc57,"lime._backend.native.NativeWindow.lime_window_set_borderless","lime/_backend/native/NativeWindow.hx",336,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_337_lime_window_set_enable_text_events,"lime._backend.native.NativeWindow","lime_window_set_enable_text_events",0x94cac0c1,"lime._backend.native.NativeWindow.lime_window_set_enable_text_events","lime/_backend/native/NativeWindow.hx",337,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_338_lime_window_set_fullscreen,"lime._backend.native.NativeWindow","lime_window_set_fullscreen",0x6310d04d,"lime._backend.native.NativeWindow.lime_window_set_fullscreen","lime/_backend/native/NativeWindow.hx",338,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_339_lime_window_set_icon,"lime._backend.native.NativeWindow","lime_window_set_icon",0x3304c40b,"lime._backend.native.NativeWindow.lime_window_set_icon","lime/_backend/native/NativeWindow.hx",339,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_340_lime_window_set_maximized,"lime._backend.native.NativeWindow","lime_window_set_maximized",0x0f6c6046,"lime._backend.native.NativeWindow.lime_window_set_maximized","lime/_backend/native/NativeWindow.hx",340,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_341_lime_window_set_minimized,"lime._backend.native.NativeWindow","lime_window_set_minimized",0x39294db4,"lime._backend.native.NativeWindow.lime_window_set_minimized","lime/_backend/native/NativeWindow.hx",341,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_342_lime_window_set_resizable,"lime._backend.native.NativeWindow","lime_window_set_resizable",0xb9db8999,"lime._backend.native.NativeWindow.lime_window_set_resizable","lime/_backend/native/NativeWindow.hx",342,0x34b7ce9f)
HX_DEFINE_STACK_FRAME(_hx_pos_fe3f835f12a28e22_343_lime_window_set_title,"lime._backend.native.NativeWindow","lime_window_set_title",0xca8a38c6,"lime._backend.native.NativeWindow.lime_window_set_title","lime/_backend/native/NativeWindow.hx",343,0x34b7ce9f)
namespace lime{
namespace _backend{
namespace native{

void NativeWindow_obj::__construct( ::lime::ui::Window parent){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_30_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(parent,"parent")
HXLINE(  30)		this->parent = parent;
            	}

Dynamic NativeWindow_obj::__CreateEmpty() { return new NativeWindow_obj; }

void *NativeWindow_obj::_hx_vtable = 0;

Dynamic NativeWindow_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NativeWindow_obj > _hx_result = new NativeWindow_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool NativeWindow_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x34d64d88;
}

void NativeWindow_obj::alert(::String message,::String title){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_37_alert)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(message,"message")
            	HX_STACK_ARG(title,"title")
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,alert,(void))

void NativeWindow_obj::close(){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_50_close)
            	HX_STACK_THIS(this)
HXLINE(  50)		if (hx::IsNotNull( this->handle )) {
HXLINE(  55)			this->handle = null();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeWindow_obj,close,(void))

void NativeWindow_obj::create( ::lime::app::Application application){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_62_create)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(application,"application")
HXLINE(  67)		if (hx::IsNotNull( this->parent->config )) {
HXLINE(  69)			::Reflect_obj::hasField(this->parent->config,HX_("antialiasing",f4,16,b3,48));
HXLINE(  83)			bool _hx_tmp;
HXDLIN(  83)			if (::Reflect_obj::hasField(this->parent->config,HX_("allowHighDPI",92,07,a2,b4))) {
HXLINE(  83)				_hx_tmp = ( (bool)(this->parent->config->__Field(HX_("allowHighDPI",92,07,a2,b4),hx::paccDynamic)) );
            			}
            			else {
HXLINE(  83)				_hx_tmp = false;
            			}
HXLINE(  84)			bool _hx_tmp1;
HXDLIN(  84)			if (::Reflect_obj::hasField(this->parent->config,HX_("borderless",45,46,71,17))) {
HXLINE(  84)				_hx_tmp1 = ( (bool)(this->parent->config->__Field(HX_("borderless",45,46,71,17),hx::paccDynamic)) );
            			}
            			else {
HXLINE(  84)				_hx_tmp1 = false;
            			}
HXLINE(  85)			bool _hx_tmp2;
HXDLIN(  85)			if (::Reflect_obj::hasField(this->parent->config,HX_("depthBuffer",63,46,9e,52))) {
HXLINE(  85)				_hx_tmp2 = ( (bool)(this->parent->config->__Field(HX_("depthBuffer",63,46,9e,52),hx::paccDynamic)) );
            			}
            			else {
HXLINE(  85)				_hx_tmp2 = false;
            			}
HXLINE(  86)			bool _hx_tmp3;
HXDLIN(  86)			if (::Reflect_obj::hasField(this->parent->config,HX_("fullscreen",3b,3a,b4,f9))) {
HXLINE(  86)				_hx_tmp3 = ( (bool)(this->parent->config->__Field(HX_("fullscreen",3b,3a,b4,f9),hx::paccDynamic)) );
            			}
            			else {
HXLINE(  86)				_hx_tmp3 = false;
            			}
HXLINE(  87)			bool _hx_tmp4;
HXDLIN(  87)			if (::Reflect_obj::hasField(this->parent->config,HX_("hardware",a8,e2,d3,75))) {
HXLINE(  87)				_hx_tmp4 = ( (bool)(this->parent->config->__Field(HX_("hardware",a8,e2,d3,75),hx::paccDynamic)) );
            			}
            			else {
HXLINE(  87)				_hx_tmp4 = false;
            			}
HXLINE(  88)			bool _hx_tmp5;
HXDLIN(  88)			if (::Reflect_obj::hasField(this->parent->config,HX_("resizable",6b,37,50,a9))) {
HXLINE(  88)				_hx_tmp5 = ( (bool)(this->parent->config->__Field(HX_("resizable",6b,37,50,a9),hx::paccDynamic)) );
            			}
            			else {
HXLINE(  88)				_hx_tmp5 = false;
            			}
HXLINE(  89)			bool _hx_tmp6;
HXDLIN(  89)			if (::Reflect_obj::hasField(this->parent->config,HX_("stencilBuffer",1c,94,39,31))) {
HXLINE(  89)				_hx_tmp6 = ( (bool)(this->parent->config->__Field(HX_("stencilBuffer",1c,94,39,31),hx::paccDynamic)) );
            			}
            			else {
HXLINE(  89)				_hx_tmp6 = false;
            			}
HXLINE(  90)			bool _hx_tmp7;
HXDLIN(  90)			if (::Reflect_obj::hasField(this->parent->config,HX_("vsync",d1,2d,a8,3d))) {
HXLINE(  90)				_hx_tmp7 = ( (bool)(this->parent->config->__Field(HX_("vsync",d1,2d,a8,3d),hx::paccDynamic)) );
            			}
            			else {
HXLINE(  90)				_hx_tmp7 = false;
            			}
HXLINE(  92)			::Reflect_obj::hasField(this->parent->config,HX_("title",98,15,3b,10));
            		}
HXLINE( 101)		 ::Dynamic _hx_tmp8 = null();
HXDLIN( 101)		this->handle = _hx_tmp8;
HXLINE( 103)		if (hx::IsNotNull( this->handle )) {
HXLINE( 105)			this->parent->_hx___width = (int)0;
HXLINE( 106)			this->parent->_hx___height = (int)0;
HXLINE( 107)			this->parent->_hx___x = (int)0;
HXLINE( 108)			this->parent->_hx___y = (int)0;
HXLINE( 109)			this->parent->id = (int)0;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,create,(void))

void NativeWindow_obj::focus(){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_119_focus)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeWindow_obj,focus,(void))

 ::lime::_hx_system::Display NativeWindow_obj::getDisplay(){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_130_getDisplay)
            	HX_STACK_THIS(this)
HXLINE( 132)		if (hx::IsNotNull( this->handle )) {
HXLINE( 138)			return ::lime::_hx_system::System_obj::getDisplay((int)0);
            		}
HXLINE( 144)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeWindow_obj,getDisplay,return )

bool NativeWindow_obj::getEnableTextEvents(){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_149_getEnableTextEvents)
            	HX_STACK_THIS(this)
HXLINE( 151)		if (hx::IsNotNull( this->handle )) {
HXLINE( 154)			return false;
            		}
HXLINE( 159)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeWindow_obj,getEnableTextEvents,return )

void NativeWindow_obj::move(int x,int y){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_166_move)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,move,(void))

void NativeWindow_obj::resize(int width,int height){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_179_resize)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,resize,(void))

bool NativeWindow_obj::setBorderless(bool value){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_200_setBorderless)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 200)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setBorderless,return )

bool NativeWindow_obj::setEnableTextEvents(bool value){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_214_setEnableTextEvents)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 214)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setEnableTextEvents,return )

bool NativeWindow_obj::setFullscreen(bool value){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_219_setFullscreen)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 221)		if (hx::IsNotNull( this->handle )) {
HXLINE( 224)			value = false;
HXLINE( 227)			this->parent->_hx___width = (int)0;
HXLINE( 228)			this->parent->_hx___height = (int)0;
HXLINE( 229)			this->parent->_hx___x = (int)0;
HXLINE( 230)			this->parent->_hx___y = (int)0;
            		}
HXLINE( 240)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setFullscreen,return )

void NativeWindow_obj::setIcon( ::lime::graphics::Image image){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_247_setIcon)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(image,"image")
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setIcon,(void))

bool NativeWindow_obj::setMaximized(bool value){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_258_setMaximized)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 260)		if (hx::IsNotNull( this->handle )) {
HXLINE( 263)			return false;
            		}
HXLINE( 268)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setMaximized,return )

bool NativeWindow_obj::setMinimized(bool value){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_273_setMinimized)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 275)		if (hx::IsNotNull( this->handle )) {
HXLINE( 278)			return false;
            		}
HXLINE( 283)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setMinimized,return )

bool NativeWindow_obj::setResizable(bool value){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_303_setResizable)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 303)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setResizable,return )

::String NativeWindow_obj::setTitle(::String value){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_307_setTitle)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 309)		if (hx::IsNotNull( this->handle )) {
HXLINE( 312)			return null();
            		}
HXLINE( 317)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,setTitle,return )

void NativeWindow_obj::lime_window_alert( ::Dynamic handle,::String message,::String title){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_323_lime_window_alert)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(message,"message")
            	HX_STACK_ARG(title,"title")
HXLINE( 323)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(NativeWindow_obj,lime_window_alert,(void))

void NativeWindow_obj::lime_window_close( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_324_lime_window_close)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 324)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_close,(void))

 ::Dynamic NativeWindow_obj::lime_window_create( ::Dynamic application,int width,int height,int flags,::String title){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_325_lime_window_create)
            	HX_STACK_ARG(application,"application")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(flags,"flags")
            	HX_STACK_ARG(title,"title")
HXLINE( 325)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(NativeWindow_obj,lime_window_create,return )

void NativeWindow_obj::lime_window_focus( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_326_lime_window_focus)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 326)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_focus,(void))

int NativeWindow_obj::lime_window_get_display( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_327_lime_window_get_display)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 327)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_display,return )

bool NativeWindow_obj::lime_window_get_enable_text_events( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_328_lime_window_get_enable_text_events)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 328)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_enable_text_events,return )

int NativeWindow_obj::lime_window_get_height( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_329_lime_window_get_height)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 329)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_height,return )

int NativeWindow_obj::lime_window_get_id( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_330_lime_window_get_id)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 330)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_id,return )

int NativeWindow_obj::lime_window_get_width( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_331_lime_window_get_width)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 331)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_width,return )

int NativeWindow_obj::lime_window_get_x( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_332_lime_window_get_x)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 332)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_x,return )

int NativeWindow_obj::lime_window_get_y( ::Dynamic handle){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_333_lime_window_get_y)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 333)		return (int)0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeWindow_obj,lime_window_get_y,return )

void NativeWindow_obj::lime_window_move( ::Dynamic handle,int x,int y){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_334_lime_window_move)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 334)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(NativeWindow_obj,lime_window_move,(void))

void NativeWindow_obj::lime_window_resize( ::Dynamic handle,int width,int height){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_335_lime_window_resize)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE( 335)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(NativeWindow_obj,lime_window_resize,(void))

bool NativeWindow_obj::lime_window_set_borderless( ::Dynamic handle,bool borderless){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_336_lime_window_set_borderless)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(borderless,"borderless")
HXLINE( 336)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_borderless,return )

void NativeWindow_obj::lime_window_set_enable_text_events( ::Dynamic handle,bool enabled){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_337_lime_window_set_enable_text_events)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(enabled,"enabled")
HXLINE( 337)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_enable_text_events,(void))

bool NativeWindow_obj::lime_window_set_fullscreen( ::Dynamic handle,bool fullscreen){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_338_lime_window_set_fullscreen)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(fullscreen,"fullscreen")
HXLINE( 338)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_fullscreen,return )

void NativeWindow_obj::lime_window_set_icon( ::Dynamic handle, ::Dynamic buffer){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_339_lime_window_set_icon)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(buffer,"buffer")
HXLINE( 339)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_icon,(void))

bool NativeWindow_obj::lime_window_set_maximized( ::Dynamic handle,bool maximized){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_340_lime_window_set_maximized)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(maximized,"maximized")
HXLINE( 340)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_maximized,return )

bool NativeWindow_obj::lime_window_set_minimized( ::Dynamic handle,bool minimized){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_341_lime_window_set_minimized)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(minimized,"minimized")
HXLINE( 341)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_minimized,return )

bool NativeWindow_obj::lime_window_set_resizable( ::Dynamic handle,bool resizable){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_342_lime_window_set_resizable)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(resizable,"resizable")
HXLINE( 342)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_resizable,return )

 ::Dynamic NativeWindow_obj::lime_window_set_title( ::Dynamic handle,::String title){
            	HX_STACKFRAME(&_hx_pos_fe3f835f12a28e22_343_lime_window_set_title)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(title,"title")
HXLINE( 343)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeWindow_obj,lime_window_set_title,return )


hx::ObjectPtr< NativeWindow_obj > NativeWindow_obj::__new( ::lime::ui::Window parent) {
	hx::ObjectPtr< NativeWindow_obj > __this = new NativeWindow_obj();
	__this->__construct(parent);
	return __this;
}

hx::ObjectPtr< NativeWindow_obj > NativeWindow_obj::__alloc(hx::Ctx *_hx_ctx, ::lime::ui::Window parent) {
	NativeWindow_obj *__this = (NativeWindow_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(NativeWindow_obj), true, "lime._backend.native.NativeWindow"));
	*(void **)__this = NativeWindow_obj::_hx_vtable;
	__this->__construct(parent);
	return __this;
}

NativeWindow_obj::NativeWindow_obj()
{
}

void NativeWindow_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(NativeWindow);
	HX_MARK_MEMBER_NAME(handle,"handle");
	HX_MARK_MEMBER_NAME(parent,"parent");
	HX_MARK_END_CLASS();
}

void NativeWindow_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(handle,"handle");
	HX_VISIT_MEMBER_NAME(parent,"parent");
}

hx::Val NativeWindow_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"move") ) { return hx::Val( move_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"alert") ) { return hx::Val( alert_dyn()); }
		if (HX_FIELD_EQ(inName,"close") ) { return hx::Val( close_dyn()); }
		if (HX_FIELD_EQ(inName,"focus") ) { return hx::Val( focus_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { return hx::Val( handle); }
		if (HX_FIELD_EQ(inName,"parent") ) { return hx::Val( parent); }
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn()); }
		if (HX_FIELD_EQ(inName,"resize") ) { return hx::Val( resize_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"setIcon") ) { return hx::Val( setIcon_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setTitle") ) { return hx::Val( setTitle_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getDisplay") ) { return hx::Val( getDisplay_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setMaximized") ) { return hx::Val( setMaximized_dyn()); }
		if (HX_FIELD_EQ(inName,"setMinimized") ) { return hx::Val( setMinimized_dyn()); }
		if (HX_FIELD_EQ(inName,"setResizable") ) { return hx::Val( setResizable_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"setBorderless") ) { return hx::Val( setBorderless_dyn()); }
		if (HX_FIELD_EQ(inName,"setFullscreen") ) { return hx::Val( setFullscreen_dyn()); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"getEnableTextEvents") ) { return hx::Val( getEnableTextEvents_dyn()); }
		if (HX_FIELD_EQ(inName,"setEnableTextEvents") ) { return hx::Val( setEnableTextEvents_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool NativeWindow_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"lime_window_move") ) { outValue = lime_window_move_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"lime_window_alert") ) { outValue = lime_window_alert_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_close") ) { outValue = lime_window_close_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_focus") ) { outValue = lime_window_focus_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_get_x") ) { outValue = lime_window_get_x_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_get_y") ) { outValue = lime_window_get_y_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"lime_window_create") ) { outValue = lime_window_create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_get_id") ) { outValue = lime_window_get_id_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_resize") ) { outValue = lime_window_resize_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"lime_window_set_icon") ) { outValue = lime_window_set_icon_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"lime_window_get_width") ) { outValue = lime_window_get_width_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_set_title") ) { outValue = lime_window_set_title_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"lime_window_get_height") ) { outValue = lime_window_get_height_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"lime_window_get_display") ) { outValue = lime_window_get_display_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"lime_window_set_maximized") ) { outValue = lime_window_set_maximized_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_set_minimized") ) { outValue = lime_window_set_minimized_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_set_resizable") ) { outValue = lime_window_set_resizable_dyn(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"lime_window_set_borderless") ) { outValue = lime_window_set_borderless_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_set_fullscreen") ) { outValue = lime_window_set_fullscreen_dyn(); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"lime_window_get_enable_text_events") ) { outValue = lime_window_get_enable_text_events_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_set_enable_text_events") ) { outValue = lime_window_set_enable_text_events_dyn(); return true; }
	}
	return false;
}

hx::Val NativeWindow_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { handle=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"parent") ) { parent=inValue.Cast<  ::lime::ui::Window >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void NativeWindow_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"));
	outFields->push(HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo NativeWindow_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(NativeWindow_obj,handle),HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7")},
	{hx::fsObject /*::lime::ui::Window*/ ,(int)offsetof(NativeWindow_obj,parent),HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *NativeWindow_obj_sStaticStorageInfo = 0;
#endif

static ::String NativeWindow_obj_sMemberFields[] = {
	HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"),
	HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed"),
	HX_HCSTRING("alert","\x5c","\x57","\x8e","\x21"),
	HX_HCSTRING("close","\xb8","\x17","\x63","\x48"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("focus","\xd8","\x5f","\x89","\x04"),
	HX_HCSTRING("getDisplay","\x4c","\xb0","\xab","\x0a"),
	HX_HCSTRING("getEnableTextEvents","\xbf","\x4c","\x30","\x24"),
	HX_HCSTRING("move","\x11","\xe3","\x60","\x48"),
	HX_HCSTRING("resize","\xf4","\x59","\x7b","\x08"),
	HX_HCSTRING("setBorderless","\x87","\x84","\xe9","\xb8"),
	HX_HCSTRING("setEnableTextEvents","\xcb","\x3f","\xcd","\x60"),
	HX_HCSTRING("setFullscreen","\x7d","\x78","\x2c","\x9b"),
	HX_HCSTRING("setIcon","\x3b","\x28","\x37","\x0b"),
	HX_HCSTRING("setMaximized","\x16","\xce","\x30","\x23"),
	HX_HCSTRING("setMinimized","\x84","\xbb","\xed","\x4c"),
	HX_HCSTRING("setResizable","\x69","\xf7","\x9f","\xcd"),
	HX_HCSTRING("setTitle","\x96","\x7e","\x6f","\x1e"),
	::String(null()) };

static void NativeWindow_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NativeWindow_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NativeWindow_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NativeWindow_obj::__mClass,"__mClass");
};

#endif

hx::Class NativeWindow_obj::__mClass;

static ::String NativeWindow_obj_sStaticFields[] = {
	HX_HCSTRING("lime_window_alert","\x37","\xb9","\xe2","\xc1"),
	HX_HCSTRING("lime_window_close","\x93","\x79","\xb7","\xe8"),
	HX_HCSTRING("lime_window_create","\xc1","\xa4","\x90","\x25"),
	HX_HCSTRING("lime_window_focus","\xb3","\xc1","\xdd","\xa4"),
	HX_HCSTRING("lime_window_get_display","\x74","\x42","\x74","\x0d"),
	HX_HCSTRING("lime_window_get_enable_text_events","\xbd","\x19","\xaf","\xda"),
	HX_HCSTRING("lime_window_get_height","\xf5","\x7b","\x27","\xd0"),
	HX_HCSTRING("lime_window_get_id","\xe9","\x30","\xb1","\x4c"),
	HX_HCSTRING("lime_window_get_width","\xb8","\xfd","\x65","\x5f"),
	HX_HCSTRING("lime_window_get_x","\x2a","\x07","\xb5","\x31"),
	HX_HCSTRING("lime_window_get_y","\x2b","\x07","\xb5","\x31"),
	HX_HCSTRING("lime_window_move","\x96","\xb5","\x64","\x4b"),
	HX_HCSTRING("lime_window_resize","\xb9","\x97","\xfc","\xb1"),
	HX_HCSTRING("lime_window_set_borderless","\xc7","\xc1","\xd2","\x19"),
	HX_HCSTRING("lime_window_set_enable_text_events","\x31","\x96","\x5a","\x0e"),
	HX_HCSTRING("lime_window_set_fullscreen","\xbd","\xb5","\x15","\xfc"),
	HX_HCSTRING("lime_window_set_icon","\x7b","\xf5","\x6a","\x6e"),
	HX_HCSTRING("lime_window_set_maximized","\xd6","\xf8","\xec","\x06"),
	HX_HCSTRING("lime_window_set_minimized","\x44","\xe6","\xa9","\x30"),
	HX_HCSTRING("lime_window_set_resizable","\x29","\x22","\x5c","\xb1"),
	HX_HCSTRING("lime_window_set_title","\x56","\x49","\x8f","\x88"),
	::String(null())
};

void NativeWindow_obj::__register()
{
	hx::Object *dummy = new NativeWindow_obj;
	NativeWindow_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime._backend.native.NativeWindow","\xde","\x3b","\x5b","\x7f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &NativeWindow_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = NativeWindow_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(NativeWindow_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(NativeWindow_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< NativeWindow_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NativeWindow_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NativeWindow_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NativeWindow_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace _backend
} // end namespace native
