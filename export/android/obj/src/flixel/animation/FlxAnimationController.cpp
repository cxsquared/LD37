// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimation
#include <flixel/animation/FlxAnimation.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxBaseAnimation
#include <flixel/animation/FlxBaseAnimation.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxPrerotatedAnimation
#include <flixel/animation/FlxPrerotatedAnimation.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFrame
#include <flixel/graphics/frames/FlxFrame.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_math_FlxRandom
#include <flixel/math/FlxRandom.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_8_new,"flixel.animation.FlxAnimationController","new",0x0b6477fc,"flixel.animation.FlxAnimationController.new","flixel/animation/FlxAnimationController.hx",8,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_85_update,"flixel.animation.FlxAnimationController","update",0x8fb487ed,"flixel.animation.FlxAnimationController.update","flixel/animation/FlxAnimationController.hx",85,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_96_copyFrom,"flixel.animation.FlxAnimationController","copyFrom",0x9c3f4ea3,"flixel.animation.FlxAnimationController.copyFrom","flixel/animation/FlxAnimationController.hx",96,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_120_createPrerotated,"flixel.animation.FlxAnimationController","createPrerotated",0xc538c8e6,"flixel.animation.FlxAnimationController.createPrerotated","flixel/animation/FlxAnimationController.hx",120,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_128_destroyAnimations,"flixel.animation.FlxAnimationController","destroyAnimations",0x0b136325,"flixel.animation.FlxAnimationController.destroyAnimations","flixel/animation/FlxAnimationController.hx",128,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_134_destroy,"flixel.animation.FlxAnimationController","destroy",0xb4f8d296,"flixel.animation.FlxAnimationController.destroy","flixel/animation/FlxAnimationController.hx",134,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_142_clearPrerotated,"flixel.animation.FlxAnimationController","clearPrerotated",0x8ef9ed6f,"flixel.animation.FlxAnimationController.clearPrerotated","flixel/animation/FlxAnimationController.hx",142,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_151_clearAnimations,"flixel.animation.FlxAnimationController","clearAnimations",0x7ffc9e78,"flixel.animation.FlxAnimationController.clearAnimations","flixel/animation/FlxAnimationController.hx",151,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_179_add,"flixel.animation.FlxAnimationController","add",0x0b5a99bd,"flixel.animation.FlxAnimationController.add","flixel/animation/FlxAnimationController.hx",179,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_213_remove,"flixel.animation.FlxAnimationController","remove",0x0d379e28,"flixel.animation.FlxAnimationController.remove","flixel/animation/FlxAnimationController.hx",213,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_231_append,"flixel.animation.FlxAnimationController","append",0x9882e3be,"flixel.animation.FlxAnimationController.append","flixel/animation/FlxAnimationController.hx",231,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_267_addByNames,"flixel.animation.FlxAnimationController","addByNames",0x17c20e34,"flixel.animation.FlxAnimationController.addByNames","flixel/animation/FlxAnimationController.hx",267,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_289_appendByNames,"flixel.animation.FlxAnimationController","appendByNames",0xcdc97653,"flixel.animation.FlxAnimationController.appendByNames","flixel/animation/FlxAnimationController.hx",289,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_318_addByStringIndices,"flixel.animation.FlxAnimationController","addByStringIndices",0x0f3d3cc2,"flixel.animation.FlxAnimationController.addByStringIndices","flixel/animation/FlxAnimationController.hx",318,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_342_appendByStringIndices,"flixel.animation.FlxAnimationController","appendByStringIndices",0x42285be1,"flixel.animation.FlxAnimationController.appendByStringIndices","flixel/animation/FlxAnimationController.hx",342,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_371_addByIndices,"flixel.animation.FlxAnimationController","addByIndices",0x4dbf3893,"flixel.animation.FlxAnimationController.addByIndices","flixel/animation/FlxAnimationController.hx",371,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_396_appendByIndices,"flixel.animation.FlxAnimationController","appendByIndices",0x22882672,"flixel.animation.FlxAnimationController.appendByIndices","flixel/animation/FlxAnimationController.hx",396,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_417_findSpriteFrame,"flixel.animation.FlxAnimationController","findSpriteFrame",0x746a2bcb,"flixel.animation.FlxAnimationController.findSpriteFrame","flixel/animation/FlxAnimationController.hx",417,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_448_addByPrefix,"flixel.animation.FlxAnimationController","addByPrefix",0x4347f9a6,"flixel.animation.FlxAnimationController.addByPrefix","flixel/animation/FlxAnimationController.hx",448,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_477_appendByPrefix,"flixel.animation.FlxAnimationController","appendByPrefix",0xd3bbaca7,"flixel.animation.FlxAnimationController.appendByPrefix","flixel/animation/FlxAnimationController.hx",477,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_508_play,"flixel.animation.FlxAnimationController","play",0xeddc2ed8,"flixel.animation.FlxAnimationController.play","flixel/animation/FlxAnimationController.hx",508,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_547_reset,"flixel.animation.FlxAnimationController","reset",0x5507106b,"flixel.animation.FlxAnimationController.reset","flixel/animation/FlxAnimationController.hx",547,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_558_finish,"flixel.animation.FlxAnimationController","finish",0x8f2e4237,"flixel.animation.FlxAnimationController.finish","flixel/animation/FlxAnimationController.hx",558,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_569_stop,"flixel.animation.FlxAnimationController","stop",0xefddf0e6,"flixel.animation.FlxAnimationController.stop","flixel/animation/FlxAnimationController.hx",569,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_580_pause,"flixel.animation.FlxAnimationController","pause",0x2b969d92,"flixel.animation.FlxAnimationController.pause","flixel/animation/FlxAnimationController.hx",580,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_591_resume,"flixel.animation.FlxAnimationController","resume",0x11336b91,"flixel.animation.FlxAnimationController.resume","flixel/animation/FlxAnimationController.hx",591,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_602_reverse,"flixel.animation.FlxAnimationController","reverse",0xab6edebe,"flixel.animation.FlxAnimationController.reverse","flixel/animation/FlxAnimationController.hx",602,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_613_getByName,"flixel.animation.FlxAnimationController","getByName",0x1940f994,"flixel.animation.FlxAnimationController.getByName","flixel/animation/FlxAnimationController.hx",613,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_621_randomFrame,"flixel.animation.FlxAnimationController","randomFrame",0x12c43ec6,"flixel.animation.FlxAnimationController.randomFrame","flixel/animation/FlxAnimationController.hx",621,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_632_fireCallback,"flixel.animation.FlxAnimationController","fireCallback",0x1523547f,"flixel.animation.FlxAnimationController.fireCallback","flixel/animation/FlxAnimationController.hx",632,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_643_fireFinishCallback,"flixel.animation.FlxAnimationController","fireFinishCallback",0x96b92372,"flixel.animation.FlxAnimationController.fireFinishCallback","flixel/animation/FlxAnimationController.hx",643,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_654_byNamesHelper,"flixel.animation.FlxAnimationController","byNamesHelper",0x4e6fbd5b,"flixel.animation.FlxAnimationController.byNamesHelper","flixel/animation/FlxAnimationController.hx",654,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_669_byStringIndicesHelper,"flixel.animation.FlxAnimationController","byStringIndicesHelper",0xccff0b69,"flixel.animation.FlxAnimationController.byStringIndicesHelper","flixel/animation/FlxAnimationController.hx",669,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_685_byIndicesHelper,"flixel.animation.FlxAnimationController","byIndicesHelper",0xe757113a,"flixel.animation.FlxAnimationController.byIndicesHelper","flixel/animation/FlxAnimationController.hx",685,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_699_byPrefixHelper,"flixel.animation.FlxAnimationController","byPrefixHelper",0x238152fb,"flixel.animation.FlxAnimationController.byPrefixHelper","flixel/animation/FlxAnimationController.hx",699,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_716_findByPrefix,"flixel.animation.FlxAnimationController","findByPrefix",0x32419106,"flixel.animation.FlxAnimationController.findByPrefix","flixel/animation/FlxAnimationController.hx",716,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_726_set_frameIndex,"flixel.animation.FlxAnimationController","set_frameIndex",0xd769c646,"flixel.animation.FlxAnimationController.set_frameIndex","flixel/animation/FlxAnimationController.hx",726,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_740_get_frameName,"flixel.animation.FlxAnimationController","get_frameName",0x1674c78b,"flixel.animation.FlxAnimationController.get_frameName","flixel/animation/FlxAnimationController.hx",740,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_744_set_frameName,"flixel.animation.FlxAnimationController","set_frameName",0x5b7aa997,"flixel.animation.FlxAnimationController.set_frameName","flixel/animation/FlxAnimationController.hx",744,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_764_get_name,"flixel.animation.FlxAnimationController","get_name",0x9c9870b8,"flixel.animation.FlxAnimationController.get_name","flixel/animation/FlxAnimationController.hx",764,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_774_set_name,"flixel.animation.FlxAnimationController","set_name",0x4af5ca2c,"flixel.animation.FlxAnimationController.set_name","flixel/animation/FlxAnimationController.hx",774,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_781_get_curAnim,"flixel.animation.FlxAnimationController","get_curAnim",0xd32cfb64,"flixel.animation.FlxAnimationController.get_curAnim","flixel/animation/FlxAnimationController.hx",781,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_785_set_curAnim,"flixel.animation.FlxAnimationController","set_curAnim",0xdd9a0270,"flixel.animation.FlxAnimationController.set_curAnim","flixel/animation/FlxAnimationController.hx",785,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_802_get_paused,"flixel.animation.FlxAnimationController","get_paused",0x1a2b745b,"flixel.animation.FlxAnimationController.get_paused","flixel/animation/FlxAnimationController.hx",802,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_812_set_paused,"flixel.animation.FlxAnimationController","set_paused",0x1da912cf,"flixel.animation.FlxAnimationController.set_paused","flixel/animation/FlxAnimationController.hx",812,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_828_get_finished,"flixel.animation.FlxAnimationController","get_finished",0x1eabcc5f,"flixel.animation.FlxAnimationController.get_finished","flixel/animation/FlxAnimationController.hx",828,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_838_set_finished,"flixel.animation.FlxAnimationController","set_finished",0x33a4efd3,"flixel.animation.FlxAnimationController.set_finished","flixel/animation/FlxAnimationController.hx",838,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_848_get_frames,"flixel.animation.FlxAnimationController","get_frames",0xd72ce353,"flixel.animation.FlxAnimationController.get_frames","flixel/animation/FlxAnimationController.hx",848,0xa6f01372)
HX_DEFINE_STACK_FRAME(_hx_pos_5ed655cc53689dfd_859_getFrameIndex,"flixel.animation.FlxAnimationController","getFrameIndex",0x1c3dee77,"flixel.animation.FlxAnimationController.getFrameIndex","flixel/animation/FlxAnimationController.hx",859,0xa6f01372)
namespace flixel{
namespace animation{

void FlxAnimationController_obj::__construct( ::flixel::FlxSprite Sprite){
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_8_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Sprite,"Sprite")
HXLINE(  18)		this->frameIndex = (int)-1;
HXLINE(  79)		this->_sprite = Sprite;
HXLINE(  80)		this->_animations =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}

Dynamic FlxAnimationController_obj::__CreateEmpty() { return new FlxAnimationController_obj; }

void *FlxAnimationController_obj::_hx_vtable = 0;

Dynamic FlxAnimationController_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlxAnimationController_obj > _hx_result = new FlxAnimationController_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool FlxAnimationController_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x41b9f4d2;
}

static ::flixel::util::IFlxDestroyable_obj _hx_flixel_animation_FlxAnimationController__hx_flixel_util_IFlxDestroyable= {
	( void (hx::Object::*)())&::flixel::animation::FlxAnimationController_obj::destroy,
};

void *FlxAnimationController_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xd4fe2fcd: return &_hx_flixel_animation_FlxAnimationController__hx_flixel_util_IFlxDestroyable;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void FlxAnimationController_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_85_update)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(elapsed,"elapsed")
HXLINE(  85)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE(  87)			this->_curAnim->update(elapsed);
            		}
            		else {
HXLINE(  89)			if (hx::IsNotNull( this->_prerotated )) {
HXLINE(  91)				this->_prerotated->set_angle(this->_sprite->angle);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,update,(void))

 ::flixel::animation::FlxAnimationController FlxAnimationController_obj::copyFrom( ::flixel::animation::FlxAnimationController controller){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_96_copyFrom)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(controller,"controller")
HXLINE(  97)		this->destroyAnimations();
HXLINE(  99)		{
HXLINE(  99)			HX_VARI(  ::Dynamic,anim) = controller->_animations->iterator();
HXDLIN(  99)			while(( (bool)(anim->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE(  99)				HX_VARI_NAME(  ::flixel::animation::FlxAnimation,anim1,"anim") = ( ( ::flixel::animation::FlxAnimation)(anim->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 101)				this->add(anim1->name,anim1->frames,anim1->frameRate,anim1->looped,null(),null());
            			}
            		}
HXLINE( 104)		if (hx::IsNotNull( controller->_prerotated )) {
HXLINE( 106)			this->createPrerotated(null());
            		}
HXLINE( 109)		if (hx::IsNotNull( controller->get_name() )) {
HXLINE( 111)			this->set_name(controller->get_name());
            		}
HXLINE( 114)		this->set_frameIndex(controller->frameIndex);
HXLINE( 116)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,copyFrom,return )

void FlxAnimationController_obj::createPrerotated( ::flixel::animation::FlxAnimationController Controller){
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_120_createPrerotated)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Controller,"Controller")
HXLINE( 121)		this->destroyAnimations();
HXLINE( 122)		if (hx::IsNotNull( Controller )) {
HXLINE( 122)			Controller = Controller;
            		}
            		else {
HXLINE( 122)			Controller = hx::ObjectPtr<OBJ_>(this);
            		}
HXLINE( 123)		this->_prerotated =  ::flixel::animation::FlxPrerotatedAnimation_obj::__alloc( HX_CTX ,Controller,Controller->_sprite->bakedRotationAngle);
HXLINE( 124)		this->_prerotated->set_angle(this->_sprite->angle);
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,createPrerotated,(void))

void FlxAnimationController_obj::destroyAnimations(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_128_destroyAnimations)
            	HX_STACK_THIS(this)
HXLINE( 129)		this->clearAnimations();
HXLINE( 130)		this->clearPrerotated();
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,destroyAnimations,(void))

void FlxAnimationController_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_134_destroy)
            	HX_STACK_THIS(this)
HXLINE( 135)		this->destroyAnimations();
HXLINE( 136)		this->_animations = null();
HXLINE( 137)		this->callback = null();
HXLINE( 138)		this->_sprite = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,destroy,(void))

void FlxAnimationController_obj::clearPrerotated(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_142_clearPrerotated)
            	HX_STACK_THIS(this)
HXLINE( 143)		if (hx::IsNotNull( this->_prerotated )) {
HXLINE( 145)			this->_prerotated->destroy();
            		}
HXLINE( 147)		this->_prerotated = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,clearPrerotated,(void))

void FlxAnimationController_obj::clearAnimations(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_151_clearAnimations)
            	HX_STACK_THIS(this)
HXLINE( 152)		if (hx::IsNotNull( this->_animations )) {
HXLINE( 154)			HX_VAR(  ::flixel::animation::FlxAnimation,anim);
HXLINE( 155)			{
HXLINE( 155)				HX_VARI(  ::Dynamic,key) = this->_animations->keys();
HXDLIN( 155)				while(( (bool)(key->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 155)					HX_VARI_NAME( ::String,key1,"key") = ( (::String)(key->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 157)					anim = this->_animations->get(key1).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 158)					if (hx::IsNotNull( anim )) {
HXLINE( 160)						anim->destroy();
            					}
HXLINE( 162)					this->_animations->remove(key1);
            				}
            			}
            		}
HXLINE( 165)		this->_curAnim = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,clearAnimations,(void))

void FlxAnimationController_obj::add(::String Name,::Array< int > Frames,hx::Null< int >  __o_FrameRate,hx::Null< bool >  __o_Looped,hx::Null< bool >  __o_FlipX,hx::Null< bool >  __o_FlipY){
int FrameRate = __o_FrameRate.Default(30);
bool Looped = __o_Looped.Default(true);
bool FlipX = __o_FlipX.Default(false);
bool FlipY = __o_FlipY.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_179_add)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
            	HX_STACK_ARG(Frames,"Frames")
            	HX_STACK_ARG(FrameRate,"FrameRate")
            	HX_STACK_ARG(Looped,"Looped")
            	HX_STACK_ARG(FlipX,"FlipX")
            	HX_STACK_ARG(FlipY,"FlipY")
HXLINE( 181)		HX_VARI( ::Array< int >,framesToAdd) = Frames;
HXLINE( 183)		HX_VARI( int,i) = (Frames->length - (int)1);
HXLINE( 184)		while((i >= (int)0)){
HXLINE( 186)			if ((framesToAdd->__get(i) >= this->_sprite->numFrames)) {
HXLINE( 190)				if (hx::IsEq( framesToAdd,Frames )) {
HXLINE( 192)					framesToAdd = Frames->copy();
            				}
HXLINE( 195)				framesToAdd->removeRange(i,(int)1);
            			}
HXLINE( 197)			i = (i - (int)1);
            		}
HXLINE( 200)		if ((framesToAdd->length > (int)0)) {
HXLINE( 202)			HX_VARI(  ::flixel::animation::FlxAnimation,anim) =  ::flixel::animation::FlxAnimation_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),Name,framesToAdd,FrameRate,Looped,FlipX,FlipY);
HXLINE( 203)			this->_animations->set(Name,anim);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC6(FlxAnimationController_obj,add,(void))

void FlxAnimationController_obj::remove(::String Name){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_213_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
HXLINE( 214)		HX_VARI(  ::flixel::animation::FlxAnimation,anim) = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 215)		if (hx::IsNotNull( anim )) {
HXLINE( 217)			this->_animations->remove(Name);
HXLINE( 218)			anim->destroy();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,remove,(void))

void FlxAnimationController_obj::append(::String Name,::Array< int > Frames){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_231_append)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
            	HX_STACK_ARG(Frames,"Frames")
HXLINE( 232)		HX_VARI(  ::flixel::animation::FlxAnimation,anim) = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 234)		if (hx::IsNull( anim )) {
HXLINE( 238)			return;
            		}
HXLINE( 242)		HX_VARI( int,numFrames) = (Frames->length - (int)1);
HXLINE( 243)		HX_VARI( int,i) = numFrames;
HXLINE( 244)		while((i >= (int)0)){
HXLINE( 246)			if ((Frames->__get((numFrames - i)) < this->_sprite->numFrames)) {
HXLINE( 249)				anim->frames->push(Frames->__get((numFrames - i)));
            			}
HXLINE( 251)			i = (i - (int)1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxAnimationController_obj,append,(void))

void FlxAnimationController_obj::addByNames(::String Name,::Array< ::String > FrameNames,hx::Null< int >  __o_FrameRate,hx::Null< bool >  __o_Looped,hx::Null< bool >  __o_FlipX,hx::Null< bool >  __o_FlipY){
int FrameRate = __o_FrameRate.Default(30);
bool Looped = __o_Looped.Default(true);
bool FlipX = __o_FlipX.Default(false);
bool FlipY = __o_FlipY.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_267_addByNames)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
            	HX_STACK_ARG(FrameNames,"FrameNames")
            	HX_STACK_ARG(FrameRate,"FrameRate")
            	HX_STACK_ARG(Looped,"Looped")
            	HX_STACK_ARG(FlipX,"FlipX")
            	HX_STACK_ARG(FlipY,"FlipY")
HXLINE( 267)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 269)			HX_VARI( ::Array< int >,indices) = ::Array_obj< int >::__new();
HXLINE( 270)			this->byNamesHelper(indices,FrameNames);
HXLINE( 272)			if ((indices->length > (int)0)) {
HXLINE( 274)				HX_VARI(  ::flixel::animation::FlxAnimation,anim) =  ::flixel::animation::FlxAnimation_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),Name,indices,FrameRate,Looped,FlipX,FlipY);
HXLINE( 275)				this->_animations->set(Name,anim);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC6(FlxAnimationController_obj,addByNames,(void))

void FlxAnimationController_obj::appendByNames(::String Name,::Array< ::String > FrameNames){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_289_appendByNames)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
            	HX_STACK_ARG(FrameNames,"FrameNames")
HXLINE( 290)		HX_VARI(  ::flixel::animation::FlxAnimation,anim) = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 292)		if (hx::IsNull( anim )) {
HXLINE( 295)			return;
            		}
HXLINE( 298)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 300)			this->byNamesHelper(anim->frames,FrameNames);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxAnimationController_obj,appendByNames,(void))

void FlxAnimationController_obj::addByStringIndices(::String Name,::String Prefix,::Array< ::String > Indices,::String Postfix,hx::Null< int >  __o_FrameRate,hx::Null< bool >  __o_Looped,hx::Null< bool >  __o_FlipX,hx::Null< bool >  __o_FlipY){
int FrameRate = __o_FrameRate.Default(30);
bool Looped = __o_Looped.Default(true);
bool FlipX = __o_FlipX.Default(false);
bool FlipY = __o_FlipY.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_318_addByStringIndices)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
            	HX_STACK_ARG(Prefix,"Prefix")
            	HX_STACK_ARG(Indices,"Indices")
            	HX_STACK_ARG(Postfix,"Postfix")
            	HX_STACK_ARG(FrameRate,"FrameRate")
            	HX_STACK_ARG(Looped,"Looped")
            	HX_STACK_ARG(FlipX,"FlipX")
            	HX_STACK_ARG(FlipY,"FlipY")
HXLINE( 318)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 320)			HX_VARI( ::Array< int >,frameIndices) = ::Array_obj< int >::__new();
HXLINE( 321)			this->byStringIndicesHelper(frameIndices,Prefix,Indices,Postfix);
HXLINE( 323)			if ((frameIndices->length > (int)0)) {
HXLINE( 325)				HX_VARI(  ::flixel::animation::FlxAnimation,anim) =  ::flixel::animation::FlxAnimation_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),Name,frameIndices,FrameRate,Looped,FlipX,FlipY);
HXLINE( 326)				this->_animations->set(Name,anim);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC8(FlxAnimationController_obj,addByStringIndices,(void))

void FlxAnimationController_obj::appendByStringIndices(::String Name,::String Prefix,::Array< ::String > Indices,::String Postfix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_342_appendByStringIndices)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
            	HX_STACK_ARG(Prefix,"Prefix")
            	HX_STACK_ARG(Indices,"Indices")
            	HX_STACK_ARG(Postfix,"Postfix")
HXLINE( 343)		HX_VARI(  ::flixel::animation::FlxAnimation,anim) = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 345)		if (hx::IsNull( anim )) {
HXLINE( 348)			return;
            		}
HXLINE( 351)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 353)			this->byStringIndicesHelper(anim->frames,Prefix,Indices,Postfix);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxAnimationController_obj,appendByStringIndices,(void))

void FlxAnimationController_obj::addByIndices(::String Name,::String Prefix,::Array< int > Indices,::String Postfix,hx::Null< int >  __o_FrameRate,hx::Null< bool >  __o_Looped,hx::Null< bool >  __o_FlipX,hx::Null< bool >  __o_FlipY){
int FrameRate = __o_FrameRate.Default(30);
bool Looped = __o_Looped.Default(true);
bool FlipX = __o_FlipX.Default(false);
bool FlipY = __o_FlipY.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_371_addByIndices)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
            	HX_STACK_ARG(Prefix,"Prefix")
            	HX_STACK_ARG(Indices,"Indices")
            	HX_STACK_ARG(Postfix,"Postfix")
            	HX_STACK_ARG(FrameRate,"FrameRate")
            	HX_STACK_ARG(Looped,"Looped")
            	HX_STACK_ARG(FlipX,"FlipX")
            	HX_STACK_ARG(FlipY,"FlipY")
HXLINE( 371)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 373)			HX_VARI( ::Array< int >,frameIndices) = ::Array_obj< int >::__new();
HXLINE( 374)			this->byIndicesHelper(frameIndices,Prefix,Indices,Postfix);
HXLINE( 376)			if ((frameIndices->length > (int)0)) {
HXLINE( 378)				HX_VARI(  ::flixel::animation::FlxAnimation,anim) =  ::flixel::animation::FlxAnimation_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),Name,frameIndices,FrameRate,Looped,FlipX,FlipY);
HXLINE( 379)				this->_animations->set(Name,anim);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC8(FlxAnimationController_obj,addByIndices,(void))

void FlxAnimationController_obj::appendByIndices(::String Name,::String Prefix,::Array< int > Indices,::String Postfix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_396_appendByIndices)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
            	HX_STACK_ARG(Prefix,"Prefix")
            	HX_STACK_ARG(Indices,"Indices")
            	HX_STACK_ARG(Postfix,"Postfix")
HXLINE( 397)		HX_VARI(  ::flixel::animation::FlxAnimation,anim) = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 398)		if (hx::IsNull( anim )) {
HXLINE( 401)			return;
            		}
HXLINE( 404)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 406)			this->byIndicesHelper(anim->frames,Prefix,Indices,Postfix);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxAnimationController_obj,appendByIndices,(void))

int FlxAnimationController_obj::findSpriteFrame(::String Prefix,int Index,::String Postfix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_417_findSpriteFrame)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Prefix,"Prefix")
            	HX_STACK_ARG(Index,"Index")
            	HX_STACK_ARG(Postfix,"Postfix")
HXLINE( 418)		HX_VARI( int,numFrames) = this->_sprite->numFrames;
HXLINE( 419)		HX_VARI( ::Array< ::Dynamic>,flxFrames) = this->_sprite->frames->frames;
HXLINE( 420)		{
HXLINE( 420)			HX_VARI( int,_g1) = (int)0;
HXDLIN( 420)			while((_g1 < numFrames)){
HXLINE( 420)				_g1 = (_g1 + (int)1);
HXDLIN( 420)				HX_VARI( int,i) = (_g1 - (int)1);
HXLINE( 422)				HX_VARI( ::String,name) = flxFrames->__get(i).StaticCast<  ::flixel::graphics::frames::FlxFrame >()->name;
HXLINE( 423)				bool _hx_tmp;
HXDLIN( 423)				if (::StringTools_obj::startsWith(name,Prefix)) {
HXLINE( 423)					_hx_tmp = ::StringTools_obj::endsWith(name,Postfix);
            				}
            				else {
HXLINE( 423)					_hx_tmp = false;
            				}
HXDLIN( 423)				if (_hx_tmp) {
HXLINE( 425)					HX_VARI(  ::Dynamic,index) = ::Std_obj::parseInt(name.substring(Prefix.length,(name.length - Postfix.length)));
HXLINE( 426)					bool _hx_tmp1;
HXDLIN( 426)					if (hx::IsNotNull( index )) {
HXLINE( 426)						_hx_tmp1 = hx::IsEq( index,Index );
            					}
            					else {
HXLINE( 426)						_hx_tmp1 = false;
            					}
HXDLIN( 426)					if (_hx_tmp1) {
HXLINE( 428)						return i;
            					}
            				}
            			}
            		}
HXLINE( 433)		return (int)-1;
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxAnimationController_obj,findSpriteFrame,return )

void FlxAnimationController_obj::addByPrefix(::String Name,::String Prefix,hx::Null< int >  __o_FrameRate,hx::Null< bool >  __o_Looped,hx::Null< bool >  __o_FlipX,hx::Null< bool >  __o_FlipY){
int FrameRate = __o_FrameRate.Default(30);
bool Looped = __o_Looped.Default(true);
bool FlipX = __o_FlipX.Default(false);
bool FlipY = __o_FlipY.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_5ed655cc53689dfd_448_addByPrefix)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
            	HX_STACK_ARG(Prefix,"Prefix")
            	HX_STACK_ARG(FrameRate,"FrameRate")
            	HX_STACK_ARG(Looped,"Looped")
            	HX_STACK_ARG(FlipX,"FlipX")
            	HX_STACK_ARG(FlipY,"FlipY")
HXLINE( 448)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 450)			HX_VARI( ::Array< ::Dynamic>,animFrames) = ::Array_obj< ::Dynamic>::__new();
HXLINE( 451)			this->findByPrefix(animFrames,Prefix);
HXLINE( 453)			if ((animFrames->length > (int)0)) {
HXLINE( 455)				HX_VARI( ::Array< int >,frameIndices) = ::Array_obj< int >::__new();
HXLINE( 456)				this->byPrefixHelper(frameIndices,animFrames,Prefix);
HXLINE( 458)				if ((frameIndices->length > (int)0)) {
HXLINE( 460)					HX_VARI(  ::flixel::animation::FlxAnimation,anim) =  ::flixel::animation::FlxAnimation_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),Name,frameIndices,FrameRate,Looped,FlipX,FlipY);
HXLINE( 461)					this->_animations->set(Name,anim);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC6(FlxAnimationController_obj,addByPrefix,(void))

void FlxAnimationController_obj::appendByPrefix(::String Name,::String Prefix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_477_appendByPrefix)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
            	HX_STACK_ARG(Prefix,"Prefix")
HXLINE( 478)		HX_VARI(  ::flixel::animation::FlxAnimation,anim) = this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 479)		if (hx::IsNull( anim )) {
HXLINE( 482)			return;
            		}
HXLINE( 485)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 487)			HX_VARI( ::Array< ::Dynamic>,animFrames) = ::Array_obj< ::Dynamic>::__new();
HXLINE( 488)			this->findByPrefix(animFrames,Prefix);
HXLINE( 490)			if ((animFrames->length > (int)0)) {
HXLINE( 492)				this->byPrefixHelper(anim->frames,animFrames,Prefix);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxAnimationController_obj,appendByPrefix,(void))

void FlxAnimationController_obj::play(::String AnimName,hx::Null< bool >  __o_Force,hx::Null< bool >  __o_Reversed,hx::Null< int >  __o_Frame){
bool Force = __o_Force.Default(false);
bool Reversed = __o_Reversed.Default(false);
int Frame = __o_Frame.Default(0);
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_508_play)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(AnimName,"AnimName")
            	HX_STACK_ARG(Force,"Force")
            	HX_STACK_ARG(Reversed,"Reversed")
            	HX_STACK_ARG(Frame,"Frame")
HXLINE( 509)		if (hx::IsNull( AnimName )) {
HXLINE( 511)			if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 513)				this->_curAnim->stop();
            			}
HXLINE( 515)			this->_curAnim = null();
            		}
HXLINE( 518)		bool _hx_tmp;
HXDLIN( 518)		if (hx::IsNotNull( AnimName )) {
HXLINE( 518)			_hx_tmp = hx::IsNull( this->_animations->get(AnimName).StaticCast<  ::flixel::animation::FlxAnimation >() );
            		}
            		else {
HXLINE( 518)			_hx_tmp = true;
            		}
HXDLIN( 518)		if (_hx_tmp) {
HXLINE( 521)			return;
            		}
HXLINE( 524)		HX_VARI( bool,oldFlipX) = false;
HXLINE( 525)		HX_VARI( bool,oldFlipY) = false;
HXLINE( 527)		bool _hx_tmp1;
HXDLIN( 527)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 527)			_hx_tmp1 = (AnimName != this->_curAnim->name);
            		}
            		else {
HXLINE( 527)			_hx_tmp1 = false;
            		}
HXDLIN( 527)		if (_hx_tmp1) {
HXLINE( 529)			oldFlipX = this->_curAnim->flipX;
HXLINE( 530)			oldFlipY = this->_curAnim->flipY;
HXLINE( 531)			this->_curAnim->stop();
            		}
HXLINE( 533)		this->_curAnim = this->_animations->get(AnimName).StaticCast<  ::flixel::animation::FlxAnimation >();
HXLINE( 534)		this->_curAnim->play(Force,Reversed,Frame);
HXLINE( 536)		bool _hx_tmp2;
HXDLIN( 536)		if ((oldFlipX == this->_curAnim->flipX)) {
HXLINE( 536)			_hx_tmp2 = (oldFlipY != this->_curAnim->flipY);
            		}
            		else {
HXLINE( 536)			_hx_tmp2 = true;
            		}
HXDLIN( 536)		if (_hx_tmp2) {
HXLINE( 538)			this->_sprite->dirty = true;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxAnimationController_obj,play,(void))

void FlxAnimationController_obj::reset(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_547_reset)
            	HX_STACK_THIS(this)
HXLINE( 547)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 549)			this->_curAnim->reset();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,reset,(void))

void FlxAnimationController_obj::finish(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_558_finish)
            	HX_STACK_THIS(this)
HXLINE( 558)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 560)			this->_curAnim->finish();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,finish,(void))

void FlxAnimationController_obj::stop(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_569_stop)
            	HX_STACK_THIS(this)
HXLINE( 569)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 571)			this->_curAnim->stop();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,stop,(void))

void FlxAnimationController_obj::pause(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_580_pause)
            	HX_STACK_THIS(this)
HXLINE( 580)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 582)			this->_curAnim->pause();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,pause,(void))

void FlxAnimationController_obj::resume(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_591_resume)
            	HX_STACK_THIS(this)
HXLINE( 591)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 593)			this->_curAnim->paused = false;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,resume,(void))

void FlxAnimationController_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_602_reverse)
            	HX_STACK_THIS(this)
HXLINE( 602)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 604)			this->_curAnim->reverse();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,reverse,(void))

 ::flixel::animation::FlxAnimation FlxAnimationController_obj::getByName(::String Name){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_613_getByName)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Name,"Name")
HXLINE( 613)		return this->_animations->get(Name).StaticCast<  ::flixel::animation::FlxAnimation >();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,getByName,return )

void FlxAnimationController_obj::randomFrame(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_621_randomFrame)
            	HX_STACK_THIS(this)
HXLINE( 622)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 624)			this->_curAnim->stop();
HXLINE( 625)			this->_curAnim = null();
            		}
HXLINE( 627)		this->set_frameIndex(::flixel::FlxG_obj::random->_hx_int((int)0,(this->_sprite->numFrames - (int)1),null()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,randomFrame,(void))

void FlxAnimationController_obj::fireCallback(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_632_fireCallback)
            	HX_STACK_THIS(this)
HXLINE( 632)		if (hx::IsNotNull( this->callback )) {
HXLINE( 634)			HX_VAR( ::String,name);
HXDLIN( 634)			if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 634)				name = this->_curAnim->name;
            			}
            			else {
HXLINE( 634)				name = null();
            			}
HXLINE( 635)			HX_VAR( int,number);
HXDLIN( 635)			if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 635)				number = this->_curAnim->curFrame;
            			}
            			else {
HXLINE( 635)				number = this->frameIndex;
            			}
HXLINE( 636)			this->callback(name,number,this->frameIndex);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,fireCallback,(void))

void FlxAnimationController_obj::fireFinishCallback(::String name){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_643_fireFinishCallback)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(name,"name")
HXLINE( 643)		if (hx::IsNotNull( this->finishCallback )) {
HXLINE( 645)			this->finishCallback(name);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,fireFinishCallback,(void))

void FlxAnimationController_obj::byNamesHelper(::Array< int > AddTo,::Array< ::String > FrameNames){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_654_byNamesHelper)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(AddTo,"AddTo")
            	HX_STACK_ARG(FrameNames,"FrameNames")
HXLINE( 654)		HX_VARI( int,_g) = (int)0;
HXDLIN( 654)		while((_g < FrameNames->length)){
HXLINE( 654)			HX_VARI( ::String,frameName) = FrameNames->__get(_g);
HXDLIN( 654)			_g = (_g + (int)1);
HXLINE( 656)			if (this->_sprite->frames->framesHash->exists(frameName)) {
HXLINE( 658)				HX_VARI(  ::flixel::graphics::frames::FlxFrame,frameToAdd) = this->_sprite->frames->framesHash->get(frameName).StaticCast<  ::flixel::graphics::frames::FlxFrame >();
HXLINE( 659)				AddTo->push(this->_sprite->frames->frames->indexOf(frameToAdd,null()));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxAnimationController_obj,byNamesHelper,(void))

void FlxAnimationController_obj::byStringIndicesHelper(::Array< int > AddTo,::String Prefix,::Array< ::String > Indices,::String Postfix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_669_byStringIndicesHelper)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(AddTo,"AddTo")
            	HX_STACK_ARG(Prefix,"Prefix")
            	HX_STACK_ARG(Indices,"Indices")
            	HX_STACK_ARG(Postfix,"Postfix")
HXLINE( 669)		HX_VARI( int,_g) = (int)0;
HXDLIN( 669)		while((_g < Indices->length)){
HXLINE( 669)			HX_VARI( ::String,index) = Indices->__get(_g);
HXDLIN( 669)			_g = (_g + (int)1);
HXLINE( 671)			HX_VARI( ::String,name) = ((Prefix + index) + Postfix);
HXLINE( 672)			if (this->_sprite->frames->framesHash->exists(name)) {
HXLINE( 674)				HX_VARI(  ::flixel::graphics::frames::FlxFrame,frameToAdd) = this->_sprite->frames->framesHash->get(name).StaticCast<  ::flixel::graphics::frames::FlxFrame >();
HXLINE( 675)				AddTo->push(this->_sprite->frames->frames->indexOf(frameToAdd,null()));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxAnimationController_obj,byStringIndicesHelper,(void))

void FlxAnimationController_obj::byIndicesHelper(::Array< int > AddTo,::String Prefix,::Array< int > Indices,::String Postfix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_685_byIndicesHelper)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(AddTo,"AddTo")
            	HX_STACK_ARG(Prefix,"Prefix")
            	HX_STACK_ARG(Indices,"Indices")
            	HX_STACK_ARG(Postfix,"Postfix")
HXLINE( 685)		HX_VARI( int,_g) = (int)0;
HXDLIN( 685)		while((_g < Indices->length)){
HXLINE( 685)			HX_VARI( int,index) = Indices->__get(_g);
HXDLIN( 685)			_g = (_g + (int)1);
HXLINE( 687)			HX_VARI( int,indexToAdd) = this->findSpriteFrame(Prefix,index,Postfix);
HXLINE( 688)			if ((indexToAdd != (int)-1)) {
HXLINE( 690)				AddTo->push(indexToAdd);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(FlxAnimationController_obj,byIndicesHelper,(void))

void FlxAnimationController_obj::byPrefixHelper(::Array< int > AddTo,::Array< ::Dynamic> AnimFrames,::String Prefix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_699_byPrefixHelper)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(AddTo,"AddTo")
            	HX_STACK_ARG(AnimFrames,"AnimFrames")
            	HX_STACK_ARG(Prefix,"Prefix")
HXLINE( 700)		HX_VARI( ::String,name) = AnimFrames->__get((int)0).StaticCast<  ::flixel::graphics::frames::FlxFrame >()->name;
HXLINE( 701)		HX_VARI( int,postIndex) = name.indexOf(HX_(".",2e,00,00,00),Prefix.length);
HXLINE( 702)		int postFix;
HXDLIN( 702)		if ((postIndex == (int)-1)) {
HXLINE( 702)			postFix = name.length;
            		}
            		else {
HXLINE( 702)			postFix = postIndex;
            		}
HXDLIN( 702)		HX_VARI_NAME( ::String,postFix1,"postFix") = name.substring(postFix,name.length);
HXLINE( 703)		::flixel::graphics::frames::FlxFrame_obj::sort(AnimFrames,Prefix.length,postFix1.length);
HXLINE( 705)		{
HXLINE( 705)			HX_VARI( int,_g) = (int)0;
HXDLIN( 705)			while((_g < AnimFrames->length)){
HXLINE( 705)				HX_VARI(  ::flixel::graphics::frames::FlxFrame,animFrame) = AnimFrames->__get(_g).StaticCast<  ::flixel::graphics::frames::FlxFrame >();
HXDLIN( 705)				_g = (_g + (int)1);
HXLINE( 707)				AddTo->push(this->_sprite->frames->frames->indexOf(animFrame,null()));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(FlxAnimationController_obj,byPrefixHelper,(void))

void FlxAnimationController_obj::findByPrefix(::Array< ::Dynamic> AnimFrames,::String Prefix){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_716_findByPrefix)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(AnimFrames,"AnimFrames")
            	HX_STACK_ARG(Prefix,"Prefix")
HXLINE( 716)		HX_VARI( int,_g) = (int)0;
HXDLIN( 716)		HX_VARI( ::Array< ::Dynamic>,_g1) = this->_sprite->frames->frames;
HXDLIN( 716)		while((_g < _g1->length)){
HXLINE( 716)			HX_VARI(  ::flixel::graphics::frames::FlxFrame,frame) = _g1->__get(_g).StaticCast<  ::flixel::graphics::frames::FlxFrame >();
HXDLIN( 716)			_g = (_g + (int)1);
HXLINE( 718)			bool _hx_tmp;
HXDLIN( 718)			if (hx::IsNotNull( frame->name )) {
HXLINE( 718)				_hx_tmp = ::StringTools_obj::startsWith(frame->name,Prefix);
            			}
            			else {
HXLINE( 718)				_hx_tmp = false;
            			}
HXDLIN( 718)			if (_hx_tmp) {
HXLINE( 720)				AnimFrames->push(frame);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(FlxAnimationController_obj,findByPrefix,(void))

int FlxAnimationController_obj::set_frameIndex(int Frame){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_726_set_frameIndex)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Frame,"Frame")
HXLINE( 727)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 729)			Frame = hx::Mod(Frame,this->_sprite->numFrames);
HXLINE( 730)			this->_sprite->set_frame(this->_sprite->frames->frames->__get(Frame).StaticCast<  ::flixel::graphics::frames::FlxFrame >());
HXLINE( 731)			this->frameIndex = Frame;
HXLINE( 732)			if (hx::IsNotNull( this->callback )) {
HXLINE( 732)				HX_VAR( ::String,name);
HXDLIN( 732)				if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 732)					name = this->_curAnim->name;
            				}
            				else {
HXLINE( 732)					name = null();
            				}
HXDLIN( 732)				HX_VAR( int,number);
HXDLIN( 732)				if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 732)					number = this->_curAnim->curFrame;
            				}
            				else {
HXLINE( 732)					number = this->frameIndex;
            				}
HXDLIN( 732)				this->callback(name,number,this->frameIndex);
            			}
            		}
HXLINE( 735)		return this->frameIndex;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_frameIndex,return )

::String FlxAnimationController_obj::get_frameName(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_740_get_frameName)
            	HX_STACK_THIS(this)
HXLINE( 740)		return this->_sprite->frame->name;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_frameName,return )

::String FlxAnimationController_obj::set_frameName(::String Value){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_744_set_frameName)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Value,"Value")
HXLINE( 745)		bool _hx_tmp;
HXDLIN( 745)		if (hx::IsNotNull( this->_sprite->frames )) {
HXLINE( 745)			_hx_tmp = this->_sprite->frames->framesHash->exists(Value);
            		}
            		else {
HXLINE( 745)			_hx_tmp = false;
            		}
HXDLIN( 745)		if (_hx_tmp) {
HXLINE( 747)			if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 749)				this->_curAnim->stop();
HXLINE( 750)				this->_curAnim = null();
            			}
HXLINE( 753)			HX_VARI(  ::flixel::graphics::frames::FlxFrame,frame) = this->_sprite->frames->framesHash->get(Value).StaticCast<  ::flixel::graphics::frames::FlxFrame >();
HXLINE( 754)			if (hx::IsNotNull( frame )) {
HXLINE( 756)				this->set_frameIndex(this->_sprite->frames->frames->indexOf(frame,null()));
            			}
            		}
HXLINE( 760)		return Value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_frameName,return )

::String FlxAnimationController_obj::get_name(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_764_get_name)
            	HX_STACK_THIS(this)
HXLINE( 765)		HX_VARI( ::String,animName) = null();
HXLINE( 766)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 768)			animName = this->_curAnim->name;
            		}
HXLINE( 770)		return animName;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_name,return )

::String FlxAnimationController_obj::set_name(::String AnimName){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_774_set_name)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(AnimName,"AnimName")
HXLINE( 775)		this->play(AnimName,null(),null(),null());
HXLINE( 776)		return AnimName;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_name,return )

 ::flixel::animation::FlxAnimation FlxAnimationController_obj::get_curAnim(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_781_get_curAnim)
            	HX_STACK_THIS(this)
HXLINE( 781)		return this->_curAnim;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_curAnim,return )

 ::flixel::animation::FlxAnimation FlxAnimationController_obj::set_curAnim( ::flixel::animation::FlxAnimation Anim){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_785_set_curAnim)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Anim,"Anim")
HXLINE( 786)		if (hx::IsNotEq( Anim,this->_curAnim )) {
HXLINE( 788)			if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 790)				this->_curAnim->stop();
            			}
HXLINE( 793)			if (hx::IsNotNull( Anim )) {
HXLINE( 795)				Anim->play(null(),null(),null());
            			}
            		}
HXLINE( 798)		return (this->_curAnim = Anim);
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_curAnim,return )

bool FlxAnimationController_obj::get_paused(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_802_get_paused)
            	HX_STACK_THIS(this)
HXLINE( 803)		HX_VARI( bool,paused) = false;
HXLINE( 804)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 806)			paused = this->_curAnim->paused;
            		}
HXLINE( 808)		return paused;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_paused,return )

bool FlxAnimationController_obj::set_paused(bool Value){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_812_set_paused)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Value,"Value")
HXLINE( 813)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 815)			if (Value) {
HXLINE( 817)				this->_curAnim->pause();
            			}
            			else {
HXLINE( 821)				this->_curAnim->paused = false;
            			}
            		}
HXLINE( 824)		return Value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_paused,return )

bool FlxAnimationController_obj::get_finished(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_828_get_finished)
            	HX_STACK_THIS(this)
HXLINE( 829)		HX_VARI( bool,finished) = true;
HXLINE( 830)		if (hx::IsNotNull( this->_curAnim )) {
HXLINE( 832)			finished = this->_curAnim->finished;
            		}
HXLINE( 834)		return finished;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_finished,return )

bool FlxAnimationController_obj::set_finished(bool Value){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_838_set_finished)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Value,"Value")
HXLINE( 839)		bool _hx_tmp;
HXDLIN( 839)		if (Value) {
HXLINE( 839)			_hx_tmp = hx::IsNotNull( this->_curAnim );
            		}
            		else {
HXLINE( 839)			_hx_tmp = false;
            		}
HXDLIN( 839)		if (_hx_tmp) {
HXLINE( 841)			this->_curAnim->finish();
            		}
HXLINE( 843)		return Value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,set_finished,return )

int FlxAnimationController_obj::get_frames(){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_848_get_frames)
            	HX_STACK_THIS(this)
HXLINE( 848)		return this->_sprite->numFrames;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxAnimationController_obj,get_frames,return )

int FlxAnimationController_obj::getFrameIndex( ::flixel::graphics::frames::FlxFrame Frame){
            	HX_STACKFRAME(&_hx_pos_5ed655cc53689dfd_859_getFrameIndex)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(Frame,"Frame")
HXLINE( 859)		return this->_sprite->frames->frames->indexOf(Frame,null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxAnimationController_obj,getFrameIndex,return )


hx::ObjectPtr< FlxAnimationController_obj > FlxAnimationController_obj::__new( ::flixel::FlxSprite Sprite) {
	hx::ObjectPtr< FlxAnimationController_obj > __this = new FlxAnimationController_obj();
	__this->__construct(Sprite);
	return __this;
}

hx::ObjectPtr< FlxAnimationController_obj > FlxAnimationController_obj::__alloc(hx::Ctx *_hx_ctx, ::flixel::FlxSprite Sprite) {
	FlxAnimationController_obj *__this = (FlxAnimationController_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlxAnimationController_obj), true, "flixel.animation.FlxAnimationController"));
	*(void **)__this = FlxAnimationController_obj::_hx_vtable;
	__this->__construct(Sprite);
	return __this;
}

FlxAnimationController_obj::FlxAnimationController_obj()
{
}

void FlxAnimationController_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FlxAnimationController);
	HX_MARK_MEMBER_NAME(frameIndex,"frameIndex");
	HX_MARK_MEMBER_NAME(frames,"frames");
	HX_MARK_MEMBER_NAME(callback,"callback");
	HX_MARK_MEMBER_NAME(finishCallback,"finishCallback");
	HX_MARK_MEMBER_NAME(_sprite,"_sprite");
	HX_MARK_MEMBER_NAME(_curAnim,"_curAnim");
	HX_MARK_MEMBER_NAME(_animations,"_animations");
	HX_MARK_MEMBER_NAME(_prerotated,"_prerotated");
	HX_MARK_END_CLASS();
}

void FlxAnimationController_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(frameIndex,"frameIndex");
	HX_VISIT_MEMBER_NAME(frames,"frames");
	HX_VISIT_MEMBER_NAME(callback,"callback");
	HX_VISIT_MEMBER_NAME(finishCallback,"finishCallback");
	HX_VISIT_MEMBER_NAME(_sprite,"_sprite");
	HX_VISIT_MEMBER_NAME(_curAnim,"_curAnim");
	HX_VISIT_MEMBER_NAME(_animations,"_animations");
	HX_VISIT_MEMBER_NAME(_prerotated,"_prerotated");
}

hx::Val FlxAnimationController_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_name()); }
		if (HX_FIELD_EQ(inName,"play") ) { return hx::Val( play_dyn()); }
		if (HX_FIELD_EQ(inName,"stop") ) { return hx::Val( stop_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"reset") ) { return hx::Val( reset_dyn()); }
		if (HX_FIELD_EQ(inName,"pause") ) { return hx::Val( pause_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"paused") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_paused()); }
		if (HX_FIELD_EQ(inName,"frames") ) { return hx::Val( inCallProp == hx::paccAlways ? get_frames() : frames); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn()); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn()); }
		if (HX_FIELD_EQ(inName,"append") ) { return hx::Val( append_dyn()); }
		if (HX_FIELD_EQ(inName,"finish") ) { return hx::Val( finish_dyn()); }
		if (HX_FIELD_EQ(inName,"resume") ) { return hx::Val( resume_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"curAnim") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_curAnim()); }
		if (HX_FIELD_EQ(inName,"_sprite") ) { return hx::Val( _sprite); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn()); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"finished") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_finished()); }
		if (HX_FIELD_EQ(inName,"callback") ) { return hx::Val( callback); }
		if (HX_FIELD_EQ(inName,"_curAnim") ) { return hx::Val( _curAnim); }
		if (HX_FIELD_EQ(inName,"copyFrom") ) { return hx::Val( copyFrom_dyn()); }
		if (HX_FIELD_EQ(inName,"get_name") ) { return hx::Val( get_name_dyn()); }
		if (HX_FIELD_EQ(inName,"set_name") ) { return hx::Val( set_name_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frameName") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_frameName()); }
		if (HX_FIELD_EQ(inName,"getByName") ) { return hx::Val( getByName_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"frameIndex") ) { return hx::Val( frameIndex); }
		if (HX_FIELD_EQ(inName,"addByNames") ) { return hx::Val( addByNames_dyn()); }
		if (HX_FIELD_EQ(inName,"get_paused") ) { return hx::Val( get_paused_dyn()); }
		if (HX_FIELD_EQ(inName,"set_paused") ) { return hx::Val( set_paused_dyn()); }
		if (HX_FIELD_EQ(inName,"get_frames") ) { return hx::Val( get_frames_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_animations") ) { return hx::Val( _animations); }
		if (HX_FIELD_EQ(inName,"_prerotated") ) { return hx::Val( _prerotated); }
		if (HX_FIELD_EQ(inName,"addByPrefix") ) { return hx::Val( addByPrefix_dyn()); }
		if (HX_FIELD_EQ(inName,"randomFrame") ) { return hx::Val( randomFrame_dyn()); }
		if (HX_FIELD_EQ(inName,"get_curAnim") ) { return hx::Val( get_curAnim_dyn()); }
		if (HX_FIELD_EQ(inName,"set_curAnim") ) { return hx::Val( set_curAnim_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"addByIndices") ) { return hx::Val( addByIndices_dyn()); }
		if (HX_FIELD_EQ(inName,"fireCallback") ) { return hx::Val( fireCallback_dyn()); }
		if (HX_FIELD_EQ(inName,"findByPrefix") ) { return hx::Val( findByPrefix_dyn()); }
		if (HX_FIELD_EQ(inName,"get_finished") ) { return hx::Val( get_finished_dyn()); }
		if (HX_FIELD_EQ(inName,"set_finished") ) { return hx::Val( set_finished_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"appendByNames") ) { return hx::Val( appendByNames_dyn()); }
		if (HX_FIELD_EQ(inName,"byNamesHelper") ) { return hx::Val( byNamesHelper_dyn()); }
		if (HX_FIELD_EQ(inName,"get_frameName") ) { return hx::Val( get_frameName_dyn()); }
		if (HX_FIELD_EQ(inName,"set_frameName") ) { return hx::Val( set_frameName_dyn()); }
		if (HX_FIELD_EQ(inName,"getFrameIndex") ) { return hx::Val( getFrameIndex_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"finishCallback") ) { return hx::Val( finishCallback); }
		if (HX_FIELD_EQ(inName,"appendByPrefix") ) { return hx::Val( appendByPrefix_dyn()); }
		if (HX_FIELD_EQ(inName,"byPrefixHelper") ) { return hx::Val( byPrefixHelper_dyn()); }
		if (HX_FIELD_EQ(inName,"set_frameIndex") ) { return hx::Val( set_frameIndex_dyn()); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"clearPrerotated") ) { return hx::Val( clearPrerotated_dyn()); }
		if (HX_FIELD_EQ(inName,"clearAnimations") ) { return hx::Val( clearAnimations_dyn()); }
		if (HX_FIELD_EQ(inName,"appendByIndices") ) { return hx::Val( appendByIndices_dyn()); }
		if (HX_FIELD_EQ(inName,"findSpriteFrame") ) { return hx::Val( findSpriteFrame_dyn()); }
		if (HX_FIELD_EQ(inName,"byIndicesHelper") ) { return hx::Val( byIndicesHelper_dyn()); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"createPrerotated") ) { return hx::Val( createPrerotated_dyn()); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"destroyAnimations") ) { return hx::Val( destroyAnimations_dyn()); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"addByStringIndices") ) { return hx::Val( addByStringIndices_dyn()); }
		if (HX_FIELD_EQ(inName,"fireFinishCallback") ) { return hx::Val( fireFinishCallback_dyn()); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"appendByStringIndices") ) { return hx::Val( appendByStringIndices_dyn()); }
		if (HX_FIELD_EQ(inName,"byStringIndicesHelper") ) { return hx::Val( byStringIndicesHelper_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FlxAnimationController_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_name(inValue) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"paused") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_paused(inValue) ); }
		if (HX_FIELD_EQ(inName,"frames") ) { frames=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"curAnim") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_curAnim(inValue) ); }
		if (HX_FIELD_EQ(inName,"_sprite") ) { _sprite=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"finished") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_finished(inValue) ); }
		if (HX_FIELD_EQ(inName,"callback") ) { callback=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_curAnim") ) { _curAnim=inValue.Cast<  ::flixel::animation::FlxAnimation >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frameName") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_frameName(inValue) ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"frameIndex") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_frameIndex(inValue) );frameIndex=inValue.Cast< int >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_animations") ) { _animations=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_prerotated") ) { _prerotated=inValue.Cast<  ::flixel::animation::FlxPrerotatedAnimation >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"finishCallback") ) { finishCallback=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxAnimationController_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("curAnim","\xb1","\xf7","\x86","\xab"));
	outFields->push(HX_HCSTRING("frameIndex","\xa5","\xcf","\x3a","\xa1"));
	outFields->push(HX_HCSTRING("frameName","\x18","\x31","\x80","\x36"));
	outFields->push(HX_HCSTRING("name","\x4b","\x72","\xff","\x48"));
	outFields->push(HX_HCSTRING("paused","\xae","\x40","\x84","\xef"));
	outFields->push(HX_HCSTRING("finished","\x72","\x93","\x0e","\x95"));
	outFields->push(HX_HCSTRING("frames","\xa6","\xaf","\x85","\xac"));
	outFields->push(HX_HCSTRING("_sprite","\xa4","\xed","\x0c","\x32"));
	outFields->push(HX_HCSTRING("_curAnim","\x32","\x51","\x3f","\xe5"));
	outFields->push(HX_HCSTRING("_animations","\x0e","\x02","\xa6","\x55"));
	outFields->push(HX_HCSTRING("_prerotated","\x05","\x51","\xa3","\x64"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FlxAnimationController_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(FlxAnimationController_obj,frameIndex),HX_HCSTRING("frameIndex","\xa5","\xcf","\x3a","\xa1")},
	{hx::fsInt,(int)offsetof(FlxAnimationController_obj,frames),HX_HCSTRING("frames","\xa6","\xaf","\x85","\xac")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(FlxAnimationController_obj,callback),HX_HCSTRING("callback","\xc5","\x99","\x06","\x7f")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(FlxAnimationController_obj,finishCallback),HX_HCSTRING("finishCallback","\x38","\xa1","\xbc","\xb4")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(FlxAnimationController_obj,_sprite),HX_HCSTRING("_sprite","\xa4","\xed","\x0c","\x32")},
	{hx::fsObject /*::flixel::animation::FlxAnimation*/ ,(int)offsetof(FlxAnimationController_obj,_curAnim),HX_HCSTRING("_curAnim","\x32","\x51","\x3f","\xe5")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(FlxAnimationController_obj,_animations),HX_HCSTRING("_animations","\x0e","\x02","\xa6","\x55")},
	{hx::fsObject /*::flixel::animation::FlxPrerotatedAnimation*/ ,(int)offsetof(FlxAnimationController_obj,_prerotated),HX_HCSTRING("_prerotated","\x05","\x51","\xa3","\x64")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *FlxAnimationController_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxAnimationController_obj_sMemberFields[] = {
	HX_HCSTRING("frameIndex","\xa5","\xcf","\x3a","\xa1"),
	HX_HCSTRING("frames","\xa6","\xaf","\x85","\xac"),
	HX_HCSTRING("callback","\xc5","\x99","\x06","\x7f"),
	HX_HCSTRING("finishCallback","\x38","\xa1","\xbc","\xb4"),
	HX_HCSTRING("_sprite","\xa4","\xed","\x0c","\x32"),
	HX_HCSTRING("_curAnim","\x32","\x51","\x3f","\xe5"),
	HX_HCSTRING("_animations","\x0e","\x02","\xa6","\x55"),
	HX_HCSTRING("_prerotated","\x05","\x51","\xa3","\x64"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("copyFrom","\xbf","\x0b","\x61","\xc8"),
	HX_HCSTRING("createPrerotated","\x02","\x02","\x47","\xc7"),
	HX_HCSTRING("destroyAnimations","\x89","\x22","\x77","\xd5"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("clearPrerotated","\xd3","\x4b","\xbe","\x18"),
	HX_HCSTRING("clearAnimations","\xdc","\xfc","\xc0","\x09"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("append","\xda","\xe1","\xd3","\x8f"),
	HX_HCSTRING("addByNames","\x50","\x4a","\xa2","\xdd"),
	HX_HCSTRING("appendByNames","\xb7","\xb3","\x38","\xaf"),
	HX_HCSTRING("addByStringIndices","\xde","\xf4","\x20","\x5c"),
	HX_HCSTRING("appendByStringIndices","\x45","\x9d","\xe9","\x96"),
	HX_HCSTRING("addByIndices","\xaf","\xb3","\x3b","\x79"),
	HX_HCSTRING("appendByIndices","\xd6","\x84","\x4c","\xac"),
	HX_HCSTRING("findSpriteFrame","\x2f","\x8a","\x2e","\xfe"),
	HX_HCSTRING("addByPrefix","\x0a","\x56","\x9c","\xa1"),
	HX_HCSTRING("appendByPrefix","\xc3","\x26","\xa2","\x33"),
	HX_HCSTRING("play","\xf4","\x2d","\x5a","\x4a"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	HX_HCSTRING("finish","\x53","\x40","\x7f","\x86"),
	HX_HCSTRING("stop","\x02","\xf0","\x5b","\x4c"),
	HX_HCSTRING("pause","\xf6","\xd6","\x57","\xbd"),
	HX_HCSTRING("resume","\xad","\x69","\x84","\x08"),
	HX_HCSTRING("reverse","\x22","\x39","\xfc","\x1a"),
	HX_HCSTRING("getByName","\xf8","\xb4","\xa4","\x8a"),
	HX_HCSTRING("randomFrame","\x2a","\x9b","\x18","\x71"),
	HX_HCSTRING("fireCallback","\x9b","\xcf","\x9f","\x40"),
	HX_HCSTRING("fireFinishCallback","\x8e","\xdb","\x9c","\xe3"),
	HX_HCSTRING("byNamesHelper","\xbf","\xfa","\xde","\x2f"),
	HX_HCSTRING("byStringIndicesHelper","\xcd","\x4c","\xc0","\x21"),
	HX_HCSTRING("byIndicesHelper","\x9e","\x6f","\x1b","\x71"),
	HX_HCSTRING("byPrefixHelper","\x17","\xcd","\x67","\x83"),
	HX_HCSTRING("findByPrefix","\x22","\x0c","\xbe","\x5d"),
	HX_HCSTRING("set_frameIndex","\x62","\x40","\x50","\x37"),
	HX_HCSTRING("get_frameName","\xef","\x04","\xe4","\xf7"),
	HX_HCSTRING("set_frameName","\xfb","\xe6","\xe9","\x3c"),
	HX_HCSTRING("get_name","\xd4","\x2d","\xba","\xc8"),
	HX_HCSTRING("set_name","\x48","\x87","\x17","\x77"),
	HX_HCSTRING("get_curAnim","\xc8","\x57","\x81","\x31"),
	HX_HCSTRING("set_curAnim","\xd4","\x5e","\xee","\x3b"),
	HX_HCSTRING("get_paused","\x77","\xb0","\x0b","\xe0"),
	HX_HCSTRING("set_paused","\xeb","\x4e","\x89","\xe3"),
	HX_HCSTRING("get_finished","\x7b","\x47","\x28","\x4a"),
	HX_HCSTRING("set_finished","\xef","\x6a","\x21","\x5f"),
	HX_HCSTRING("get_frames","\x6f","\x1f","\x0d","\x9d"),
	HX_HCSTRING("getFrameIndex","\xdb","\x2b","\xad","\xfd"),
	::String(null()) };

static void FlxAnimationController_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxAnimationController_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxAnimationController_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxAnimationController_obj::__mClass,"__mClass");
};

#endif

hx::Class FlxAnimationController_obj::__mClass;

void FlxAnimationController_obj::__register()
{
	hx::Object *dummy = new FlxAnimationController_obj;
	FlxAnimationController_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("flixel.animation.FlxAnimationController","\x0a","\x0a","\xda","\x33");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxAnimationController_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FlxAnimationController_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FlxAnimationController_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxAnimationController_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxAnimationController_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxAnimationController_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace animation
